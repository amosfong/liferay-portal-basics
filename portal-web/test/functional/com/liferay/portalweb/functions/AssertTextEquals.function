@default = "assertTextEquals"
@summary = "Assert that '${locator1}' equals the value '${value1}'"
definition {

	function assertPartialText(locator1, value1) {
		WaitForSPARefresh();

		selenium.waitForVisible(${locator1}, "false");

		var regex = RegexUtil.escapeRegexChars(${value1});

		selenium.waitForTextMatches(${locator1}, "(?iu).*${regex}.*");

		selenium.assertTextMatches(${locator1}, "(?iu).*${regex}.*");

		selenium.assertJavaScriptErrors("true");

		selenium.assertLiferayErrors();
	}

	function assertPartialTextAceEditor(locator1, value1) {
		WaitForSPARefresh();

		selenium.waitForVisible(${locator1}, "false");

		selenium.waitForPartialTextAceEditor(${locator1}, ${value1});

		selenium.assertPartialTextAceEditor(${locator1}, ${value1});

		selenium.assertJavaScriptErrors("true");

		selenium.assertLiferayErrors();
	}

	function assertPartialTextCaseSensitive(locator1, value1) {
		selenium.waitForVisible(${locator1}, "false");

		var regex = RegexUtil.escapeRegexChars(${value1});

		selenium.waitForTextMatches(${locator1}, ".*${regex}.*");

		selenium.assertTextMatches(${locator1}, ".*${regex}.*");
	}

	function assertText(locator1, value1) {
		WaitForSPARefresh();

		selenium.waitForVisible(${locator1}, "false");

		var regex = RegexUtil.escapeRegexChars(${value1});

		selenium.waitForTextMatches(${locator1}, "(?iu)${regex}");

		selenium.assertTextMatches(${locator1}, "(?iu)${regex}");

		selenium.assertJavaScriptErrors("true");

		selenium.assertLiferayErrors();
	}

	function assertTextCaseSensitive(locator1, value1) {
		WaitForSPARefresh();

		selenium.waitForVisible(${locator1}, "false");

		selenium.waitForText(${locator1}, ${value1});

		selenium.assertText(${locator1}, ${value1});

		selenium.assertJavaScriptErrors("true");

		selenium.assertLiferayErrors();
	}

	function assertTextEquals(locator1) {
		WaitForSPARefresh();

		if (contains(${locator1}, "/input")) {
			AssertTextEquals.assertValue();
		}
		else {
			AssertTextEquals.assertText();
		}
	}

	function assertValue(locator1, value1) {
		WaitForSPARefresh();

		selenium.waitForVisible(${locator1}, "false");

		selenium.waitForValue(${locator1}, ${value1});

		selenium.assertValue(${locator1}, ${value1});

		selenium.assertJavaScriptErrors("true");

		selenium.assertLiferayErrors();
	}

}