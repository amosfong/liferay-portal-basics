@component-name = "portal-search"
definition {

	property portal.release = "true";
	property portal.suite.search.engine = "solr";
	property portal.upstream = "true";
	property solr.enabled = "true";
	property testray.main.component.name = "Web Search";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@priority = 3
	test AssertBasicFacetSelection {
		JSONWebcontent.addWebContent(
			assetTagNames = "fruit",
			content = "WC WebContent Content 1",
			groupName = "Guest",
			title = "apple");

		JSONBlog.addEntry(
			entryContent = "Blog Entry Content",
			entryTitle = "apple");

		Navigator.openURL();

		SearchPage.searchEmbedded(searchTerm = "apple");

		Portlet.gotoPortletOptions(
			portletName = "Search Options",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		AssertNotChecked(
			checkboxName = "Basic Facet Selection",
			locator1 = "Checkbox#ANY_CHECKBOX");

		IFrame.closeFrame();

		AssertElementPresent(
			checkboxName = "fruit",
			locator1 = "Checkbox#ANY_CHECKBOX");

		SearchFacets.checkFacetTerm(
			facetName = "Type Facet",
			facetTerm = "Blogs Entry");

		AssertElementNotPresent(
			checkboxName = "fruit",
			locator1 = "Checkbox#ANY_CHECKBOX");

		Refresh();

		FormFields.viewCheckboxChecked(fieldName = "Blogs Entry");

		AssertElementNotPresent(
			checkboxName = "fruit",
			locator1 = "Checkbox#ANY_CHECKBOX");

		SearchFacets.uncheckFacetTerm(
			facetName = "Type Facet",
			facetTerm = "Blogs Entry");

		AssertElementPresent(
			checkboxName = "fruit",
			locator1 = "Checkbox#ANY_CHECKBOX");

		SearchPage.configureSearchOptions(basicFacetSelection = "true");

		SearchPage.searchEmbedded(searchTerm = "apple");

		AssertElementPresent(
			checkboxName = "fruit",
			locator1 = "Checkbox#ANY_CHECKBOX");

		SearchFacets.checkFacetTerm(
			facetName = "Type Facet",
			facetTerm = "Blogs Entry");

		AssertElementPresent(
			checkboxName = "fruit",
			locator1 = "Checkbox#ANY_CHECKBOX");

		SearchFacets.checkFacetTerm(
			facetName = "Tag Facet",
			facetTerm = "fruit");

		SearchResults.viewNoSearchResults(searchTerm = "apple");

		Refresh();

		FormFields.viewCheckboxChecked(fieldName = "Blogs Entry");

		FormFields.viewCheckboxChecked(fieldName = "fruit");

		SearchResults.viewNoSearchResults(searchTerm = "apple");
	}

	@description = "This is a use case for LPS-92008."
	@priority = 3
	test AssertGuestCannotSeeEmptySearchWidgets {
		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Search Page");

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/web/guest/search-page");

		SearchPage.addWidgets(
			layoutName = "Search Page",
			searchPortletList = "Category Facet,Custom Facet,Custom Filter,Folder Facet,Low Level Search Options,Modified Facet,Search Insights,Search Options,Search Results,Site Facet,Suggestions,Tag Facet,Type Facet,User Facet,Search Bar");

		SearchPage.addWidgetsOnWidgetPageViaUI(searchPortletList = "Sort");

		var testRunEnvironment = PropsUtil.get("test.run.environment");

		if (${testRunEnvironment} == "EE") {
			SearchPage.addWidgets(
				column = 2,
				layoutName = "Search Page",
				searchPortletList = "Similar Results");

			Refresh();

			AssertElementPresent(
				key_portletName = "Similar Results",
				locator1 = "Home#PORTLET");
		}

		User.logoutPG();

		SearchPage.openSearchPage();

		for (var portletName : list "Category Facet,Custom Facet,Custom Filter,Folder Facet,Low Level Search Options,Modified Facet,Search Insights,Search Options,Search Results,Similar Results,Site Facet,Sort,Suggestions,Tag Facet,Type Facet,User Facet") {
			Portlet.viewNoSpecificPG(portletName = ${portletName});
		}

		Navigator.openSpecificURL(url = "${portalURL}/web/guest/search-page");

		for (var portletName : list "Category Facet,Custom Facet,Custom Filter,Folder Facet,Low Level Search Options,Modified Facet,Search Insights,Search Options,Search Results,Similar Results,Site Facet,Sort,Suggestions,Tag Facet,Type Facet,User Facet") {
			Portlet.viewNoSpecificPG(portletName = ${portletName});
		}
	}

	@priority = 3
	test AssertNonAdminsCannotAddCertainWidgets {
		property app.server.types = "tomcat";

		JSONRole.addRegularRole(
			roleKey = "Can Add Widgets",
			roleTitle = "Can Add Widgets");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "MANAGE_LAYOUTS",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Can Add Widgets");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONRole.assignRoleToUser(
			roleTitle = "Can Add Widgets",
			userEmailAddress = "userea@liferay.com");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		UserBar.gotoDropdownItem(dropdownItem = "My Profile");

		Portlet.viewCannotAddPG(portletName = "Low Level Search Options");

		Refresh();

		Portlet.viewCannotAddPG(portletName = "Search Insights");
	}

	@priority = 4
	test SearchUsingCustomFacet {
		JSONWebcontent.addWebContent(
			content = "WC Content",
			groupName = "Guest",
			title = "WebContent Title 1");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContent.viewVersion(
			version = "1.0",
			webContentTitle = "WebContent Title 1");

		SearchPage.addWidgets(searchPortletList = "Custom Facet");

		SearchPage.openSearchPage();

		SearchFacets.configureCustomFacet(aggregationField = "version");

		SearchPage.searchEmbedded(searchTerm = "WebContent");

		SearchResults.viewSearchResults(
			searchAssetTitle = "WebContent Title 1",
			searchAssetType = "Web Content Article",
			searchTerm = "WebContent");

		AssertElementPresent(
			key_checkboxName = "1.0",
			key_facetName = "Custom Facet",
			locator1 = "SearchPage#FACET_CHECKBOX_LABEL_SPECIFIC");

		Click(
			key_checkboxName = "1.0",
			key_facetName = "Custom Facet",
			locator1 = "SearchPage#FACET_CHECKBOX_LABEL_SPECIFIC");

		SearchResults.viewSearchResults(
			searchAssetTitle = "WebContent Title 1",
			searchAssetType = "Web Content Article",
			searchTerm = "WebContent");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContent Title 1");

		WebContent.addCP(webContentTitle = "WebContent Title 1.1");

		PortletEntry.publish();

		WebContent.viewVersion(
			version = "1.1",
			webContentTitle = "WebContent Title 1.1");

		Navigator.openURL();

		SearchPage.searchEmbedded(searchTerm = "WebContent");

		SearchResults.viewSearchResults(
			searchAssetTitle = "WebContent Title 1.1",
			searchAssetType = "Web Content Article",
			searchTerm = "WebContent");

		AssertElementPresent(
			key_checkboxName = "1.1",
			key_facetName = "Custom Facet",
			locator1 = "SearchPage#FACET_CHECKBOX_LABEL_SPECIFIC");

		Click(
			key_checkboxName = "1.1",
			key_facetName = "Custom Facet",
			locator1 = "SearchPage#FACET_CHECKBOX_LABEL_SPECIFIC");

		SearchResults.viewSearchResults(
			searchAssetTitle = "WebContent Title 1.1",
			searchAssetType = "Web Content Article",
			searchTerm = "WebContent");
	}

	@priority = 3
	test SearchWithModifiedFacet {
		JSONWebcontent.addWebContent(
			content = "WC Content",
			groupName = "Guest",
			title = "WC Title");

		SearchPage.searchEmbedded(searchTerm = "WC Title");

		Portlet.gotoPortletOptions(
			portletName = "Modified Facet",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Click(locator1 = "Button#ADD_ROW");

		Type(
			key_fieldLabel = "Label",
			locator1 = "Search#MODIFIED_FACET_CONFIG_EMPTY_FIELD",
			value1 = "Past 23 Hours");

		Type(
			key_fieldLabel = "Range",
			locator1 = "Search#MODIFIED_FACET_CONFIG_EMPTY_FIELD",
			value1 = "[past-24-hours TO past-hour]");

		PortletEntry.save();

		IFrame.closeFrame();

		// Workaround for LPS-97383

		Refresh();

		AssertTextEquals.assertPartialText(
			locator1 = "Search#MODIFIED_FACET_SELECTION",
			range = "Past 23 Hours",
			value1 = "Past 23 Hours");

		Click(
			locator1 = "Search#MODIFIED_FACET_SELECTION",
			range = "Past 23 Hours");

		SearchResults.viewNoSearchResults(searchTerm = "WC Title");

		Portlet.gotoPortletOptions(
			portletName = "Modified Facet",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Click(
			key_rowIndexNumber = 2,
			locator1 = "Button#DELETE_ROW_N");

		PortletEntry.save();

		IFrame.closeFrame();

		// Workaround for LPS-97383

		Refresh();

		AssertElementNotPresent(
			locator1 = "Search#MODIFIED_FACET_SELECTION",
			range = "Past 23 Hours");

		SearchResults.viewSearchResults(
			searchAssetTitle = "WC Title",
			searchAssetType = "Web Content Article",
			searchTerm = "WC Title");

		Click(
			locator1 = "Search#MODIFIED_FACET_SELECTION",
			range = "Custom Range");

		Click(locator1 = "Search#CUSTOM_RANGE_FROM");

		Click(locator1 = "YUICalendarWidget#NEXT_MONTH_ARROW");

		Click(locator1 = "YUICalendarWidget#NEXT_MONTH_ARROW");

		Click(
			key_day = 1,
			locator1 = "YUICalendarWidget#DATEPICKER_SPECIFIC_DAY");

		AssertElementPresent(locator1 = "Message#ERROR_SELECT_VALID_DATE_RANGE");

		AssertVisible(locator1 = "Button#SEARCH_DISABLED");

		Click(locator1 = "Search#CUSTOM_RANGE_FROM");

		Click(locator1 = "YUICalendarWidget#PREVIOUS_MONTH_ARROW");

		Click(locator1 = "YUICalendarWidget#PREVIOUS_MONTH_ARROW");

		Click(
			key_day = 1,
			locator1 = "YUICalendarWidget#DATEPICKER_SPECIFIC_DAY");

		Click(locator1 = "Button#SEARCH");

		SearchResults.viewSearchResults(
			searchAssetTitle = "WC Title",
			searchAssetType = "Web Content Article",
			searchTerm = "WC Title");
	}

	@priority = 5
	test ViewMultipleFacetURLs {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONFolder.moveFolderToTrash(
			folderName = "Provided by Liferay",
			groupName = "Guest");

		JSONCategory.addVocabulary(
			groupName = "Guest",
			title = "Fruit Vocabulary");

		var organicCategoryId = JSONCategory.addCategory(
			groupName = "Guest",
			title = "organic",
			vocabularyName = "Fruit Vocabulary");

		JSONWebcontent.addFolder(
			folderName = "WC Folder Name 1",
			groupName = "Guest");

		JSONWebcontent.addWebContent(
			assetCategoryIds = ${organicCategoryId},
			assetTagNames = "ripe",
			content = "WC WebContent Content 1",
			folderName = "WC Folder Name 1",
			groupName = "Guest",
			title = "apple");

		JSONWebcontent.addFolder(
			folderName = "WC Folder Name 2",
			groupName = "Guest");

		JSONWebcontent.addWebContent(
			assetTagNames = "fresh",
			content = "WC WebContent Content 2",
			folderName = "WC Folder Name 2",
			groupName = "Guest",
			title = "orange");

		HeadlessSite.addSite(siteName = "New Site");

		JSONBlog.addEntry(
			assetTagNames = "sweet",
			entryContent = "Apple Blog Entry Content",
			entryTitle = "apple",
			groupName = "New Site");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea@liferay.com");

		JSONDocument.addFileWithUploadedFile(
			assetCategoryIds = ${organicCategoryId},
			assetTagNames = "fresh,ripe,test",
			dmDocumentTitle = "banana",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg",
			userEmailAddress = "userea@liferay.com");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Search Page");

		SearchPage.addWidgets(
			layoutName = "Search Page",
			searchPortletList = "Category Facet,Folder Facet,Site Facet,Tag Facet,Type Facet,User Facet");

		SearchPage.addWidgets(
			column = 2,
			layoutName = "Search Page",
			searchPortletList = "Search Bar,Search Options,Search Results");

		Navigator.gotoPage(pageName = "Search Page");

		SearchPage.configureSearchBarWidget(searchScope = "Everything");

		SearchPage.configureSearchOptions(
			allowEmptySearches = "true",
			basicFacetSelection = "true");

		SearchPage.searchWidget(searchTerm = "apple");

		SearchResults.viewMultipleSearchResults(
			resultsList = "apple/Blogs Entry,apple/Web Content Article",
			searchTerm = "apple");

		SearchResults.viewMultipleSearchResultsNotPresent(noResultsList = "banana/Document,orange/Web Content Article");

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Type Facet",
			facetTerm = "Web Content Article",
			searchPage = "Search Page",
			searchTerm = "apple");

		SearchResults.viewSearchResults(
			searchAssetTitle = "apple",
			searchAssetType = "Web Content Article",
			searchTerm = "apple");

		SearchResults.viewMultipleSearchResultsNotPresent(noResultsList = "apple/Blogs Entry,banana/Document,orange/Web Content Article");

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Type Facet",
			facetTerm = "Blogs Entry",
			searchURL = ${testSearchURL});

		SearchResults.viewMultipleSearchResults(
			resultsList = "apple/Blogs Entry,apple/Web Content Article",
			searchTerm = "apple");

		SearchResults.viewMultipleSearchResultsNotPresent(noResultsList = "banana/Document,orange/Web Content Article");

		var testSearchURL = SearchFacets.uncheckFacetTermAndViewURL(
			facetName = "Type Facet",
			facetTerm = "Web Content Article",
			searchURL = ${testSearchURL});

		SearchResults.viewSearchResults(
			searchAssetTitle = "apple",
			searchAssetType = "Blogs Entry",
			searchTerm = "apple");

		SearchResults.viewMultipleSearchResultsNotPresent(noResultsList = "apple/Web Content Article,banana/Document,orange/Web Content Article");

		var testSearchURL = SearchFacets.clearAllFacetsAndViewURL(searchURL = ${testSearchURL});

		SearchPage.searchWidget(searchTerm = "test");

		var testSearchURL = SearchPage.getSearchTermURL(
			searchPage = "Search Page",
			searchTerm = "test");

		AssertLocation(value1 = ${testSearchURL});

		SearchResults.viewMultipleSearchResults(
			resultsList = "apple/Blogs Entry,apple/Web Content Article,banana/Document,orange/Web Content Article",
			searchTerm = "test");

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Category Facet",
			facetTerm = "organic",
			searchURL = ${testSearchURL},
			termURLValue = ${organicCategoryId});

		SearchResults.viewMultipleSearchResults(
			resultsList = "apple/Web Content Article,banana/Document",
			searchTerm = "test");

		SearchResults.viewMultipleSearchResultsNotPresent(noResultsList = "apple/Blogs Entry,orange/Web Content Article");

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "User Facet",
			facetTerm = "userfn userln",
			searchURL = ${testSearchURL});

		SearchResults.viewSearchResults(
			searchAssetTitle = "banana",
			searchAssetType = "Document",
			searchTerm = "test");

		SearchResults.viewMultipleSearchResultsNotPresent(noResultsList = "apple/Blogs Entry,apple/Web Content Article,orange/Web Content Article");

		var testSearchURL = SearchFacets.uncheckFacetTermAndViewURL(
			facetName = "User Facet",
			facetTerm = "userfn userln",
			searchURL = ${testSearchURL});

		SearchResults.viewMultipleSearchResults(
			resultsList = "apple/Web Content Article,banana/Document",
			searchTerm = "test");

		SearchResults.viewMultipleSearchResultsNotPresent(noResultsList = "apple/Blogs Entry,orange/Web Content Article");

		var testSearchURL = SearchFacets.clearAllFacetsAndViewURL(searchURL = ${testSearchURL});

		SearchPage.searchWidget(searchTerm = "test");

		var testSearchURL = SearchPage.getSearchTermURL(
			searchPage = "Search Page",
			searchTerm = "test");

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Tag Facet",
			facetTerm = "sweet",
			searchURL = ${testSearchURL});

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Tag Facet",
			facetTerm = "fresh",
			searchURL = ${testSearchURL});

		SearchResults.viewMultipleSearchResults(
			resultsList = "apple/Blogs Entry,banana/Document,orange/Web Content Article",
			searchTerm = "test");

		SearchResults.viewSearchResultNotPresent(
			searchAssetTitle = "apple",
			searchAssetType = "Web Content Article");

		var liferaySiteId = JSONGroupAPI._getGroupIdByName(
			groupName = "Guest",
			site = "true");
		var siteName = TestCase.getSiteName();

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Site Facet",
			facetTerm = ${siteName},
			searchURL = ${testSearchURL},
			termURLValue = ${liferaySiteId});
		var newSiteId = JSONGroupAPI._getGroupIdByName(
			groupName = "New Site",
			site = "true");

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Site Facet",
			facetTerm = "New Site",
			searchURL = ${testSearchURL},
			termURLValue = ${newSiteId});

		SearchResults.viewMultipleSearchResults(
			resultsList = "apple/Blogs Entry,banana/Document,orange/Web Content Article",
			searchTerm = "test");

		SearchResults.viewSearchResultNotPresent(
			searchAssetTitle = "apple",
			searchAssetType = "Web Content Article");

		var testSearchURL = SearchFacets.uncheckFacetTermAndViewURL(
			facetName = "Site Facet",
			facetTerm = "New Site",
			searchURL = ${testSearchURL},
			termURLValue = ${newSiteId});

		SearchResults.viewMultipleSearchResults(
			resultsList = "banana/Document,orange/Web Content Article",
			searchTerm = "test");

		SearchResults.viewMultipleSearchResultsNotPresent(noResultsList = "apple/Blogs Entry,apple/Web Content Article");

		var webContentFolderId2 = JSONWebcontent.getFolderIdByFolderName(
			folderName = "WC Folder Name 2",
			groupName = "Guest");

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Folder Facet",
			facetTerm = "WC Folder Name 2",
			searchURL = ${testSearchURL},
			termURLValue = ${webContentFolderId2});

		SearchResults.viewSearchResults(
			searchAssetTitle = "orange",
			searchAssetType = "Web Content Article",
			searchTerm = "test");

		SearchResults.viewMultipleSearchResultsNotPresent(noResultsList = "apple/Blogs Entry,apple/Web Content Article,banana/Document");

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Tag Facet",
			facetTerm = "ripe",
			searchURL = ${testSearchURL});

		SearchResults.viewSearchResults(
			searchAssetTitle = "orange",
			searchAssetType = "Web Content Article",
			searchTerm = "test");

		SearchResults.viewMultipleSearchResultsNotPresent(noResultsList = "apple/Blogs Entry,apple/Web Content Article,banana/Document");

		var testSearchURL = SearchFacets.uncheckFacetTermAndViewURL(
			facetName = "Folder Facet",
			facetTerm = "WC Folder Name 2",
			searchURL = ${testSearchURL},
			termURLValue = ${webContentFolderId2});

		var testSearchURL = SearchFacets.uncheckFacetTermAndViewURL(
			facetName = "Tag Facet",
			facetTerm = "fresh",
			searchURL = ${testSearchURL});

		SearchResults.viewMultipleSearchResults(
			resultsList = "apple/Web Content Article,banana/Document",
			searchTerm = "test");

		SearchResults.viewMultipleSearchResultsNotPresent(noResultsList = "apple/Blogs Entry,orange/Web Content Article");

		var testSearchURL = SearchFacets.clearAllFacetsAndViewURL(searchURL = ${testSearchURL});

		SearchPage.searchWidget(searchTerm = "organic");

		var testSearchURL = SearchPage.getSearchTermURL(
			searchPage = "Search Page",
			searchTerm = "organic");

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Category Facet",
			facetTerm = "organic",
			searchURL = ${testSearchURL},
			termURLValue = ${organicCategoryId});
		var webContentFolderId1 = JSONWebcontent.getFolderIdByFolderName(
			folderName = "WC Folder Name 1",
			groupName = "Guest");

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Folder Facet",
			facetTerm = "WC Folder Name 1",
			searchURL = ${testSearchURL},
			termURLValue = ${webContentFolderId1});

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Site Facet",
			facetTerm = ${siteName},
			searchURL = ${testSearchURL},
			termURLValue = ${liferaySiteId});

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Tag Facet",
			facetTerm = "ripe",
			searchURL = ${testSearchURL});

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "Type Facet",
			facetTerm = "Web Content Article",
			searchURL = ${testSearchURL});

		var testSearchURL = SearchFacets.checkFacetTermAndViewURL(
			facetName = "User Facet",
			facetTerm = "Test Test",
			searchURL = ${testSearchURL});

		SearchResults.viewSearchResults(
			searchAssetTitle = "apple",
			searchAssetType = "Web Content Article",
			searchTerm = "organic");
	}

}