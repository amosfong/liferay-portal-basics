@component-name = "portal-upgrades"
definition {

	property app.server.types = "tomcat";
	property aws.store.enabled = "true";
	property database.bare.enabled = "true";
	property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver";
	property minimum.slave.ram = "24";
	property portal.release = "true";
	property portal.smoke.upgrades = "false";
	property portal.upstream = "true";
	property skip.start.app.server = "true";
	property test.assert.warning.exceptions = "true";
	property test.liferay.virtual.instance = "false";
	property test.run.type = "single";
	property testray.main.component.name = "Database Upgrade Framework";

	setUp {
		Upgrade.startReleasedBundle();
	}

	@ignore = "true"
	@priority = 4
	test AutoUpgradeFromLatest7413Update {
		User.firstLoginUI(
			password = PropsUtil.get("default.admin.password"),
			specificURL = "http://localhost:8080",
			userEmailAddress = "test@liferay.com");

		HeadlessSite.addSite(
			portalURL = "http://localhost:8080",
			siteName = "Site Name");

		var bucketId = PropsUtil.get("s3.bucket.id");
		var companyId = JSONCompany.getCompanyId();
		var groupId = JSONGroupAPI._getGroupIdByName(
			groupName = "Site Name",
			site = "true");

		AntCommands.runCommand("build-test-s3-store.xml", "assert-no-document-in-bucket -DcompanyId=${companyId} -DgroupId=${groupId} -Ds3.bucket.id=${bucketId}");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "Document1");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Image1",
			groupName = "Site Name",
			siteURLKey = "site-name");

		Upgrade.restoreOriginalBundleAndUpgrade();

		AntCommands.runCommand("build-test-s3-store.xml", "assert-document-in-bucket -DcompanyId=${companyId} -DgroupId=${groupId} -Ds3.bucket.id=${bucketId}");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		LexiconEntry.viewEntryName(rowEntry = "Document1");

		LexiconEntry.viewEntryName(rowEntry = "Image1");

		DMDocument.deleteCP(dmDocumentTitle = "Document1");

		DMDocument.deleteCP(dmDocumentTitle = "Image1");

		RecycleBin.openRecycleBinAdmin(siteURLKey = "site-name");

		RecycleBin.emptyCP();

		AntCommands.runCommand("build-test-s3-store.xml", "assert-no-document-in-bucket -DcompanyId=${companyId} -DgroupId=${groupId} -Ds3.bucket.id=${bucketId}");
	}

}