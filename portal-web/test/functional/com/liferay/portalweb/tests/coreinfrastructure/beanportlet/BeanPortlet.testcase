@component-name = "portal-core-infra"
definition {

	property ci.retries.disabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Bean Portlet";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		HeadlessSite.addSite(siteName = "Bean Portlet Site");

		JSONLayout.addPublicLayout(
			groupName = "Bean Portlet Site",
			layoutName = "Bean Portlet Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "This is a usecase for LPS-148969. Verify restarting the portal does not break a deployed bean portlet."
	@priority = 3
	test CanViewBeanPortletAfterRestart {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("Given a bean portlet is deployed") {
			AntCommands.runCommand("build-test.xml", "deploy-maven-module -Dmodule.base.dir=modules/apps/bean-portlet/bean-portlet-cdi-extension-sample-test");

			WaitForConsoleTextPresent(value1 = "Registered 1 bean portlets and 0 bean filters for sample.bean.portlet");
		}

		task ("And the bean portlet is added to a page") {
			Navigator.gotoSitePage(
				pageName = "Bean Portlet Page",
				siteName = "Bean Portlet Site");

			Portlet.addPG(portletName = "Sample Bean Portlet");

			Refresh();

			BridgeDemos.viewLibraries(libraryName = "Mojarra,Liferay Faces Bridge Implementation,Liferay Faces Bridge Ext,Liferay Faces Util");
		}

		task ("When the portlet is restarted") {
			Portlet.shutdownServer();

			Portlet.startServer(deleteLiferayHome = "false");
		}

		task ("Then the portlet is still accessible") {
			Navigator.gotoSitePage(
				pageName = "Bean Portlet Page",
				siteName = "Bean Portlet Site");

			Refresh();

			BridgeDemos.viewLibraries(libraryName = "Mojarra,Liferay Faces Bridge Implementation,Liferay Faces Bridge Ext,Liferay Faces Util");
		}
	}

}