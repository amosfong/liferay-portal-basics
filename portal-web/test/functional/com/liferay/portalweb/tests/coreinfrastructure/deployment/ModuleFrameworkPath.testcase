@component-name = "core-infrastructure"
definition {

	property ci.retries.disabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Deployment";

	@description = "LPS-157580. Verify users can deploy to custom module framework paths."
	@priority = 4
	test CustomPathDeploy {
		property custom.properties = "module.framework.configs.dir=${liferay.home}/test/configs";
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		User.firstLoginUI();

		task ("When a config is deployed to the custom config path") {
			var liferayHome = PropsUtil.get("liferay.home.dir.name");
			var configName = "com.liferay.commerce.price.list.configuration.CommercePriceEntryConfiguration.config";
			var osgiConfig = "checkInterval=\"25\"";

			FileUtil.write("${liferayHome}/test/configs/${configName}", ${osgiConfig});

			OSGiConfig.waitForOSGiConfig();
		}

		task ("Then the config is deployed successfully") {
			SystemSettings.openSystemSettingsAdmin();

			SystemSettings.gotoConfiguration(
				configurationCategory = "Pricing",
				configurationName = "Price Entries",
				configurationScope = "System Scope");

			SystemSettings.viewInputText(
				fieldLabel = "Check Interval",
				fieldValue = 25);
		}
	}

	@description = "This is a test for LPS-114409. Verify portal can start up with a subfolder under osgi/configs."
	@priority = 3
	test PortalStartupWithSubfolderUnderConfigs {
		property skip.start.app.server = "true";
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";
		property testcase.url = "file:///opt/dev/projects/github/liferay-portal/";

		var liferayHome = PropsUtil.get("liferay.home.dir.name");

		FileUtil.write("${liferayHome}/configs/subfolder/emptyfile.txt", "");

		Portlet.startServer(keepOsGiState = "true");

		AssertConsoleTextNotPresent(value1 = "InvocationTargetException");
	}

}