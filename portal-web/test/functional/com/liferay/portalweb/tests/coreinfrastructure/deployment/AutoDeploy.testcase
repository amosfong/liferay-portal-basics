@component-name = "core-infrastructure"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Deployment";

	@description = "LPS-173157 Verify a file is not consumed by auto deploy before it's listener is ready."
	@priority = 3
	test FragmentAutoDeploy {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";
		property testcase.url = "file:///opt/dev/projects/github/liferay-portal/";

		Portlet.shutdownServer();

		Portlet.startServer(
			deleteLiferayHome = "false",
			keepOsGiState = "true");

		task ("Given a file is deployed before startup") {
			FragmentsDeploy.deployZipOnLiferayPortal(fragmentsZip = "title.zip");
		}

		task ("When the portal starts up") {
			Portlet.startServer(keepOSGiState = "true");

			User.firstLoginUI(
				password = PropsUtil.get("default.admin.password"),
				specificURL = "http://localhost:8080",
				userEmailAddress = "test@liferay.com");
		}

		task ("Then the file is deployed correctly") {
			FragmentsAdminNavigator.openFragmentsAdmin(
				baseURL = "http://localhost:8080",
				siteURLKey = "global");

			FragmentsAdminNavigator.gotoSpecificScopeCollection(
				collectionName = "Imported",
				scope = "Global");

			FragmentsAdmin.viewEntryPresent(entry = "Title");
		}
	}

}