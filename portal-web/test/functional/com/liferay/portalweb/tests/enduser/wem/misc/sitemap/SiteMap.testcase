@component-name = "portal-site-management"
definition {

	property ci.retries.disabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Sitemap Protocol";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			HeadlessSite.addSite(siteName = "Test Site Name");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-109854. Cannot view the sitemap of staging site as Guest."
	@priority = 4
	test CannotViewSiteMapOfStagingSiteAsGuest {
		task ("Activate local live staging") {
			JSONStaging.enableLocalStaging(groupName = "Test Site Name");
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name (Staging)",
				layoutName = "Test Page Name",
				site = "false",
				type = "content");

			JSONLayout.publishLayout(
				groupName = "Test Site Name (Staging)",
				layoutName = "Test Page Name",
				site = "false");
		}

		task ("Configure the Staging Public Pages in site configuration") {
			Site.openSiteSettingsAdmin(siteURLKey = "test-site-name-staging");

			Site.addVirtualHostsURLCP(stagingPages = "www.able.com");
		}

		task ("Sign out") {
			User.logoutPG();
		}

		task ("Cannot view sitemap of staging site as Guest") {
			Navigator.openSpecificURL(url = "http://www.able.com:8080/sitemap.xml");

			AssertTextPresent(value1 = "You do not have permission to access the requested resource.");
		}
	}

	@description = "View private parend and child page via Site Map widget."
	@priority = 4
	test DisplayPrivateParentAndChildPage {
		task ("Enable private pages") {
			PagesAdmin.enablePrivatePages();
		}

		task ("Add a parent private page") {
			JSONLayout.addPrivateLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name");
		}

		task ("Add a child private page") {
			JSONLayout.addPrivateLayout(
				groupName = "Test Site Name",
				layoutName = "Child Page Name",
				parentLayoutName = "Test Page Name");
		}

		task ("Add a Site Map widget to private child page") {
			JSONLayout.addWidgetToPrivateLayout(
				groupName = "Test Site Name",
				layoutName = "Child Page Name",
				widgetName = "Site Map");
		}

		task ("View private pages are shown in Site Map") {
			Navigator.openPrivateSitePageURL(
				pageName = "Child Page Name",
				siteName = "Test Site Name");

			SiteMapPortlet.viewPageItem(pageNameList = "Test Page Name,Child Page Name");
		}
	}

}