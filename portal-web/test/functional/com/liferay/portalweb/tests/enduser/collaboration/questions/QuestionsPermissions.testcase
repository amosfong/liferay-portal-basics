@component-name = "portal-questions"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Questions";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Questions Page");

		JSONLayout.addWidgetToPublicLayout(
			column = 2,
			groupName = "Guest",
			layoutName = "Questions Page",
			widgetName = "Questions");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONRole.addRegularRole(roleKey = "Test Regrole Name");

		JSONRole.assignRoleToUser(
			roleTitle = "Test Regrole Name",
			userEmailAddress = "userea@liferay.com");
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Message Boards");

			if (IsElementPresent(locator1 = "Questions#QUESTIONS_LIST")) {
				Questions.tearDown();
			}

			PagesAdmin.tearDownCP();
		}
	}

	@description = "Validate if the anonymous user can ask questions and redirected to login, it also covers LPS-129203."
	@priority = 4
	@refactordone
	test CanAskQuestionsThroughAnonymousUser {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		Questions.enableRedirectToLogin();

		Questions.enableAnonymousRead();

		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Category",
			userEmailAddress = "test@liferay.com");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Questions Page");

		Questions.gotoCategory(categoryName = "Category");

		Questions.askQuestionFillingTheMandatoryFields(
			anonymousUser = "true",
			contentField = "Body Anonymous User Ask questions",
			password = PropsUtil.get("default.admin.password"),
			titleField = "Title Anonymous User Ask questions",
			userEmailAddress = "test@liferay.com");

		AssertTextEquals(
			key_questionTitle = "Title Anonymous User Ask questions",
			locator1 = "Questions#QUESTIONS_TITLE",
			value1 = "Title Anonymous User Ask questions");
	}

	@description = "LPS-118481 - Validate if the user can add root topic without permission."
	@priority = 4
	@refactordone
	test CannotAddRootTopicWithoutPermission {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		task ("Given that permissions is set on the created user ") {
			Questions.definePermissionsToCreatedRole(roleTitle = "Test Regrole Name");
		}

		task ("And a Question is created") {
			JSONMBMessage.addCategory(
				categoryDescription = "Description",
				categoryName = "Questions Test Category",
				userEmailAddress = "test@liferay.com");
		}

		task ("When a user without permissions goes to Question page") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");

			Navigator.gotoPage(pageName = "Questions Page");
		}

		task ("Then he can not see the 'Add topic' button") {
			Questions.viewNoPermissionsAddTopic();
		}
	}

	@description = "LPS-116516 - Validate if the user can add subtopic without permission."
	@priority = 4
	@refactordone
	test CannotAddSubTopicWithoutPermission {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		task ("Given that permissions is set on the created user ") {
			Questions.definePermissionsToCreatedRole(roleTitle = "Test Regrole Name");
		}

		task ("And a Question is created") {
			JSONMBMessage.addCategory(
				categoryDescription = "Description",
				categoryName = "Questions Test Category",
				userEmailAddress = "test@liferay.com");
		}

		task ("When a user without permissions goes to Question topic page") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");

			Questions.openToQuestionsTopic(
				layoutName = "questions-page",
				siteURLKey = "guest",
				topicName = "questions-test-category");
		}

		task ("Then he can not Add a sub topic") {
			Questions.viewNoPermissionsAddTopic();
		}
	}

	@description = "LPS-118481 - Validate if the guest user cannot ask question, it also covers LPS-128823."
	@priority = 4
	@refactordone
	test CannotAskQuestionAsGuest {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		task ("Given thata topic is created") {
			Navigator.openURL();

			Navigator.gotoPage(pageName = "Questions Page");

			Questions.addRootTopic(
				rootTopicDescription = "Questions Test Category Description",
				rootTopicName = "Questions Test Category");
		}

		task ("When a guest user is logged") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("And goes to questions topic page") {
			Questions.openToQuestionsTopic(
				layoutName = "questions-page",
				siteURLKey = "guest",
				topicName = "questions-test-category");
		}

		task ("Then he can see the 'This topic is empty' message and can not see the 'Ask Question' button") {
			Questions.viewTopicDefault();

			Questions.viewNoPermissionsAddQuestion();
		}
	}

}