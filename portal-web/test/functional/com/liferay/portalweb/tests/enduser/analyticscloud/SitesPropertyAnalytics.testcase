@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Add a new site with a public widget page") {
			ACUtils.addSiteAndPage();
		}

		task ("Connect the DXP to AC") {
			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		ACUtils.tearDownDXP();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8331 | Test Summary: Assert Site Metrics select Sessions/Visitor card tab"
	@priority = 3
	test AssertSiteMetricsSelectSessionsPerVisitorCardTab {
		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = ${assignedPropertyName});
		}

		task ("Navigate to the Overview tab on Sites dashboard") {
			ACNavigation.goToSites();

			ACNavigation.switchTab(tabName = "Overview");
		}

		task ("Navigate to the Sessions/Visitor tab") {
			ACNavigation.switchTabInCard(tabName = "Sessions/Visitor");
		}

		task ("View the Sessions/Visitor tab is active") {
			ACNavigation.viewActiveSwitchTabInCard(tabName = "Sessions/Visitor");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8332 | Test Summary: Assert Site Metrics select Visitors card tab"
	@priority = 3
	test AssertSiteMetricsSelectUniqueVisitorsCardTab {
		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = ${assignedPropertyName});
		}

		task ("Navigate to the Overview tab on Sites dashboard") {
			ACNavigation.goToSites();

			ACNavigation.switchTab(tabName = "Overview");
		}

		task ("Navigate to the Unique Visitors tab") {
			ACNavigation.switchTabInCard(tabName = "Unique Visitors");
		}

		task ("View the Unique Visitors tab is active") {
			ACNavigation.viewActiveSwitchTabInCard(tabName = "Unique Visitors");
		}
	}

}