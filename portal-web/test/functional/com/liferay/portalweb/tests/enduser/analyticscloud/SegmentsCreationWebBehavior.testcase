@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		ACUtils.tearDownDXP();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9221 | Test Summary: Create a Web Behavior criteria at least/at most times"
	@priority = 4
	test CanCreateWebBehaviorSegmentCriteriaLeastMostTimes {
		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "ac@liferay.com");

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "View WC",
			documentTitleList = "1,2,3,4,5,6",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.editWebBehaviorCriterion(
			atLeastMost = "at least",
			indexField = 1,
			occurenceNumber = 2,
			searchTerm = "Web Content AC Title");

		ACSegments.previewSegmentMembership();

		ACUtils.viewNameList(nameList = "ac ac");

		ACUtils.closeModal();

		ACSegments.saveSegment();

		ACSegments.viewSegmentCriteriaWebBehavior(
			activitiesOption = "has",
			atLeastMost = "at least",
			occurenceNumber = 2,
			searchTerm = "'Web Content AC Title'",
			timeOption = "since",
			timePeriod = "Last 24 hours");

		ACNavigation.goToSegments();

		ACSegments.editSegment(segmentName = "Dynamic Segment Test");

		ACSegments.editWebBehaviorCriterion(
			atLeastMost = "at most",
			indexField = 1,
			occurenceNumber = 7,
			searchTerm = "Web Content AC Title");

		ACSegments.previewSegmentMembership();

		ACUtils.viewNameList(nameList = "ac ac");

		ACUtils.closeModal();

		ACSegments.saveSegment();

		ACSegments.viewSegmentCriteriaWebBehavior(
			activitiesOption = "has",
			atLeastMost = "at most",
			occurenceNumber = 7,
			searchTerm = "'Web Content AC Title'",
			timeOption = "since",
			timePeriod = "Last 24 hours");
	}

	@description = "Create a segment with behavior of downloading a document"
	@priority = 5
	test CanCreateWebBehaviorSegmentDownloadingDocument {
		property test.run.type = "single";

		ACUtils.createDMAndAddToPage();

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "ac@liferay.com");

		ACDXPSettings.syncNewContactData();

		ACUtils.navigateToSitePageWithUser(
			actionType = "Download DM",
			documentTitleList = "DM AC Title,DM AC Title,DM AC Title",
			emailList = "ac@liferay.com",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Downloaded Document & Media");

		ACSegments.selectDocument(
			documentTitle = "DM AC Title",
			indexField = 1);

		ACSegments.setOccurence(occurenceNumber = 3);

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP();

		ACUtils.navigateToSitePageWithUser(
			actionType = "Download DM",
			documentTitleList = "DM AC Title,DM AC Title,DM AC Title",
			emailList = "ac@liferay.com",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9222 | Test Summary: Create a Web Behavior since X days"
	@priority = 4
	test CanCreateWebBehaviorSegmentSinceXdays {
		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "ac@liferay.com");

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		ACUtils.navigateToSitePageWithUser(
			actionType = "View WC",
			documentTitleList = "1,2,3",
			emailList = "ac@liferay.com",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.editWebBehaviorCriterion(
			indexField = 1,
			occurenceNumber = 3,
			searchTerm = "Web Content AC Title",
			timeOption = "since",
			timePeriod = "Last 7 days");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP();

		ACUtils.navigateToSitePageWithUser(
			actionType = "View WC",
			documentTitleList = "1,2,3",
			emailList = "ac@liferay.com",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Create a Web Behavior Segment Submitting a Form"
	@priority = 5
	test CanCreateWebBehaviorSegmentSubmittingForm {
		property test.run.type = "single";

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACUtils.createFormAndAddToPage();

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "Submit Form",
			documentTitleList = "1,2,3,4",
			pageName = "AC Page",
			siteName = "Site Name",
			submitText = "Test Segments");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Submitted Form");

		ACSegments.selectDocument(
			documentTitle = "Created Form Name",
			indexField = 1);

		ACSegments.previewSegmentMembership();

		ACUtils.viewNameList(nameList = "ac ac");

		ACUtils.closeModal();

		ACSegments.saveSegment();

		ACNavigation.goToSegments();

		ACUtils.viewNameList(nameList = "Dynamic Segment Test");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9216 | Test Summary: Add segment using a web behavior 'after' some time"
	@priority = 4
	test CanCreateWebBehaviorSegmentUsingAfter {
		property portal.upstream = "quarantine";

		// AC Quarantine Reason: The membership list takes a long time to update
		// AC Refactor ticket: LRAC-10769

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.generateDayMonthAndYearValues(dateDifferenceFromCurrentDate = "-1");

		ACSegments.editWebBehaviorCriterion(
			day = ${staticDay},
			indexField = 1,
			month = ${staticMonth},
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title",
			timeOption = "after",
			year = ${staticYear});

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9217 | Test Summary: Add segment using a web behavior 'before' some time"
	@priority = 4
	test CanCreateWebBehaviorSegmentUsingBefore {
		property portal.upstream = "quarantine";

		// AC Quarantine Reason: The membership list takes a long time to update
		// AC Refactor ticket: LRAC-10769

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.generateDayMonthAndYearValues(dateDifferenceFromCurrentDate = 1);

		ACSegments.editWebBehaviorCriterion(
			day = ${staticDay},
			indexField = 1,
			month = ${staticMonth},
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title",
			timeOption = "before",
			year = ${staticYear});

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9218 | Test Summary: Add segment using a web behavior 'between' some time"
	@ignore = "true"
	@priority = 4
	test CanCreateWebBehaviorSegmentUsingBetween {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.generateDayMonthAndYearValues(dateDifferenceFromCurrentDate = "-1");

		ACSegments.generateSecondDayMonthAndYearValues(dateDifferenceFromCurrentDate = 1);

		ACSegments.editWebBehaviorCriterion(
			day = ${staticDay},
			day2 = ${staticDay2},
			indexField = 1,
			month = ${staticMonth},
			month2 = ${staticMonth2},
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title",
			timeOption = "between",
			year = ${staticYear},
			year2 = ${staticYear2});

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Add segment using a web behavior 'ever' done"
	@ignore = "true"
	@priority = 5
	test CanCreateWebBehaviorSegmentUsingEver {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.editWebBehaviorCriterion(
			indexField = 1,
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title",
			timeOption = "ever");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Create a Web Behavior using 'has not' segment"
	@priority = 5
	test CanCreateWebBehaviorSegmentUsingHasNot {
		property test.run.type = "single";

		ACUtils.createBlogsAndAddToPage();

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title,Blogs AC Title,Blogs AC Title,Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Blog");

		ACSegments.editWebBehaviorCriterion(
			activitiesOption = "has not",
			indexField = 1,
			occurenceNumber = 10,
			searchTerm = "Blogs AC Title");

		ACSegments.previewSegmentMembership();

		ACUtils.viewNameList(nameList = "ac ac");

		ACUtils.closeModal();

		ACSegments.saveSegment();

		ACNavigation.goToSegments();

		ACUtils.viewNameList(nameList = "Dynamic Segment Test");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9219 | Test Summary: Add segment using a web behavior 'on' some time"
	@ignore = "true"
	@priority = 4
	test CanCreateWebBehaviorSegmentUsingOn {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "View WC",
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.generateDayMonthAndYearValues(dateDifferenceFromCurrentDate = 0);

		ACSegments.editWebBehaviorCriterion(
			day = ${staticDay},
			indexField = 1,
			month = ${staticMonth},
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title",
			timeOption = "on",
			year = ${staticYear});

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Add segment using a web behavior 'since' some time"
	@ignore = "true"
	@priority = 5
	test CanCreateWebBehaviorSegmentUsingSince {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		ACUtils.createBlogsAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Blog");

		ACSegments.editWebBehaviorCriterion(
			indexField = 1,
			occurenceNumber = 4,
			searchTerm = "Blogs AC Title",
			timeOption = "since",
			timePeriod = "Yesterday");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title,Blogs AC Title,Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACSegments.viewSegmentCriteriaWebBehavior(
			occurenceNumber = 4,
			searchTerm = "'Blogs AC Title'",
			timeOption = "since",
			timePeriod = "Yesterday");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9223 | Test Summary: Create a Web Behavior Segment of Viewing a Blog"
	@priority = 4
	test CanCreateWebBehaviorSegmentViewingBlog {
		property test.run.type = "single";

		ACUtils.createBlogsAndAddToPage();

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "ac@liferay.com");

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		ACUtils.navigateToSitePageWithUser(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title,Blogs AC Title,Blogs AC Title,Blogs AC Title",
			emailList = "ac@liferay.com",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Blog");

		ACSegments.selectDocument(
			documentTitle = "Blogs AC Title",
			indexField = 1);

		ACSegments.previewSegmentMembership();

		ACUtils.viewNameList(nameList = "ac ac");

		ACUtils.closeModal();

		ACSegments.saveSegment();

		ACSegments.viewSegmentCriteriaWebBehavior(
			activitiesOption = "has",
			atLeastMost = "at least",
			occurenceNumber = 1,
			searchTerm = "'Blogs AC Title'",
			timeOption = "since",
			timePeriod = "Last 24 hours");

		ACNavigation.goToSegments();

		ACUtils.viewNameList(nameList = "Dynamic Segment Test");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9224 | Test Summary: Create a Web Behavior Segment of Viewing Document & Media in a Topic"
	@priority = 4
	test CanCreateWebBehaviorSegmentViewingDM {
		property test.run.type = "single";

		var username = "ac";

		ACUtils.createDMAndAddToPage();

		JSONUser.addUser(
			userEmailAddress = "${username}@liferay.com",
			userFirstName = ${username},
			userLastName = ${username},
			userScreenName = ${username});

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "${username}@liferay.com");

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		ACUtils.navigateToSitePageWithUser(
			actionType = "View DM",
			documentTitleList = "DM AC Title,DM AC Title,DM AC Title,DM AC Title",
			emailList = "${username}@liferay.com",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Document & Media");

		ACSegments.selectDocument(
			documentTitle = "DM AC Title",
			indexField = 1);

		ACSegments.previewSegmentMembership();

		ACUtils.viewNameList(nameList = "${username} ${username}");

		ACUtils.closeModal();

		ACSegments.saveSegment();

		ACSegments.viewSegmentCriteriaWebBehavior(
			activitiesOption = "has",
			atLeastMost = "at least",
			occurenceNumber = 1,
			searchTerm = "'DM AC Title'",
			timeOption = "since",
			timePeriod = "Last 24 hours");

		ACNavigation.goToSegments();

		ACUtils.viewNameList(nameList = "Dynamic Segment Test");
	}

	@description = "Create a segment with behavior of viewing a form"
	@priority = 5
	test CanCreateWebBehaviorSegmentViewingForm {
		property test.run.type = "single";

		var username = "ac";

		ACUtils.createFormAndAddToPage();

		JSONUser.addUser(
			userEmailAddress = "${username}@liferay.com",
			userFirstName = ${username},
			userLastName = ${username},
			userScreenName = ${username});

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "${username}@liferay.com");

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		ACUtils.navigateToSitePageWithUser(
			actionType = "View Form",
			documentTitleList = "1,2,3,4",
			emailList = "${username}@liferay.com",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Form");

		ACSegments.selectDocument(
			documentTitle = "Created Form Name",
			indexField = 1);

		ACSegments.previewSegmentMembership();

		ACUtils.viewNameList(nameList = "${username} ${username}");

		ACUtils.closeModal();

		ACSegments.saveSegment();

		ACSegments.viewSegmentCriteriaWebBehavior(
			activitiesOption = "has",
			atLeastMost = "at least",
			occurenceNumber = 1,
			searchTerm = "'Created Form Name'",
			timeOption = "since",
			timePeriod = "Last 24 hours");

		ACNavigation.goToSegments();

		ACUtils.viewNameList(nameList = "Dynamic Segment Test");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9225 | Test Summary: Create a Web Behavior Segment of Viewing a Page"
	@priority = 4
	test CanCreateWebBehaviorSegmentViewingPage {
		property test.run.type = "single";

		var username = "ac";

		JSONUser.addUser(
			userEmailAddress = "${username}@liferay.com",
			userFirstName = ${username},
			userLastName = ${username},
			userScreenName = ${username});

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "${username}@liferay.com");

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		ACUtils.navigateToSitePageWithUser(
			actionType = "View WC",
			documentTitleList = "1,2,3,4,5",
			emailList = "${username}@liferay.com",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Page");

		ACSegments.selectDocument(
			documentTitle = "AC Page - Site Name",
			indexField = 1);

		ACSegments.previewSegmentMembership();

		ACUtils.viewNameList(nameList = "${username} ${username}");

		ACUtils.closeModal();

		ACSegments.saveSegment();

		ACSegments.viewSegmentCriteriaWebBehavior(
			activitiesOption = "has",
			atLeastMost = "at least",
			occurenceNumber = 1,
			searchTerm = "AC Page - Site Name",
			timeOption = "since",
			timePeriod = "Last 24 hours");

		ACNavigation.goToSegments();

		ACUtils.viewNameList(nameList = "Dynamic Segment Test");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9226 | Test Summary: Create a Web Behavior Segment of Viewing a Web Content"
	@priority = 4
	test CanCreateWebBehaviorSegmentViewingWC {
		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "ac@liferay.com");

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		ACUtils.navigateToSitePageWithUser(
			actionType = "View WC",
			documentTitleList = "1,2,3,4,5",
			emailList = "ac@liferay.com",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.selectDocument(
			documentTitle = "Web Content AC Title",
			indexField = 1);

		ACSegments.previewSegmentMembership();

		ACUtils.viewNameList(nameList = "ac ac");

		ACUtils.closeModal();

		ACSegments.saveSegment();

		ACSegments.viewSegmentCriteriaWebBehavior(
			activitiesOption = "has",
			atLeastMost = "at least",
			occurenceNumber = 1,
			searchTerm = "'Web Content AC Title'",
			timeOption = "since",
			timePeriod = "Last 24 hours");

		ACNavigation.goToSegments();

		ACUtils.viewNameList(nameList = "Dynamic Segment Test");
	}

}