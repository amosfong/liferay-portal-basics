@component-name = "portal-content-management"
definition {

	property ci.retries.disabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Document Management";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Enable dynamic and manual selection") {
			AssetPublisherPortlet.enableDynamicAndManualSelection();
		}

		task ("Add a site via JSON") {
			HeadlessSite.addSite(siteName = "Test Site Name");
		}

		task ("Activate local live staging") {
			JSONStaging.enableLocalStaging(groupName = "Test Site Name");
		}

		task ("Add a display page template for Web Content Article and Basic Web Content") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Web Content Article",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name-staging",
				site = "false",
				subType = "Basic Web Content");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-134847. The user can access to an associated display page template via Asset Publisher widget in live site."
	@priority = 4
	test AccessToAssociatedDisplayPageTemplateInLiveSite {
		task ("Add a display page template for Document and Basic Document") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Document",
				displayPageTemplateEntryName = "Document DPT",
				groupName = "Test Site Name-staging",
				site = "false",
				subType = "Basic Document");
		}

		task ("Add a Display Page Content fragment to display page template") {
			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name-staging");

			DisplayPageTemplatesAdmin.gotoDisplayPage(displayPageName = "Document DPT");

			PageEditor.addFragment(
				collectionName = "Content Display",
				fragmentName = "Display Page Content");

			PageEditor.publish();
		}

		task ("Add a document with an image") {
			JSONDocument.addFileWithUploadedFile(
				dmDocumentTitle = "Document Title",
				groupName = "Test Site Name-staging",
				mimeType = "image/jpeg",
				site = "false",
				sourceFileName = "Document_1.jpg");
		}

		task ("Select the display page template as Specific") {
			DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name-staging");

			LexiconEntry.gotoEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Document Title");

			WebContent.editDisplayPage(
				pageName = "Document DPT",
				pageType = "Display Page Templates");

			PortletEntry.publish();
		}

		task ("Add an Asset Publisher to widget page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name (Staging)",
				layoutName = "Test Page Name",
				site = "false");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name (Staging)",
				layoutName = "Test Page Name",
				site = "false",
				widgetName = "Asset Publisher");
		}

		task ("View document is shown in Asset Publisher in staging site") {
			Navigator.gotoStagedSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			AssetPublisherPortlet.viewAssetPG(assetTitle = "Document Title");
		}

		task ("Publish to live") {
			Staging.gotoPublishToLive();

			Staging.publishToLive();
		}

		task ("Access to associated display page template via Asset Publisher in live site") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			AssetPublisherPortlet.clickAssetTitle(assetTitle = "Document Title");

			ControlMenu.viewHeaderTitle(headerTitle = "Document Title");

			AssertVisible(
				key_imageFileName = "Document_1.jpg",
				locator1 = "PageEditor#ENTRY_COVER_IMAGE");
		}
	}

}