@component-name = "portal-content-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Document Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			Site.tearDownCP();
		}
	}

	@description = "This test ensure that the max number of pages generated as preview for PDFs in Instance Setting can limit by the configuration in System Setting."
	@priority = 4
	test CanLimitMaximumPagesOfPDFPreviewInInstanceSettingsByTheConfigurationInSystemSetting {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentTitle = "large_file.pdf",
			groupName = "Guest",
			mimeType = "application/pdf",
			sourceFileName = "large_file.pdf");

		DMNavigator.openToConfigInSystemSettings(portlet = "File Preview Limits");

		AssertTextEquals(
			key_portletTitle = "File Preview Limits",
			locator1 = "DocumentsAndMedia#PORTLET_TITLE",
			value1 = "File Preview Limits");

		Type(
			key_fieldLabel = "Maximum Number of Pages",
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = 2);

		SystemSettings.saveConfiguration();

		DMNavigator.openToConfigInInstanceSettings(portlet = "File Preview Limits");

		Type(
			key_fieldLabel = "Maximum Number of Pages",
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = 3);

		AssertTextEquals(
			locator1 = "Message#ERROR",
			value1 = "This limit is higher than the System Settings limit. Please enter a maximum value no larger than 2.");

		SystemSettings.saveConfiguration();

		Alert.viewErrorMessage(errorMessage = "Maximum number of pages limit is invalid.");

		Type(
			key_fieldLabel = "Maximum Number of Pages",
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = 1);

		SystemSettings.saveConfiguration();

		Alert.viewSuccessMessageText(successMessage = "Your request completed successfully.");

		ServerAdministration.openServerAdmin();

		ServerAdministration.executeServerResourcesActions(actionsDescription = "Reset preview and thumbnail files for documents and media");

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "large_file.pdf",
			groupName = "Guest",
			siteURLKey = "guest");

		while (IsElementPresent(key_infoMessage = "Generating preview will take a few minutes.", locator1 = "Message#INFO_SPECIFIC")) {
			WaitForElementPresent.waitForLastScript();

			Refresh();
		}

		AssertTextEquals.assertPartialText(
			key_text = "Page 1 / 1",
			locator1 = "Button#ANY",
			value1 = "Page 1 / 1");
	}

	@description = "This test ensure that the max number of pages generated as preview for PDFs in Site Setting can limit by the configuration in Instance Setting."
	@e2etest
	@priority = 4
	test CanLimitMaximumPagesOfPDFPreviewInSiteSettingsByTheConfigurationInInstanceSetting {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentTitle = "large_file.pdf",
			groupName = "Guest",
			mimeType = "application/pdf",
			sourceFileName = "large_file.pdf");

		DMNavigator.openToConfigInInstanceSettings(portlet = "File Preview Limits");

		WaitForPageLoad();

		Type(
			key_fieldLabel = "Maximum Number of Pages",
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = 2);

		SystemSettings.saveConfiguration();

		Alert.viewSuccessMessageText(successMessage = "Your request completed successfully.");

		DMNavigator.openToConfigInSiteSettings(
			portlet = "Documents and Media",
			siteURLKey = "Guest");

		Click(
			key_menuBar = "File Preview Limits",
			locator1 = "MenuBar#NAV_LINK");

		Refresh();

		AssertTextEquals(
			key_portletTitle = "File Preview Limits",
			locator1 = "DocumentsAndMedia#PORTLET_TITLE",
			value1 = "File Preview Limits");

		Type(
			key_fieldLabel = "Maximum Number of Pages",
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = 3);

		AssertTextEquals(
			locator1 = "Message#ERROR",
			value1 = "This limit is higher than the Instance Settings limit. Please enter a maximum value no larger than 2.");

		SystemSettings.saveConfiguration();

		Alert.viewErrorMessage(errorMessage = "Maximum number of pages limit is invalid.");

		Refresh();

		Type(
			key_fieldLabel = "Maximum Number of Pages",
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = 1);

		SystemSettings.saveConfiguration();

		Alert.viewSuccessMessageText(successMessage = "Your request completed successfully.");

		ServerAdministration.openServerAdmin();

		ServerAdministration.executeServerResourcesActions(actionsDescription = "Reset preview and thumbnail files for documents and media");

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "large_file.pdf",
			groupName = "Guest",
			siteURLKey = "guest");

		while (IsElementPresent(key_infoMessage = "Generating preview will take a few minutes.", locator1 = "Message#INFO_SPECIFIC")) {
			WaitForElementPresent.waitForLastScript();

			Refresh();
		}

		AssertTextEquals.assertPartialText(
			key_text = "Page 1 / 1",
			locator1 = "Button#ANY",
			value1 = "Page 1 / 1");
	}

	@description = "This test ensures that a user can configure the max number of pages generated as preview for PDFs in System Setting."
	@priority = 4
	test CanLimitMaximumPagesOfPDFPreviewInSystemSettings {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentTitle = "large_file.pdf",
			groupName = "Guest",
			mimeType = "application/pdf",
			sourceFileName = "large_file.pdf");

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "large_file.pdf",
			groupName = "Guest",
			siteURLKey = "guest");

		while (IsElementPresent(key_infoMessage = "Generating preview will take a few minutes.", locator1 = "Message#INFO_SPECIFIC")) {
			WaitForElementPresent.waitForLastScript();

			Refresh();
		}

		AssertVisible(
			key_dmDocumentFileName = "large_file.pdf",
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_IMAGE_PREVIEW");

		AssertTextEquals.assertPartialText(
			key_title = "Click to jump to a page.",
			locator1 = "Button#ANY_TITLE",
			value1 = "Page 1 / 3");

		DMNavigator.openToConfigInSystemSettings(portlet = "File Preview Limits");

		AssertTextEquals(
			key_portletTitle = "File Preview Limits",
			locator1 = "DocumentsAndMedia#PORTLET_TITLE",
			value1 = "File Preview Limits");

		AssertTextEquals(
			key_fieldLabel = "Maximum Number of Pages",
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = 3);

		Type(
			key_fieldLabel = "Maximum Number of Pages",
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = 1);

		SystemSettings.saveConfiguration();

		Alert.viewSuccessMessageText(successMessage = "Your request completed successfully.");

		ServerAdministration.openServerAdmin();

		ServerAdministration.executeServerResourcesActions(actionsDescription = "Reset preview and thumbnail files for documents and media");

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "large_file.pdf",
			groupName = "Guest",
			siteURLKey = "guest");

		while (IsElementPresent(key_infoMessage = "Generating preview will take a few minutes.", locator1 = "Message#INFO_SPECIFIC")) {
			WaitForElementPresent.waitForLastScript();

			Refresh();
		}

		AssertTextEquals.assertPartialText(
			key_text = "Page 1 / 1",
			locator1 = "Button#ANY",
			value1 = "Page 1 / 1");
	}

}