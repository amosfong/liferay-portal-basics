@component-name = "portal-site-management"
definition {

	property ci.retries.disabled = "true";
	property portal.accessibility = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Sites Administration";

	setUp {
		task ("Set up virtual instance") {
			TestCase.setUpPortalInstance();
		}

		task ("Sign in") {
			User.firstLoginPG();
		}
	}

	@description = "This is a test for LPS-199455. The site administrator could select custom site template via keyboard during site creation."
	@priority = 4
	test SelectCustomTemplateViaKeyboard {
		task ("Given a site administrator accesses to the sites admin") {
			Site.openSitesAdmin();
		}

		task ("When the site administrator navigates to the custom site templates sheet") {
			LexiconEntry.gotoAdd();

			Navigator.gotoNavTab(navTab = "Custom Site Templates");
		}

		task ("Then the site administrator could see empty state message") {
			AssertTextPresent(value1 = "Select the template to create your site.");

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "There are no site templates.");
		}

		task ("Given a site administrator has a custom site template") {
			JSONSiteTemplate.addSiteTemplate(siteTemplateName = "Site Template Name");
		}

		task ("When the site administrator navigates to the custom site templates sheet") {
			Site.openSitesAdmin();

			LexiconEntry.gotoAdd();
		}

		task ("Then the site administrator could select the custom template via keyboard") {
			WaitForPageLoad();

			KeyPress(
				key_menuBar = "Provided by Liferay",
				locator1 = "MenuBar#NAV_LINK",
				value1 = "\DOWN");

			AssertElementFocused(
				key_menuBar = "Custom Site Templates",
				locator1 = "MenuBar#NAV_LINK");

			KeyPress(
				key_menuBar = "Custom Site Templates",
				locator1 = "MenuBar#NAV_LINK",
				value1 = "\ENTER");

			KeyPress(
				key_menuBar = "Custom Site Templates",
				locator1 = "MenuBar#NAV_LINK",
				value1 = "\TAB");

			AssertElementFocused(locator1 = "//div[contains(@class,'card-type-asset')][normalize-space()='Site Template Name']");

			KeyPress(
				locator1 = "//div[contains(@class,'card-type-asset')][normalize-space()='Site Template Name']",
				value1 = "\ENTER");

			AssertTextEquals(
				locator1 = "Modal#HEADER",
				value1 = "Add Site");
		}
	}

	@description = "This is a test for LPS-199455. The site administrator could select template provided by liferay via keyboard during site creation."
	@priority = 4
	test SelectTemplateProvidedByLiferayViaKeyboard {
		task ("Given a site administrator accesses to the sites admin") {
			Site.openSitesAdmin();
		}

		task ("When the site administrator adds a new site") {
			LexiconEntry.gotoAdd();
		}

		task ("Then the site administrator could select template provided by liferay via keyboard") {
			WaitForPageLoad();

			KeyPress(
				key_menuBar = "Provided by Liferay",
				locator1 = "MenuBar#NAV_LINK",
				value1 = "\TAB");

			AssertElementFocused(locator1 = "//div[contains(@class,'card-type-asset')][normalize-space()='Blank Site']");

			KeyPress(
				locator1 = "//div[contains(@class,'card-type-asset')][normalize-space()='Blank Site']",
				value1 = "\ENTER");

			AssertTextEquals(
				locator1 = "Modal#HEADER",
				value1 = "Add Site");
		}
	}

	@description = "This is a test for LPS-177717. Using Keyboard Navigation it is possible to access the back button of Sites and sites templates and edit mode and the tooltip is Go to Sites."
	@priority = 3
	test ViewBackButtonTooltipForSitesAdminViaKeyboard {
		task ("Given a site administrator accesses to select site template") {
			Site.openSitesAdmin();

			LexiconEntry.gotoAdd();

			MenuBar.viewActive(menuBar = "Provided by Liferay");
		}

		task ("When the site administrator hovers over the back button via keyboard") {
			KeyPress(
				key_text = "Skip to Main Content",
				locator1 = "Link#ANY",
				value1 = "\TAB");

			AssertElementFocused(locator1 = "Icon#BACK");
		}

		task ("Then the site administrator could see the tooltip message") {
			AssertVisible(
				key_content = "Go to Sites",
				locator1 = "Tooltip#FLOATING_TOOLTIP_CONTENT");
		}

		task ("Given a site administrator views child sites in Sites admin") {
			HeadlessSite.addSite(siteName = "Test Site Name");

			Navigator.gotoBack();

			LexiconTable.clickTableEntryTitle(tableEntry = "Test Site Name");

			Breadcrumb.viewActiveEntry(breadcrumbName = "Test Site Name");
		}

		task ("When the site administrator hovers over the back button via keyboard") {
			KeyPress(
				key_text = "Skip to Main Content",
				locator1 = "Link#ANY",
				value1 = "\TAB");

			AssertElementFocused(locator1 = "Icon#BACK");
		}

		task ("Then the site administrator could see the tooltip message") {
			AssertVisible(
				key_content = "Go to Sites",
				locator1 = "Tooltip#FLOATING_TOOLTIP_CONTENT");
		}
	}

	@description = "This is a test for LPS-177717. Using key board navigation is possible to access the back button of a Site child and the tooltip is Go to Site Name."
	@priority = 3
	test ViewBackButtonTooltipOfChildSiteViaKeyboard {
		task ("Given a site administrator accesses to the child site in Site admin") {
			HeadlessSite.addSite(siteName = "Test Site Name");

			HeadlessSite.addSite(
				parentSiteName = "Test Site Name",
				siteName = "Child Site Name");

			HeadlessSite.addSite(
				grandParentSiteName = "Test Site Name",
				parentSiteName = "Child Site Name",
				siteName = "Grandchild Site Name");

			Site.openSitesAdmin();

			LexiconTable.clickTableEntryTitle(tableEntry = "Test Site Name");

			Breadcrumb.viewActiveEntry(breadcrumbName = "Test Site Name");

			LexiconTable.clickTableEntryTitle(tableEntry = "Child Site Name");

			Breadcrumb.viewActiveEntry(breadcrumbName = "Child Site Name");
		}

		task ("When the site administrator hovers over the back button via keyboard") {
			KeyPress(
				key_text = "Skip to Main Content",
				locator1 = "Link#ANY",
				value1 = "\TAB");

			AssertElementFocused(locator1 = "Icon#BACK");
		}

		task ("Then the site administrator could see the tooltip message") {
			AssertVisible(
				key_content = "Go to Test Site Name",
				locator1 = "Tooltip#FLOATING_TOOLTIP_CONTENT");
		}

		task ("Given a site administrator accesses to the grandchild site in Site admin") {
			LexiconTable.clickTableEntryTitle(tableEntry = "Grandchild Site Name");

			Breadcrumb.viewActiveEntry(breadcrumbName = "Grandchild Site Name");
		}

		task ("When the site administrator hovers over the back button via keyboard") {
			KeyPress(
				key_text = "Skip to Main Content",
				locator1 = "Link#ANY",
				value1 = "\TAB");

			AssertElementFocused(locator1 = "Icon#BACK");
		}

		task ("Then the site administrator could see the tooltip message") {
			AssertVisible(
				key_content = "Go to Child Site Name",
				locator1 = "Tooltip#FLOATING_TOOLTIP_CONTENT");
		}
	}

}