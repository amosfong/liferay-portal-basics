@component-name = "portal-upgrades"
definition {

	property ci.retries.disabled = "true";
	property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver";
	property portal.release = "true";
	property portal.upstream = "true";
	property test.liferay.virtual.instance = "false";
	property test.run.type = "single";
	property testray.main.component.name = "Upgrades Staging";

	setUp {
		SignIn.signIn();

		SearchAdministration.executeReindex();
	}

	@description = "This is a use case for LPS-101370. Assert no documents need to be published after upgrading."
	@priority = 3
	test AssertNoDocumentsNeedToBePublishedAfterUpgrade621021 {
		property data.archive.type = "data-archive-local-staging-with-documents";
		property database.types = "db2,mysql,oracle,postgresql";
		property portal.version = "6.2.10.21";

		task ("When: Go to staging site and try to publish to live") {
			Navigator.gotoStagedSitePage(
				pageName = "Staging Test Page",
				siteName = "Site Name");

			Staging.gotoPublishToLive();
		}

		task ("Then: Assert no documents need to be published on publish states") {
			AssertElementNotPresent(
				key_itemName = "Documents and Media",
				locator1 = "StagingPublishToLive#SIMPLE_PUBLICATION_CONTENT_TYPE");
		}
	}

	@description = "This is a use case for LPS-98651."
	@priority = 4
	test PublishArticleCreatedByDeletedUserAfterUpgrade704 {
		property data.archive.type = "data-archive-staging-with-deleted-user";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.0.4";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name-staging");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContent.viewTitle(
			onLive = "true",
			webContentTitle = "WC WebContent Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		AssertConsoleTextNotPresent(value1 = "PortletDataException");
	}

	@description = "This is a use case for LPS-98651."
	@priority = 3
	test PublishArticleCreatedByDeletedUserAfterUpgrade70106 {
		property data.archive.type = "data-archive-staging-with-deleted-user";
		property portal.version = "7.0.10.6";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name-staging");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContent.viewTitle(
			onLive = "true",
			webContentTitle = "WC WebContent Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		AssertConsoleTextNotPresent(value1 = "PortletDataException");
	}

	@description = "This is a use case for LPS-98651."
	@priority = 3
	test PublishArticleCreatedByDeletedUserAfterUpgrade621021 {
		property data.archive.type = "data-archive-staging-with-deleted-user";
		property database.types = "db2,mysql,oracle,postgresql";
		property portal.version = "6.2.10.21";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name-staging");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContent.viewTitle(
			onLive = "true",
			webContentTitle = "WC WebContent Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		AssertConsoleTextNotPresent(value1 = "PortletDataException");
	}

	@description = "This is a use case for LPS-132493."
	@priority = 3
	test PublishPageVersioningAfterUpgrade71103 {
		property data.archive.type = "data-archive-local-staging-with-page-versioning";
		property portal.version = "7.1.10.3";

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.viewStagingLocalLiveVariationMessagePG(
			pageName = "Staging Test Page",
			sitePagesVariationName = "Site Pages Variation Name");

		Navigator.gotoSitePage(
			pageName = "Test Variation Page",
			siteName = "Site Name");

		Staging.viewStagingLocalLiveVariationMessagePG(
			pageName = "Test Variation Page",
			pagesVariationName = "Page Variation Name",
			sitePagesVariationName = "Site Pages Variation Name");
	}

	@description = "This is a use case for LPS-132493."
	@priority = 3
	test PublishPageVersioningAfterUpgrade72101 {
		property data.archive.type = "data-archive-local-staging-with-page-versioning";
		property portal.version = "7.2.10.1";

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.viewStagingLocalLiveVariationMessagePG(
			pageName = "Staging Test Page",
			sitePagesVariationName = "Site Pages Variation Name");

		Navigator.gotoSitePage(
			pageName = "Test Variation Page",
			siteName = "Site Name");

		Staging.viewStagingLocalLiveVariationMessagePG(
			pageName = "Test Variation Page",
			pagesVariationName = "Page Variation Name",
			sitePagesVariationName = "Site Pages Variation Name");
	}

	@description = "This is a use case for LPS-132493."
	@priority = 3
	test PublishPageVersioningAfterUpgrade73101 {
		property data.archive.type = "data-archive-local-staging-with-page-versioning";
		property portal.version = "7.3.10.1";

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.viewStagingLocalLiveVariationMessagePG(
			pageName = "Staging Test Page",
			sitePagesVariationName = "Site Pages Variation Name");

		Navigator.gotoSitePage(
			pageName = "Test Variation Page",
			siteName = "Site Name");

		Staging.viewStagingLocalLiveVariationMessagePG(
			pageName = "Test Variation Page",
			pagesVariationName = "Page Variation Name",
			sitePagesVariationName = "Site Pages Variation Name");
	}

	@description = "This is a use case for LPS-132493."
	@priority = 3
	test PublishPageVersioningAfterUpgrade701016 {
		property data.archive.type = "data-archive-local-staging-with-page-versioning";
		property portal.version = "7.0.10.16";

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.viewStagingLocalLiveVariationMessagePG(
			pageName = "Staging Test Page",
			sitePagesVariationName = "Site Pages Variation Name");

		Navigator.gotoSitePage(
			pageName = "Test Variation Page",
			siteName = "Site Name");

		Staging.viewStagingLocalLiveVariationMessagePG(
			pageName = "Test Variation Page",
			pagesVariationName = "Page Variation Name",
			sitePagesVariationName = "Site Pages Variation Name");
	}

	@description = "This is a use case for LPS-132491."
	@priority = 3
	test PublishPageVersioningViaRemoteStagingAfterUpgrade71103 {
		property custom.properties = "auth.verifier.TunnelAuthVerifier.hosts.allowed=${line.separator}tunneling.servlet.shared.secret=1234567890123456";
		property data.archive.type = "data-archive-remote-staging-with-page-versioning";
		property portal.version = "7.1.10.3";

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Remote Site");

		Navigator.gotoSitePage(
			pageName = "Test Variation Page",
			siteName = "Remote Site");

		Staging.viewPortletDefaultMessageInRemoteLive();
	}

	@description = "This is a use case for LPS-132491."
	@priority = 3
	test PublishPageVersioningViaRemoteStagingAfterUpgrade72101 {
		property custom.properties = "auth.verifier.TunnelAuthVerifier.hosts.allowed=${line.separator}tunneling.servlet.shared.secret=1234567890123456";
		property data.archive.type = "data-archive-remote-staging-with-page-versioning";
		property portal.version = "7.2.10.1";

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Remote Site");

		Navigator.gotoSitePage(
			pageName = "Test Variation Page",
			siteName = "Remote Site");

		Staging.viewPortletDefaultMessageInRemoteLive();
	}

	@description = "This is a use case for LPS-132491."
	@priority = 3
	test PublishPageVersioningViaRemoteStagingAfterUpgrade73101 {
		property custom.properties = "auth.verifier.TunnelAuthVerifier.hosts.allowed=${line.separator}tunneling.servlet.shared.secret=1234567890123456";
		property data.archive.type = "data-archive-remote-staging-with-page-versioning";
		property database.types = "mariadb,mysql,oracle,postgresql,sqlserver";
		property portal.version = "7.3.10.1";

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Remote Site");

		Navigator.gotoSitePage(
			pageName = "Test Variation Page",
			siteName = "Remote Site");

		Staging.viewPortletDefaultMessageInRemoteLive();
	}

	@description = "This is a use case for LPS-132491."
	@priority = 3
	test PublishPageVersioningViaRemoteStagingAfterUpgrade701016 {
		property custom.properties = "auth.verifier.TunnelAuthVerifier.hosts.allowed=${line.separator}tunneling.servlet.shared.secret=1234567890123456";
		property data.archive.type = "data-archive-remote-staging-with-page-versioning";
		property portal.version = "7.0.10.16";

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Remote Site");

		Navigator.gotoSitePage(
			pageName = "Test Variation Page",
			siteName = "Remote Site");

		Staging.viewPortletDefaultMessageInRemoteLive();
	}

	@description = "This is a use case for LPS-87237 and LPS-126769."
	@priority = 3
	test ViewStagingDefaultSettingAfterUpgrade704 {
		property data.archive.type = "data-archive-staging-with-default-setting";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.0.4";

		Staging.openStagingAdmin(siteURLKey = "site-name-staging");

		Staging.viewUncheckContentNameList(uncheckContentNameList = "Blogs,Calendar,Dynamic Data Lists,Forms,Message Boards,Templates,Wiki");

		ValidateStagingUpgrade.viewStagingConfiguration();
	}

	@description = "This is a use case for LPS-87237 and LPS-126769."
	@priority = 3
	test ViewStagingDefaultSettingAfterUpgrade713 {
		property data.archive.type = "data-archive-staging-with-default-setting";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.1.3";

		Staging.openStagingAdmin(siteURLKey = "site-name-staging");

		Staging.viewUncheckContentNameList(uncheckContentNameList = "Blogs,Calendar,Dynamic Data Lists,Forms,Knowledge Base,Message Boards,Templates,Wiki");

		ValidateStagingUpgrade.viewStagingConfiguration();
	}

	@description = "This is a use case for LPS-87237 and LPS-126769."
	@priority = 3
	test ViewStagingDefaultSettingAfterUpgrade721 {
		property data.archive.type = "data-archive-staging-with-default-setting";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.1";

		Staging.openStagingAdmin(siteURLKey = "site-name-staging");

		Staging.viewUncheckContentNameList(uncheckContentNameList = "Blogs,Calendar,Dynamic Data Lists,Forms,Knowledge Base,Message Boards,Segments,Templates,Wiki");

		ValidateStagingUpgrade.viewStagingConfiguration();
	}

	@description = "This is a use case for LPS-87237 and LPS-126769."
	@priority = 3
	test ViewStagingDefaultSettingAfterUpgrade730 {
		property data.archive.type = "data-archive-staging-with-default-setting";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.3.0";

		Staging.openStagingAdmin(siteURLKey = "site-name-staging");

		Staging.viewUncheckContentNameList(uncheckContentNameList = "Blogs,Calendar,Dynamic Data Lists,Forms,Knowledge Base,Message Boards,Segments,Templates,Wiki");

		ValidateStagingUpgrade.viewStagingConfiguration();
	}

	@description = "This is a use case for LPS-87237 and LPS-126769."
	@priority = 3
	test ViewStagingDefaultSettingAfterUpgrade70106 {
		property data.archive.type = "data-archive-staging-with-default-setting";
		property portal.version = "7.0.10.6";

		Staging.openStagingAdmin(siteURLKey = "site-name-staging");

		Staging.viewUncheckContentNameList(uncheckContentNameList = "Blogs,Calendar,Dynamic Data Lists,Forms,Message Boards,Templates,Wiki");

		ValidateStagingUpgrade.viewStagingConfiguration();
	}

	@description = "This is a use case for LPS-87237 and LPS-126769."
	@priority = 3
	test ViewStagingDefaultSettingAfterUpgrade71103 {
		property data.archive.type = "data-archive-staging-with-default-setting";
		property portal.version = "7.1.10.3";

		Staging.openStagingAdmin(siteURLKey = "site-name-staging");

		Staging.viewUncheckContentNameList(uncheckContentNameList = "Blogs,Calendar,Dynamic Data Lists,Forms,Knowledge Base,Message Boards,Templates,Wiki");

		ValidateStagingUpgrade.viewStagingConfiguration();
	}

	@description = "This is a use case for LPS-87237 and LPS-126769."
	@priority = 3
	test ViewStagingDefaultSettingAfterUpgrade72101 {
		property data.archive.type = "data-archive-staging-with-default-setting";
		property portal.version = "7.2.10.1";

		Staging.openStagingAdmin(siteURLKey = "site-name-staging");

		Staging.viewUncheckContentNameList(uncheckContentNameList = "Blogs,Calendar,Dynamic Data Lists,Forms,Knowledge Base,Message Boards,Segments,Templates,Wiki");

		ValidateStagingUpgrade.viewStagingConfiguration();
	}

	@description = "This is a use case for LPS-87237 and LPS-126769."
	@priority = 3
	test ViewStagingDefaultSettingAfterUpgrade73101 {
		property data.archive.type = "data-archive-staging-with-default-setting";
		property portal.version = "7.3.10.1";

		Staging.openStagingAdmin(siteURLKey = "site-name-staging");

		Staging.viewUncheckContentNameList(uncheckContentNameList = "Blogs,Calendar,Dynamic Data Lists,Forms,Knowledge Base,Message Boards,Segments,Templates,Wiki");

		ValidateStagingUpgrade.viewStagingConfiguration();
	}

	@description = "This is a use case for LPS-87237 and LPS-126769."
	@priority = 3
	test ViewStagingDefaultSettingAfterUpgrade621021 {
		property data.archive.type = "data-archive-staging-with-default-setting";
		property database.types = "db2,mysql,oracle,postgresql";
		property portal.version = "6.2.10.21";

		Staging.openStagingAdmin(siteURLKey = "site-name-staging");

		Staging.viewUncheckContentNameList(uncheckContentNameList = "Blogs,Dynamic Data Lists,Message Boards,Templates,Wiki");

		ValidateStagingUpgrade.viewStagingConfiguration();
	}

	@description = "This is a use case for LPS-190736. TC7-2: Verify that the user is notified when choosing ALL or Date Range in the Publish Process screen when local staging is enabled after upgrading from 7.3.10.1."
	@priority = 3
	test ViewWarningMessageAfterUpgrade73101 {
		property data.archive.type = "data-archive-local-staging-with-page-versioning";
		property portal.version = "7.3.10.1";

		task ("Given: Navigate to the Advanced Publish Process screen") {
			Navigator.gotoStagedSitePage(
				pageName = "Staging Test Page",
				siteName = "Site Name");

			Staging.gotoPublishToLive();
		}

		task ("When: Click on ALL in the Content section and click on 'Refresh Counts' button") {
			Staging.configurePublishToLive(contentDateRange = "All");
		}

		task ("Then: The warning message should still display") {
			AssertVisible(
				key_warningMessage = "Publishing all content or using a wide date range will take some time.",
				locator1 = "StagingPublishToLive#WARNING_SPECIFIC");
		}

		task ("When: Click on Date Range in the Content section and click on 'Refresh Counts' button") {
			Click(locator1 = "Radio#CHOOSE_CONTENT_DATE_RANGE_CHANGE");

			ClickNoError(locator1 = "Link#REFRESH_COUNTS");
		}

		task ("Then: The warning message should still display") {
			AssertVisible(
				key_warningMessage = "Publishing all content or using a wide date range will take some time.",
				locator1 = "StagingPublishToLive#WARNING_SPECIFIC");
		}

		task ("When: Click on Last in the Content section") {
			Click.clickNoMouseOverNoWaitForVisible(locator1 = "StagingPublishToLive#CONTENT_LAST");
		}

		task ("Then: The warning message should not display") {
			AssertElementNotPresent(
				key_warningMessage = "Publishing all content or using a wide date range will take some time.",
				locator1 = "StagingPublishToLive#WARNING_SPECIFIC");
		}
	}

	@description = "This is a use case for LPS-190736. TC7-1: Verify that the user is notified when choosing ALL or Date Range in the Publish Process screen when local staging is enabled after upgrading from 7.3.10.1."
	@priority = 3
	test ViewWarningMessageWhenPublishFromStagingAdminAfterUpgrade73101 {
		property data.archive.type = "data-archive-staging-with-default-setting";
		property portal.version = "7.3.10.1";

		task ("Given: Navigate to the Advanced Publish Process screen") {
			Staging.openStagingAdmin(siteURLKey = "site-name-staging");

			Staging.addCustomPublication();

			AssertElementNotPresent(
				key_warningMessage = "Publishing all content or using a wide date range will take some time.",
				locator1 = "StagingPublishToLive#WARNING_SPECIFIC");
		}

		task ("When: Click on ALL in the Content section and click on 'Refresh Counts' button") {
			Staging.configurePublishToLive(contentDateRange = "All");
		}

		task ("Then: The warning message should still display") {
			AssertVisible(
				key_warningMessage = "Publishing all content or using a wide date range will take some time.",
				locator1 = "StagingPublishToLive#WARNING_SPECIFIC");
		}

		task ("When: Click on Date Range in the Content section and click on 'Refresh Counts' button") {
			Click(locator1 = "Radio#CHOOSE_CONTENT_DATE_RANGE_CHANGE");

			ClickNoError(locator1 = "Link#REFRESH_COUNTS");
		}

		task ("Then: The warning message should still display") {
			AssertVisible(
				key_warningMessage = "Publishing all content or using a wide date range will take some time.",
				locator1 = "StagingPublishToLive#WARNING_SPECIFIC");
		}

		task ("When: Click on Last in the Content section") {
			Click.clickNoMouseOverNoWaitForVisible(locator1 = "StagingPublishToLive#CONTENT_LAST");
		}

		task ("Then: The warning message should not display") {
			AssertElementNotPresent(
				key_warningMessage = "Publishing all content or using a wide date range will take some time.",
				locator1 = "StagingPublishToLive#WARNING_SPECIFIC");
		}
	}

}