@component-name = "portal-site-management"
definition {

	property ci.retries.disabled = "true";
	property portal.accessibility = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Sites Administration";

	setUp {
		task ("Set up virtual instance") {
			TestCase.setUpPortalInstance();
		}

		task ("Sign in") {
			User.firstLoginPG();
		}
	}

	@description = "This is a test for LPS-177717. Using Keyboard Navigation it is possible to access the back button of Reply Membership, Membership Request, and Approved users."
	@priority = 3
	test ViewBackButtonTooltipForMembershipsAdminViaKeyboard {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		task ("Given a site administrator accesses to view membersip requests") {
			JSONUser.addUser(
				userEmailAddress = "userea@liferay.com",
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "usersn");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea@liferay.com");

			HeadlessSite.addSite(
				membershipType = "Restricted",
				siteName = "Test Site Name");

			User.logoutAndLoginPG(userLoginEmailAddress = "userea@liferay.com");

			UserBar.gotoDropdownItem(dropdownItem = "My Dashboard");

			NavItem.gotoAvailableSites();

			LexiconList.clickEllipsisItem(
				item = "Request Membership",
				listEntry = "Test Site Name");

			Type(
				key_text = "comments",
				locator1 = "TextArea#ANY",
				value1 = "Request Membership for Test Site Name");

			PortletEntry.save();

			User.logoutAndLoginPG(userLoginEmailAddress = "test@liferay.com");

			Site.openSiteMembershipsAdmin(siteURLKey = "test-site-name");

			Click.waitForMenuToggleJSClick(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");

			MenuItem.click(menuItem = "View Membership Requests");

			ControlMenu.viewHeaderTitle(headerTitle = "Membership Requests");
		}

		task ("When the site administrator hovers over the back button via keyboard") {
			KeyPress(
				locator1 = "ProductMenu#TOGGLE",
				value1 = "\TAB");

			AssertElementFocused(locator1 = "Icon#BACK");
		}

		task ("Then the site administrator could see the tooltip message") {
			AssertVisible(
				key_content = "Go to Memberships",
				locator1 = "Tooltip#FLOATING_TOOLTIP_CONTENT");
		}

		task ("Given a site administrator replies a membersip request") {
			LexiconCard.clickEllipsisItem(
				card = "userfn userln",
				item = "Reply");

			WaitForElementPresent(
				key_text = "replyComments",
				locator1 = "TextArea#ANY");
		}

		task ("When the site administrator hovers over the back button via keyboard") {
			KeyPress(
				locator1 = "ProductMenu#TOGGLE",
				value1 = "\TAB");

			AssertElementFocused(locator1 = "Icon#BACK");
		}

		task ("Then the site administrator could see the tooltip message") {
			AssertVisible(
				key_content = "Go to Membership Requests",
				locator1 = "Tooltip#FLOATING_TOOLTIP_CONTENT");
		}

		task ("Given a site administrator approves the membersip request") {
			Type(
				key_text = "replyComments",
				locator1 = "TextArea#ANY",
				value1 = "Approved");

			PortletEntry.save();
		}

		task ("When the site administrator hovers over the back button via keyboard") {
			KeyPress(
				locator1 = "ProductMenu#TOGGLE",
				value1 = "\TAB");

			AssertElementFocused(locator1 = "Icon#BACK");
		}

		task ("Then the site administrator could see the tooltip message") {
			AssertVisible(
				key_content = "Go to Memberships",
				locator1 = "Tooltip#FLOATING_TOOLTIP_CONTENT");
		}
	}

}