@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACNavigation.goToSettings();

		ACSettings.goToDefinitions();

		ACDefinitions.goToDefinitionType(definitionType = "Search");
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		ACUtils.tearDownDXP();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACDefinitions.deleteAllSearchQuery();

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8779 | Test Summary: Add search query parameters"
	@priority = 5
	test CanAddSearchQueryParameters {
		ACDefinitions.addSearchQuerySuccessfully(query = "Test Query");

		ACSettings.goToDefinitions();

		ACDefinitions.goToDefinitionType(definitionType = "Search");

		ACDefinitions.viewSearchQuery(query = "Test Query");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8780 | Test Summary: Delete search query parameters"
	@priority = 5
	test CanDeleteSearchQueryParameters {
		ACDefinitions.addSearchQuerySuccessfully(query = "Test Query");

		ACSettings.goToDefinitions();

		ACDefinitions.goToDefinitionType(definitionType = "Search");

		ACDefinitions.deleteSearchQuerySuccessfully(query = "Test Query");

		ACSettings.goToDefinitions();

		ACDefinitions.goToDefinitionType(definitionType = "Search");

		ACDefinitions.noViewSearchQuery(query = "Test Query");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8781 | Test Summary: Edit search query parameters"
	@priority = 4
	test CanEditSearchQueryParameters {
		ACDefinitions.addSearchQuerySuccessfully(query = "Test Query");

		ACSettings.goToDefinitions();

		ACDefinitions.goToDefinitionType(definitionType = "Search");

		ACDefinitions.editSearchQuerySuccessfully(query = "Test Edit");

		ACSettings.goToDefinitions();

		ACDefinitions.goToDefinitionType(definitionType = "Search");

		ACDefinitions.viewSearchQuery(query = "Test Edit");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8782 | Test Summary: Maximum 5 search query strings"
	@priority = 4
	test CantSearchMoreThanFiveSearchQueryStrings {
		var queryStringList = "Test Query 1,Test Query 2,Test Query 3,Test Query 4,Test Query 5";

		ACDefinitions.addMultipleSearchQuerySuccessfully(queryStringList = ${queryStringList});

		ACSettings.goToDefinitions();

		ACDefinitions.goToDefinitionType(definitionType = "Search");

		ACDefinitions.noViewAddSearchQueryButton(query = "Test Query 5");
	}

	@description = "Feature ID: LRAC-13934 | Automation ID: LRAC-14680 | Test Summary: Customized query string will still collect search term"
	@priority = 4
	test ViewKeywordSearchedNewStringParameter {
		task ("Create a new query string parameter") {
			ACDefinitions.addSearchQuerySuccessfully(query = "query");

			ACSettings.goToDefinitions();

			ACDefinitions.goToDefinitionType(definitionType = "Search");

			ACDefinitions.viewSearchQuery(query = "query");
		}

		task ("Connect DXP to Analytics Cloud") {
			ACSettings.takeTokenFromAnalyticsCloud();

			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();

			ACUtils.addSiteAndPage();

			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Update keyword parameter on DXP") {
			ACUtils.navigateToSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			SearchPage.addWidgets(
				groupName = "Site Name",
				layoutName = "AC Page",
				searchPortletList = "Type Facet,Search Results,Search Bar");

			ACUtils.navigateToSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			SearchPage.configureSearchBarWidget(keywordsParameterName = "query");
		}

		task ("Use search bar") {
			for (var n : list "1,2,3,4") {
				SearchPage.searchWidget(searchTerm = "test parameter");

				ACUtils.waitForSendingRequest();
			}
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Navigate to AC workspace") {
			ACUtils.launchAC();
		}

		task ("Switch to new property in AC") {
			ACProperties.switchProperty(propertyName = ${assignedPropertyName});
		}

		task ("Go to sites pages tab") {
			ACNavigation.goToSites();

			ACSites.viewSiteOverviewDashboardCards();
		}

		task ("View the new report") {
			ACCards.viewCards(cardTitle = "Search Terms");

			ACTimeFilter.clickTimeFilterButton(cardName = "Search Terms");

			ACTimeFilter.setLast24Hours();
		}

		task ("Assert Keywords Searched") {
			AssertElementPresent(
				key_keyword = "test parameter",
				locator1 = "ACSites#SEARCHED_KEYWORD");
		}
	}

}