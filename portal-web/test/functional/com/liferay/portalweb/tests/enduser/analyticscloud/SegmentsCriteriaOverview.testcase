@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		ACUtils.tearDownDXP();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8498 | Test Summary: Link to view all criteria allows the user to scroll down and see more"
	@priority = 4
	test LinkToViewAllCriteriaAllowsUserScrollDownAndSeeMore {
		property test.run.type = "single";

		var criteriasAcount = "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20";

		task ("Connect the DXP to Analytics Cloud") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = ${propertyName});
		}

		task ("Add a dynamic segment") {
			ACNavigation.goToSegments();

			ACSegments.createDynamicSegment();

			ACUtils.setItemName(itemName = "Dynamic Segment Test");
		}

		task ("Add View Blog field and add 21 copies") {
			ACSegments.goToSidebarAttributes(criterion = "Individual Attributes");

			ACSegments.addSegmentField(segmentField = "birthDate");

			for (var cont : list ${criteriasAcount}) {
				ACSegments.duplicateSegmentCriteria(criteriaName = "birthDate");
			}

			ACSegments.saveSegment();
		}

		task ("Click View All Criteria, ascroll down and see the last criteria.") {
			ACUtils.clickAnyButton(button = "View All Criteria");

			for (var cont : list ${criteriasAcount}) {
				ACSegments.viewSegmentCriteriaIndividualAttributes(
					attributeName = "birthDate",
					index = ${cont});
			}
		}
	}

}