definition {

	@summary = "Restore original bundle, start it with auto upgrade enabled and reindex after"
	macro restoreOriginalBundleAndUpgrade() {
		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "prepare-upgrade-original-bundle-test-environment");

		Portlet.startServer(deleteLiferayHome = "false");

		User.firstLoginUI(
			password = PropsUtil.get("default.admin.password"),
			specificURL = "http://localhost:8080",
			userEmailAddress = "test@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		Click(
			key_navItem = "Index Actions",
			locator1 = "NavBar#NAV_ITEM_LINK");

		SearchAdministration.startReindex(action = "All Search Indexes");

		SearchAdministration.waitForReindexFinished(waitForReindexRequest = "true");

		Navigator.openSpecificURL(url = "http://localhost:8080");
	}

	@summary = "Backup original bundle, configure and start latest released bundle test enviroment"
	macro startReleasedBundle() {
		var releaseBundleVersion = PropsUtil.get("test.released.release.bundle.version");
		var releaseBundleZipURL = PropsUtil.get("test.released.test.portal.bundle.zip.url");

		AntCommands.runCommand("build-test.xml", "prepare-upgrade-released-bundle-test-environment -Dtest.released.release.bundle.version=${releaseBundleVersion} -Dtest.released.test.portal.bundle.zip.url=${releaseBundleZipURL}");

		Portlet.startServer(keepOsGiState = "true");

		AntCommands.runCommand("build-test.xml", "wait-for-license-activation");

		Navigator.openSpecificURL(url = "http://localhost:8080");
	}

}