definition {

	@summary = "Default summary"
	macro addAsset(siteScope = null, assetType = null) {
		Portlet.clickPortletPlusIconPG(portletName = "Asset Publisher");

		if (isSet(siteScope)) {
			MenuItem.click(menuItem = "Add Content (Select Scope and Type)");

			SelectField.select(
				selectFieldLabel = "Scope",
				selectFieldValue = ${siteScope});

			SelectField.select(
				selectFieldLabel = "Asset Type",
				selectFieldValue = ${assetType});

			Button.clickAdd();
		}
		else {
			MenuItem.click(menuItem = ${assetType});
		}
	}

	@summary = "Default summary"
	macro assertSiteScopeSearch(siteName = null) {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		AssertClick(
			locator1 = "Configuration#SCOPE_SELECT",
			value1 = "Select");

		MenuItem.click(menuItem = "Other Site or Asset Library");

		SelectFrame(locator1 = "IFrame#SELECT_SITES");

		Navigator.gotoNavTab(navTab = "Sites of Which I Am a Member");

		SiteSelector.viewSite(site = ${siteName});
	}

	@summary = "Default summary"
	macro changePagination(pageNumber = null) {
		Click(
			key_pageNumber = ${pageNumber},
			locator1 = "Pagination#PARTICULAR_PAGE");

		AssertTextEquals.assertPartialText(
			locator1 = "Pagination#CURRENT_PAGE_LINK",
			value1 = ${pageNumber});
	}

	@summary = "Default summary"
	macro clickAssetTitle(assetTitle = null) {
		Click(
			key_assetTitle = ${assetTitle},
			locator1 = "AP#ASSET_ABSTRACT_TITLE");
	}

	@summary = "Default summary"
	macro configureAPSelectMoreThanOnePG(selectContent = null, moveSelected = null, portletName = null) {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "Select More Than One");

		for (var contentName : list ${selectContent}) {
			var key_contentName = ${contentName};

			Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_CONTENT");

			if (${moveSelected} == "true") {
				Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_MOVE_SELECTED");
			}
			else {
				Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_MOVE_AVAILABLE");
			}
		}

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro configureAssetDisplayOrderPG(fieldNameOrder = null, sortOrder = null) {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Ordering");

		Select(
			locator1 = "APConfiguration#ORDERING_AND_GROUPING_ORDER_BY_SELECT",
			value1 = ${fieldNameOrder});

		var key_sortOrder = ${sortOrder};

		if (isSet(sortOrder) && (IsNotVisible(locator1 = "APConfiguration#ORDERING_AND_GROUPING_ORDER_DIRECTIONAL_ICON"))) {
			if (${sortOrder} == "Ascending") {
				Click(
					key_sortOrder = "Descending",
					locator1 = "APConfiguration#ORDERING_AND_GROUPING_ORDER_DIRECTIONAL_ICON");
			}
			else {
				Click(
					key_sortOrder = "Ascending",
					locator1 = "APConfiguration#ORDERING_AND_GROUPING_ORDER_DIRECTIONAL_ICON");
			}
		}

		AssertVisible(locator1 = "APConfiguration#ORDERING_AND_GROUPING_ORDER_DIRECTIONAL_ICON");

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro configureAssetLinkBehaviorPG(disableConfiguration = null, assetLinkBehavior = null) {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Display Settings");

		Panel.expandPanel(panel = "Set and Enable");

		if (isSet(disableConfiguration)) {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = ${disableConfiguration},
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		Select(
			locator1 = "APConfigurationDisplaysettings#ASSET_LINK_BEHAVIOR_SELECT",
			value1 = ${assetLinkBehavior});

		PortletEntry.save();

		IFrame.closeFrame();
	}

	@summary = "Default summary"
	macro configureAssetTypePG(selectMoreThanOneSubtype = null, assetSubtype = null, selectContent = null, moveSelected = null, selectedAsset = null) {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = ${selectedAsset});

		if (${selectMoreThanOneSubtype} == "true") {
			Select(
				locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
				value1 = "Select More Than One");

			if (isSet(selectContent)) {
				for (var contentName : list ${selectContent}) {
					var key_contentName = ${contentName};

					Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_CONTENT");

					if (${moveSelected} == "true") {
						Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_SUBTYPE_MOVE_SELECTED");
					}
					else {
						Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_SUBTYPE_MOVE_AVAILABLE");
					}
				}
			}
		}
		else {
			Select(
				locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
				value1 = ${assetSubtype});
		}

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro configureCategoriesFilterPG(queryAndOperator = null, categoryName = null) {
		if (!(isSet(portletName))) {
			var portletName = "Asset Publisher";
		}

		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Filter");

		Click(locator1 = "APConfiguration#RULE_BUILDER_ADD_CONDITION");

		Select(
			locator1 = "APConfiguration#FILTER_CATEGORIZATION_SELECT",
			value1 = "Categories");

		if (isSet(queryAndOperator)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_AND_OPERATOR",
				value1 = ${queryAndOperator});
		}

		Click(locator1 = "Button#SELECT_CATEGORIES");

		AssetCategorization.gotoSelectCategory();

		Check.checkNotVisible(
			key_nodeName = ${categoryName},
			locator1 = "Treeview#NODE_CHECKBOX");

		SelectFrameTop();

		SelectFrame(
			key_title = ${portletName},
			locator1 = "IFrame#MODAL_ANY");

		if (IsElementPresent(key_text = "Add", locator1 = "Modal#MODAL_FOOTER_BUTTON")) {
			Click(
				key_text = "Add",
				locator1 = "Modal#MODAL_FOOTER_BUTTON");
		}
		else if (IsElementPresent(key_text = "Done", locator1 = "Modal#MODAL_FOOTER_BUTTON")) {
			Click(
				key_text = "Done",
				locator1 = "Modal#MODAL_FOOTER_BUTTON");
		}

		AssertTextEquals(
			key_categoryName = ${categoryName},
			locator1 = "AssetCategorization#CATEGORY",
			value1 = ${categoryName});

		PortletEntry.save();

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro configureDisplayConversionsPG(documentTypes = null, check = null, uncheck = null) {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Display Settings");

		Panel.expandPanel(panel = "Set and Enable");

		for (var documentType : list ${documentTypes}) {
			var documentTypeUppercase = StringUtil.upperCase(${documentType});

			if (${check} == "true") {
				Check.checkToggleSwitch(locator1 = "APConfigurationDisplaysettings#ENABLE_CONVERSION_${documentTypeUppercase}_CHECKBOX");
			}
			else if (${uncheck} == "true") {
				Uncheck.uncheckToggleSwitch(locator1 = "APConfigurationDisplaysettings#ENABLE_CONVERSION_${documentTypeUppercase}_CHECKBOX");
			}
		}

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro configureDisplaySettings(displaySettings = null, enableSocialBookmarkSites = null, portletName = null) {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Display Settings");

		Panel.expandPanel(panel = "Set and Enable");

		for (var displaySetting : list ${displaySettings}) {
			Check(
				checkboxName = ${displaySetting},
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		if (isSet(enableSocialBookmarkSites)) {
			for (var socialBookmarkSite : list ${enableSocialBookmarkSites}) {
				AddSelection(
					locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_AVAILABLE_SELECT",
					value1 = ${socialBookmarkSite});

				Click(locator1 = "Button#MOVE_AVAILABLE_TO_CURRENT");

				AssertTextEquals.assertPartialText(
					locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_CURRENT_SELECT",
					value1 = ${socialBookmarkSite});
			}
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro configureDisplayTemplatePG(displayTemplate = null) {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Navigator.gotoNavTab(navTab = "Display Settings");

		Click(
			key_class = "display-template-selector",
			key_index = 1,
			locator1 = "Button#ANY_WITH_CLASS_AND_INDEX");

		MenuItem.click(menuItem = ${displayTemplate});

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro configureDynamicAssetSelectionPG(portletName = null) {
		if (IsElementPresent(key_portletName = ${portletName}, key_text = "Select a collection to make it visible.", locator1 = "Portlet#PORTLET_SELECTOR")) {
			AssetPublisherPortlet.gotoSelectCollection(portletName = ${portletName});
		}
		else {
			AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});
		}

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Click(locator1 = "APConfiguration#ASSET_SELECTION_DYNAMIC");

		Alert.viewSuccessMessage();

		IFrame.closeFrame();
	}

	@summary = "Default summary"
	macro configureFilterByFieldPG(assetSubtype = null, fieldFilter = null, fieldValue = null, selectedAsset = null) {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = ${selectedAsset});

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
			value1 = ${assetSubtype});

		Check.checkToggleSwitch(locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_CHECKBOX");

		AssertClick(
			locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_SELECT_BUTTON",
			value1 = "Select");

		SelectFrame(locator1 = "IFrame#SELECT_STRUCTURE_FIELD");

		if (isSet(fieldFilter)) {
			Select(
				key_fieldLabel = "Select",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = ${fieldFilter});
		}

		if (isSet(fieldValue)) {
			Type(
				key_text = ${fieldFilter},
				locator1 = "TextInput#ANY",
				value1 = ${fieldValue});
		}

		Button.clickApply();

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(fieldValue)) {
			AssertElementPresent(
				key_text = "${fieldFilter}: ${fieldValue}",
				locator1 = "APConfiguration#SOURCE_SCOPE_FIELD_FILTER_AND_VALUE");
		}

		PortletEntry.save();

		Panel.expandPanel(panel = "Source");

		AssertSelectedLabel(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = ${selectedAsset});

		AssertSelectedLabel(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
			value1 = ${assetSubtype});
	}

	@summary = "Default summary"
	macro configureManualAssetSelectionPG(depotName = null, searchTerm = null, searchInfo = null, siteName = null, assetTitle = null, portletName = null, assetType = null) {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Click(locator1 = "APConfiguration#ASSET_SELECTION_MANUAL");

		if (isSet(depotName)) {
			Panel.expandPanel(panel = "Scope");

			Click(locator1 = "Configuration#SCOPE_SELECT");

			MenuItem.click(menuItem = "Other Site or Asset Library");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			Navigator.gotoNavTab(navTab = "Asset Libraries");

			if (isSet(noConnectedDepot)) {
				AssertTextEquals.assertPartialText(
					locator1 = "Message#EMPTY_INFO",
					value1 = "No asset libraries were found.");
			}
			else {
				SiteSelector.selectSite(site = ${depotName});

				SelectFrame(locator1 = "IFrame#MODAL_BODY");
			}
		}

		if (isSet(assetTitle) || isSet(searchTerm)) {
			Panel.expandPanel(panel = "Asset Entries");

			if (isSet(depotName)) {
				Click(
					key_depotName = ${depotName},
					locator1 = "APConfiguration#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_SELECT_IN_DEPOT");
			}
			else if (isSet(siteName)) {
				Click(
					key_depotName = ${siteName},
					locator1 = "APConfiguration#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_SELECT_IN_DEPOT");
			}
			else {
				Click(locator1 = "APConfiguration#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_SELECT_BUTTON");
			}

			var key_assetType = ${assetType};

			MenuItem.click(menuItem = ${assetType});

			WaitForElementPresent(locator1 = "APConfigurationManual#ASSET_SELECTION_MANUAL_SELECT_ASSET_ENTRIES_DIALOG");

			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			if (isSet(assetTitle)) {
				var key_assetTitle = ${assetTitle};

				if (isSet(viewNoRelatedAsset)) {
					AssertElementNotPresent(
						key_rowEntry = ${assetTitle},
						locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
				}
				else {
					WaitForElementPresent(
						key_rowEntry = ${assetTitle},
						locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");

					Click(
						key_rowEntry = ${assetTitle},
						locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
				}
			}

			if (isSet(searchTerm)) {
				Search.searchPG(
					modal = "true",
					portletName = "",
					searchTerm = ${searchTerm});

				AssertTextEquals(
					locator1 = "Search#SEARCH_INFO",
					value1 = ${searchInfo});

				PortletEntry.selectAll();
			}

			SelectFrameParent();

			Button.click(button = "Add");

			Alert.viewSuccessMessage();
		}

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro configurePaginationPG(paginationNumber = null, paginationType = null, portletIndex = null) {
		AssetPublisherPortlet.gotoConfigurationPG(portletIndex = ${portletIndex});

		Navigator.gotoNavTab(navTab = "Display Settings");

		Type(
			locator1 = "APConfigurationDisplaysettings#NUMBER_OF_ITEMS_TO_DISPLAY_FIELD",
			value1 = ${paginationNumber});

		Select(
			locator1 = "APConfigurationDisplaysettings#PAGINATION_TYPE_SELECT",
			value1 = ${paginationType});

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro configureScope(depotName = null, otherSite = null, pageName = null) {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		Click(locator1 = "Configuration#SCOPE_SELECT");

		if (isSet(globalSite)) {
			MenuItem.click(menuItem = "Global");
		}

		if (isSet(otherSite)) {
			MenuItem.click(menuItem = "Other Site or Asset Library");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			Navigator.gotoNavTab(navTab = "Sites of Which I Am a Member");

			SiteSelector.selectSite(site = ${otherSite});
		}

		if (isSet(depotName)) {
			MenuItem.click(menuItem = "Other Site or Asset Library");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			Navigator.gotoNavTab(navTab = "Asset Libraries");

			Click(
				key_card = ${depotName},
				locator1 = "Card#CARD_TITLE");
		}

		if (isSet(defaultSite)) {
			MenuItem.click(menuItem = "Current Site");
		}

		if (isSet(pageName)) {
			MenuItem.click(menuItem = "Current Page (${pageName})");
		}

		SelectFrameTop();

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro configureSelectedPG(selectedAsset = null) {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = ${selectedAsset});

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro configureShowMetadataFieldsPG(removeMetadata = null, metadataFieldList = null, addMetadata = null, portletName = null) {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Display Settings");

		Panel.expandPanel(panel = "Metadata");

		for (var metadataField : list ${metadataFieldList}) {
			if (${addMetadata} == "true") {
				AddSelection(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_AVAILABLE_FIELD_SELECT",
					value1 = ${metadataField});

				AssertElementPresent(
					key_configuration = "metadataContent",
					locator1 = "Configuration#MOVE_AVAILABLE_TO_CURRENT");

				Click(
					key_configuration = "metadataContent",
					locator1 = "Configuration#MOVE_AVAILABLE_TO_CURRENT");

				AssertTextEquals(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_CURRENT_FIELD_SELECT",
					value1 = ${metadataField});
			}
		}

		for (var metadataField : list ${metadataFieldList}) {
			if (${removeMetadata} == "true") {
				AddSelection(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_CURRENT_FIELD_SELECT",
					value1 = ${metadataField});

				AssertElementPresent(
					key_configuration = "metadataContent",
					locator1 = "Configuration#MOVE_CURRENT_TO_AVAILABLE");

				Click(
					key_configuration = "metadataContent",
					locator1 = "Configuration#MOVE_CURRENT_TO_AVAILABLE");

				AssertTextEquals(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_AVAILABLE_FIELD_SELECT",
					value1 = ${metadataField});
			}
		}

		PortletEntry.save();

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro configureSiteScopePG(siteScopeType = null, siteName = null) {
		var key_siteName = ${siteName};

		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		AssertClick(
			locator1 = "Configuration#SCOPE_SELECT",
			value1 = "Select");

		if (${siteName} == "Global") {
			MenuItem.click(menuItem = ${siteName});
		}
		else {
			MenuItem.click(menuItem = "Other Site or Asset Library");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			if (${siteScopeType} == "Child Site") {
				Navigator.gotoNavTab(navTab = "Child Sites");

				LexiconEntry.changeDisplayStyle(displayStyle = "table");
			}
			else if (${siteScopeType} == "Parent Site") {
				Navigator.gotoNavTab(navTab = "Parent Sites");

				LexiconEntry.changeDisplayStyle(displayStyle = "table");
			}
			else {
				Navigator.gotoNavTab(navTab = "Sites of Which I Am a Member");

				LexiconEntry.changeDisplayStyle(displayStyle = "table");
			}

			AssertTextEquals(
				locator1 = "APConfigurationSites#SITES_TABLE_NAME",
				value1 = ${siteName});

			Click(
				key_columnName = "title",
				key_tableEntry = ${siteName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Alert.viewSuccessMessage();
		}

		Panel.expandPanel(panel = "Scope");

		AssertTextEquals.assertPartialText(
			locator1 = "APConfiguration#SOURCE_SCOPE_NAME",
			value1 = ${siteName});

		AssertTextEquals(
			locator1 = "APConfiguration#SOURCE_SCOPE_TYPE",
			value1 = ${siteScopeType});

		PortletEntry.save();

		AssertTextEquals.assertPartialText(
			locator1 = "APConfiguration#SOURCE_SCOPE_NAME",
			value1 = ${siteName});

		AssertTextEquals(
			locator1 = "APConfiguration#SOURCE_SCOPE_TYPE",
			value1 = ${siteScopeType});

		AssertElementPresent(locator1 = "APConfiguration#SOURCE_SCOPE_DELETE");

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro configureSiteScopeRemoveSitePG(siteScopeType = null, siteName = null, portletName = null) {
		var key_siteName = ${siteName};

		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		var key_siteName = ${siteName};

		Click(locator1 = "APConfiguration#SOURCE_SCOPE_DELETE");

		Alert.viewSuccessMessage();

		AssertTextNotPresent(
			locator1 = "APConfiguration#SOURCE_SCOPE_NAME",
			value1 = ${siteName});

		AssertTextNotPresent(
			locator1 = "APConfiguration#SOURCE_SCOPE_TYPE",
			value1 = ${siteScopeType});

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro configureTagsFilterPG(queryContains = null, queryAndOperator = null, tagNameList = null) {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Filter");

		if (isSet(queryAndOperator)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_AND_OPERATOR",
				value1 = ${queryAndOperator});
		}

		if (isSet(queryContains)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_CONTAINS",
				value1 = ${queryContains});
		}

		Select(
			locator1 = "APConfiguration#FILTER_CATEGORIZATION_SELECT",
			value1 = "Tags");

		AssetCategorization.selectTag(tagNameList = ${tagNameList});

		PortletEntry.save();

		IFrame.selectTopFrame();
	}

	@summary = "Default summary"
	macro deleteConfigurationTemplatePG(configurationName = null) {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration Templates");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		LexiconTable.clickEllipsisItem(
			item = "Delete",
			tableEntry = ${configurationName});

		AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();

		PortletEntry.viewEmptyMessage(entity = "Configuration Templates");
	}

	@summary = "Default summary"
	macro editConfigureCategoriesFilterPG(queryContains = null, categoryNameList = null) {
		if (!(isSet(portletName))) {
			var portletName = "Asset Publisher";
		}

		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Filter");

		if (isSet(queryContains)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_CONTAINS",
				value1 = ${queryContains});
		}

		Click(locator1 = "Button#SELECT_CATEGORIES");

		AssetCategorization.gotoSelectCategory();

		for (var categoryName : list ${categoryNameList}) {
			Check.checkNotVisible(
				key_nodeName = ${categoryName},
				locator1 = "Treeview#NODE_CHECKBOX");
		}

		SelectFrameTop();

		SelectFrame(
			key_title = ${portletName},
			locator1 = "IFrame#MODAL_ANY");

		if (IsElementPresent(locator1 = "//button[contains(.,'Add')]")) {
			AssertClick(
				locator1 = "//button[contains(.,'Add')]",
				value1 = "Add");
		}
		else if (IsElementPresent(locator1 = "Button#DONE")) {
			AssertClick(
				locator1 = "Button#DONE",
				value1 = "Done");
		}

		PortletEntry.save();

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro enableDynamicAndManualSelection() {
		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Feature Flags",
			configurationName = "Deprecation",
			configurationScope = "Virtual Instance Scope");

		if (IsElementPresent(locator1 = "FeatureFlag#TOGGLE_ROW", title_row = "Asset Selection for Asset Publisher", toggle_state = "Disabled")) {
			Check.checkToggleSwitch(
				locator1 = "FeatureFlag#TOGGLE_ROW",
				title_row = "Asset Selection for Asset Publisher",
				toggle_state = "Disabled");
		}

		Navigator.openURL();
	}

	@summary = "Default summary"
	macro enableRSSSubscription() {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Navigator.gotoNavTab(navTab = "Subscriptions");

		AssertTextEquals(
			locator1 = "APConfiguration#SUBSCRIPTIONS_ENABLE_RSS_SUBSCRIPTION_LABEL",
			value1 = "Enable RSS Subscription");

		Check.checkToggleSwitch(locator1 = "APConfiguration#SUBSCRIPTIONS_ENABLE_RSS_SUBSCRIPTION");

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro enableUserSegementFilter() {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "User Segments Filter");

		AssertTextEquals(
			locator1 = "APConfiguration#ENABLE_USER_SEGMENTS_FILTER_LABEL",
			value1 = "User Segments Filter");

		Check.checkToggleSwitch(locator1 = "APConfiguration#ENABLE_USER_SEGMENTS_FILTER");

		Button.clickSave();

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro gotoConfigurationPG(portletIndex = null) {
		if (!(isSet(portletName))) {
			var portletName = "Asset Publisher";
		}

		WaitForLiferayEvent.initializeLiferayEventLog();

		Portlet.gotoPortletOptions(
			portletIndex = ${portletIndex},
			portletName = ${portletName},
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");
	}

	@summary = "Default summary"
	macro gotoEditAssetPG(assetTitle = null) {
		MouseOver(
			key_assetTitle = ${assetTitle},
			locator1 = "AP#ASSET_ABSTRACT_TITLE");

		Click.mouseOverClick(
			key_assetTitle = ${assetTitle},
			locator1 = "AP#ASSET_ELLIPSIS_ICON");

		MenuItem.click(menuItem = "Edit");
	}

	@summary = "Default summary"
	macro gotoSelectCollection() {
		if (!(isSet(portletName))) {
			var portletName = "Asset Publisher";
		}

		WaitForLiferayEvent.initializeLiferayEventLog();

		Click(
			key_portletName = ${portletName},
			key_text = "Select a collection to make it visible.",
			locator1 = "Portlet#PORTLET_SELECTOR");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");
	}

	@summary = "Default summary"
	macro gotoViewOnNewPage() {
		Click(
			key_text = "View in Context »",
			locator1 = "Link#ANY");
	}

	@summary = "Default summary"
	macro removeSiteScope(removeSiteScopes = null) {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		for (var removeSiteScope : list ${removeSiteScopes}) {
			var key_siteName = ${removeSiteScope};

			Click(locator1 = "APConfiguration#SOURCE_SCOPE_DELETE");
		}

		Alert.viewSuccessMessage();

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro restoreConfigurationTemplatePG(configurationName = null) {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration Templates");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		LexiconTable.clickEllipsisItem(
			item = "Apply",
			tableEntry = ${configurationName});

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro saveConfigurationTemplatePG(configurationName = null) {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration Templates");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		PortletEntry.viewEmptyMessage(entity = "Configuration Templates");

		AssertClick(
			locator1 = "Configuration#SAVE_CONFIGURATION_TEMPLATE",
			value1 = "Save Current Configuration as Template");

		PortletEntry.inputName(name = ${configurationName});

		Button.clickSave();

		var key_configurationName = ${configurationName};

		AssertTextEquals(
			locator1 = "Configuration#CONFIGURATION_TEMPLATE_TABLE_NAME",
			value1 = ${configurationName});

		Alert.viewSuccessMessage();

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro selectAssetList(depotName = null, assetListName = null) {
		if (IsElementPresent(key_tab = "Asset Selection", locator1 = "NavTab#TAB_LINK")) {
			Navigator.gotoNavTab(navTab = "Asset Selection");
		}
		else {
			if (IsElementPresent(key_portletName = "Asset Publisher", key_text = "Select a collection to make it visible.", locator1 = "Portlet#PORTLET_SELECTOR")) {
				AssetPublisherPortlet.gotoSelectCollection();
			}
			else {
				AssetPublisherPortlet.gotoConfigurationPG();
			}

			Navigator.gotoNavTab(navTab = "Asset Selection");
		}

		var key_title = ${assetListName};

		Panel.expandPanel(panel = "Asset Selection");

		if (IsNotChecked(locator1 = "APConfiguration#ASSET_SELECTION_ASSET_LIST")) {
			Check(locator1 = "APConfiguration#ASSET_SELECTION_ASSET_LIST");

			Alert.viewSuccessMessage();
		}

		Panel.expandPanel(panel = "Select Collection");

		Click(
			ariaLabel = "Select Collection",
			locator1 = "Button#ANY_WITH_ARIA_LABEL");

		WaitForElementPresent(locator1 = "IFrame#ASSET_LIST_DIALOG");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		NavItem.click(navItem = "Collections");

		if (isSet(depotName)) {
			AssertClick(
				key_breadcrumbName = "Sites and Libraries",
				locator1 = "Breadcrumb#BREADCRUMB_ENTRY",
				value1 = "Sites and Libraries");

			AssertClick(
				key_groupTab = "Asset Library",
				locator1 = "ItemSelector#NAVIGATION_GROUP_TAB",
				value1 = "Asset Library");

			Click(
				key_card = ${depotName},
				locator1 = "Card#CARD_TITLE");

			if (isSet(collectionsDisable)) {
				AssertTextEquals(
					locator1 = "Message#INFO",
					value1 = "Info:This application is not supported for Asset Libraries. Please, go back to scope selection.");
			}
			else {
				Click(locator1 = "AssetLists#ASSET_LIST_ENTRY_TITLE_CARD");
			}
		}
		else {
			Click(locator1 = "AssetLists#ASSET_LIST_ENTRY_TITLE_CARD");
		}

		if (isSet(assetListName)) {
			SelectFrameTop();

			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			PortletEntry.save();

			SelectFrameTop();
		}
	}

	@summary = "Default summary"
	macro viewAssetDetailsPG(displayTemplate = null, imageThumbnailName = null, assetSubfolderDetails = null, assetContent = null, assetTitle = null, assetArticleDetails = null, assetType = null) {
		var key_assetTitle = ${assetTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${assetTitle});

		if (${displayTemplate} == "Full Content") {
			Click(locator1 = "AP#ASSET_DETAILS_LINK");
		}
		else {
			AssetPublisherPortlet.clickAssetTitle(assetTitle = ${assetTitle});
		}

		if (${assetType} == "Web Content Folder") {
			AssertTextEquals.assertPartialText(
				key_position = 1,
				locator1 = "AP#ASSET_ABSTRACT_DETAIL_WEB_CONTENT_FOLDER_CONTENT",
				value1 = ${assetSubfolderDetails});

			AssertTextEquals.assertPartialText(
				key_position = 2,
				locator1 = "AP#ASSET_ABSTRACT_DETAIL_WEB_CONTENT_FOLDER_CONTENT",
				value1 = ${assetArticleDetails});
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "AP#ASSET_ABSTRACT_TITLE",
				value1 = ${assetTitle});

			AssertTextEquals.assertPartialText(
				locator1 = "AP#ASSET_ABSTRACT_DETAIL_CONTENT",
				value1 = ${assetContent});

			if (isSet(imageThumbnailName)) {
				AssertVisible(
					key_thumbnailName = ${imageThumbnailName},
					locator1 = "AP#ASSET_ABSTRACT_DETAIL_IMAGE_THUMBNAIL");
			}
		}
	}

	@summary = "Default summary"
	macro viewAssetMetadataPG(categoryName = null) {
		var key_categoryName = ${categoryName};

		AssertTextEquals.assertPartialText(
			locator1 = "AP#METADATA_CATEGORY",
			value1 = ${categoryName});
	}

	@summary = "Default summary"
	macro viewAssetNotPresentPG(assetContent = null, assetTitle = null) {
		var key_assetTitle = ${assetTitle};

		AssertElementNotPresent(locator1 = "AP#ASSET_ABSTRACT_TITLE");

		if (isSet(assetContent)) {
			AssertTextNotPresent(
				locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
				value1 = ${assetContent});
		}
	}

	@summary = "Default summary"
	macro viewAssetOrderPG(assetTitleList = null) {
		var n = 1;

		for (var assetTitle : list ${assetTitleList}) {
			AssertVisible(
				key_assetTitle = ${assetTitle},
				key_index = ${n},
				locator1 = "AP#ASSET_ORDER");

			var n = ${n} + 1;
		}
	}

	@summary = "Default summary"
	macro viewAssetPG(assetContent = null, assetTitle = null, categoryName = null) {
		var key_assetTitle = ${assetTitle};

		if (isSet(filteredByCategory)) {
			AssertTextEquals.assertPartialText(
				key_categoryName = ${categoryName},
				locator1 = "AP#CATEGORIES_FILTER_CATEGORY",
				value1 = ${categoryName});
		}

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${assetTitle});

		if (isSet(assetContent)) {
			AssertTextEquals.assertPartialText(
				locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
				value1 = ${assetContent});
		}
	}

	@summary = "Default summary"
	macro viewAssetRelatedAssets(relatedAssetTitles = null) {
		AssertTextEquals(
			locator1 = "AssetRelatedAssets#HEADER",
			value1 = "Related Assets");

		for (var relatedAssetTitle : list ${relatedAssetTitles}) {
			AssertTextEquals(
				key_relatedAssetTitle = ${relatedAssetTitle},
				locator1 = "AssetRelatedAssets#ASSET_TITLE",
				value1 = ${relatedAssetTitle});
		}
	}

	@summary = "Default summary"
	macro viewAssetTypeNotAvailable(assetType = null) {
		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Panel.expandPanel(panel = "Source");

		AssertTextNotEquals(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = ${assetType});

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro viewAssetViewCount(assetTitle = null, viewCount = null) {
		AssertTextEquals.assertPartialText(
			key_assetTitle = ${assetTitle},
			key_viewCount = ${viewCount},
			locator1 = "APAsset#ASSET_VIEW_COUNT",
			value1 = ${viewCount});
	}

	@summary = "Default summary"
	macro viewConfigureAPDisplayTemplateFullContentBookmarksPG(bookmarkDescription = null, assetTitle = null, bookmarkName = null, url = null) {
		var key_assetTitle = ${assetTitle};
		var key_bookmarkName = ${bookmarkName};

		AssertElementNotPresent(locator1 = "Link#READ_MORE");

		AssertVisible(
			key_text = "View on New Page »",
			locator1 = "Link#ANY");

		AssertVisible(
			key_text = ${url},
			locator1 = "Link#ANY");

		AssertVisible(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${bookmarkDescription});
	}

	@summary = "Default summary"
	macro viewConfigureAPDisplayTemplateTableBookmarksPG(bookmarkDescription = null, assetTitle = null, bookmarkName = null) {
		var key_assetTitle = ${assetTitle};
		var key_bookmarkName = ${bookmarkName};

		AssertElementNotPresent(locator1 = "Link#READ_MORE");

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${bookmarkDescription});

		AssertElementNotPresent(locator1 = "AP#ASSET_ABSTRACT_BOOKMARK_TABLE_DISPLAY_TEMPLATE_BOOKMARK_ICON");
	}

	@summary = "Default summary"
	macro viewConfigureAPDisplayTemplateTitleListBookmarksPG(bookmarkDescription = null, assetTitle = null, bookmarkName = null) {
		var key_assetTitle = ${assetTitle};
		var key_bookmarkName = ${bookmarkName};

		AssertElementNotPresent(locator1 = "Link#READ_MORE");

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${bookmarkDescription});
	}

	@summary = "Default summary"
	macro viewConfigureAPMoveToAvailablePG(assetTitle = null) {
		var key_assetTitle = ${assetTitle};

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${assetTitle});
	}

	@summary = "Default summary"
	macro viewConfigureAPMoveToSelectedPG(assetTitle = null) {
		var key_assetTitle = ${assetTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${assetTitle});
	}

	@summary = "Default summary"
	macro viewConfigureSiteScope(siteName = null) {
		var key_siteName = ${siteName};

		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		AssertTextEquals.assertPartialText(
			locator1 = "APConfiguration#SOURCE_SCOPE_NAME",
			value1 = ${siteName});
	}

	@summary = "Default summary"
	macro viewConfigureSiteScopeContentSharingPG(contentSharingAcrossSitesEnabled = null, childSite = null, liferaySiteName = null) {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		AssertClick(
			locator1 = "Configuration#SCOPE_SELECT",
			value1 = "Select");

		if (${contentSharingAcrossSitesEnabled} == "true") {
			AssertTextEquals(
				key_menuItem = "Global",
				locator1 = "MenuItem#ANY_MENU_ITEM",
				value1 = "Global");

			MenuItem.click(menuItem = "Other Site or Asset Library");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			AssertClick.assertPartialTextClickAt(
				key_tab = "Sites of Which I Am a Member",
				locator1 = "NavTab#TAB_LINK",
				value1 = "Sites of Which I Am a Member");

			AssertElementPresent(
				key_tab = "Sites of Which I Am a Member",
				locator1 = "NavTab#ACTIVE_TAB_LINK");

			var key_siteName = ${liferaySiteName};

			LexiconEntry.changeDisplayStyle(displayStyle = "table");

			AssertTextEquals(
				locator1 = "APConfigurationSites#SITES_TABLE_NAME",
				value1 = ${liferaySiteName});

			AssertTextEquals(
				key_columnName = "title",
				key_tableEntry = ${liferaySiteName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO",
				value1 = ${liferaySiteName});
		}
		else if (${contentSharingAcrossSitesEnabled} == "false") {
			AssertTextEquals(
				key_menuItem = "Global",
				locator1 = "MenuItem#ANY_MENU_ITEM",
				value1 = "Global");

			if (${childSite} == "true") {
				AssertTextEquals(
					key_menuItem = "Other Site or Asset Library",
					locator1 = "MenuItem#ANY_MENU_ITEM",
					value1 = "Other Site or Asset Library");
			}
			else {
				MenuItem.viewNotPresent(menuItem = "OTHER_SITE");
			}
		}

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro viewContentSharingPG(siteScope1 = null, siteScope2 = null, assetContent = null, assetTitle = null) {
		MouseOver.mouseOverNotVisible(locator1 = "AP#ADD_ASSET_PLUS_ICON");

		Click(locator1 = "AP#ADD_ASSET_PLUS_ICON");

		AssertClick(
			locator1 = "AP#ADD_ASSET_SCOPED",
			value1 = "Add Content (Select Scope and Type)");

		Select(
			locator1 = "Select#SCOPE",
			value1 = ${siteScope1});

		AssertSelectedLabel(
			locator1 = "Select#SCOPE",
			value1 = ${siteScope1});

		Select(
			locator1 = "Select#SCOPE",
			value1 = ${siteScope2});

		AssertSelectedLabel(
			locator1 = "Select#SCOPE",
			value1 = ${siteScope2});

		Button.clickCancel();

		AssetPublisherPortlet.viewPG(
			assetContent = ${assetContent},
			assetTitle = ${assetTitle});
	}

	@summary = "Default summary"
	macro viewCustomADTRichSummaryPG(assetContent = null, assetTitle = null, assetDescription = null) {
		var key_assetTitle = ${assetTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_RICH_SUMMARY_TITLE",
			value1 = ${assetTitle});

		if (isSet(assetDescription)) {
			AssertTextEquals.assertPartialText(
				locator1 = "AP#CUSTOM_ASSET_ABSTRACT_DESCRIPTION",
				value1 = ${assetDescription});
		}

		AssertElementPresent(locator1 = "Link#READ_MORE");

		AssertElementPresent(locator1 = "Icon#PRINT");

		AssertElementPresent(locator1 = "Icon#FLAG");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR");

		AssertElementPresent(locator1 = "Button#SUBSCRIBE");

		AssertElementPresent(locator1 = "Icon#CUSTOM_EDIT");

		Click(locator1 = "Link#READ_MORE");

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${assetTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${assetContent});
	}

	@summary = "Default summary"
	macro viewDefaultWithAllDisplaySettingsCheckboxesPG(assetTitle = null, assetDescription = null) {
		var key_assetTitle = ${assetTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${assetTitle});

		AssertElementPresent(locator1 = "AP#ASSET_ABSTRACT_EDIT");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${assetDescription});
	}

	@summary = "Default summary"
	macro viewDisplayOrderPG(assetTitle = null, rowNumber = null) {
		AssertTextEquals(
			key_rowNumber = ${rowNumber},
			locator1 = "APAsset#ASSET_ROW_ENTRY_TITLE",
			value1 = ${assetTitle});
	}

	@summary = "Default summary"
	macro viewDisplaySettings(displaySettings = null, portletName = null) {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Display Settings");

		Panel.expandPanel(panel = "Set and Enable");

		for (var displaySetting : list ${displaySettings}) {
			if (contains(${displaySetting}, "Social Bookmarks")) {
				AssertChecked.assertCheckedHiddenToggleSwitch(locator1 = "ToggleSwitch#ENABLE_SOCIAL_BOOKMARKS");
			}
			else {
				AssertChecked(
					checkboxName = ${displaySetting},
					locator1 = "Checkbox#ANY_CHECKBOX");
			}
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro viewDynamicAssetSelectionConfigurationPG(portletName = null) {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Click(locator1 = "APConfiguration#ASSET_SELECTION_DYNAMIC");

		for (var panel : list "Source,Filter,Ordering") {
			AssertElementPresent(
				key_panel = ${panel},
				locator1 = "Panel#PANEL_COLLAPSED");
		}

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro viewEditLinkPG(entryTitle = null, entryContent = null) {
		var key_assetTitle = ${entryTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${entryTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${entryContent});

		AssertElementPresent(locator1 = "AP#ASSET_ABSTRACT_EDIT");
	}

	@summary = "Default summary"
	macro viewFilterAndFieldsPG(assetSubtype = null, assetSubtypeFields = null, noneIndexable = null, portletName = null, selectedAsset = null) {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = ${selectedAsset});

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
			value1 = ${assetSubtype});

		if (${noneIndexable} == "true") {
			AssertNotVisible(locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_CHECKBOX");

			AssertElementNotPresent(locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_SELECT_BUTTON");
		}
		else {
			Check.checkToggleSwitch(locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_CHECKBOX");

			AssertClick(
				locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_SELECT_BUTTON",
				value1 = "Select");

			SelectFrame(locator1 = "IFrame#SELECT_STRUCTURE_FIELD");

			for (var assetSubtypeField : list ${assetSubtypeFields}) {
				AssertElementPresent(
					key_fieldLabel = "Select",
					key_value = ${assetSubtypeField},
					locator1 = "Select#GENERIC_SELECT_VALUE");
			}
		}

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro viewManualAssetSelectionConfigurationPG(portletName = null) {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Asset Entries");

		Click(locator1 = "APConfiguration#ASSET_SELECTION_MANUAL");

		AssertElementNotPresent(locator1 = "APConfiguration#SOURCE_DROPDOWN");

		AssertElementNotPresent(locator1 = "APConfiguration#SOURCE_DROPDOWN_COLLAPSED");

		AssertElementNotPresent(locator1 = "APConfiguration#FILTER_DROPDOWN");

		AssertElementNotPresent(locator1 = "APConfiguration#FILTER_DROPDOWN_COLLAPSED");

		AssertElementNotPresent(locator1 = "APConfiguration#CUSTOM_USER_DROPDOWN");

		AssertElementNotPresent(locator1 = "APConfiguration#CUSTOM_USER_DROPDOWN_COLLAPSED");

		AssertElementNotPresent(locator1 = "APConfiguration#ORDERING_AND_GROUPING_DROPDOWN");

		AssertElementNotPresent(locator1 = "APConfiguration#ORDERING_AND_GROUPING_DROPDOWN_COLLAPSED");

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro viewManualAssetTypesPG(assetEntryTypes = null) {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Panel.expandPanel(panel = "Asset Entries");

		Click(locator1 = "APConfiguration#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_SELECT_BUTTON");

		for (var assetEntryType : list ${assetEntryTypes}) {
			AssertTextEquals.assertPartialText(
				key_menuItem = ${assetEntryType},
				locator1 = "MenuItem#ANY_MENU_ITEM",
				value1 = ${assetEntryType});
		}

		IFrame.selectTopFrame();
	}

	@summary = "Default summary"
	macro viewManualNoAssetsMessagePG() {
		AssertTextEquals(
			key_widgetName = "Asset Publisher",
			locator1 = "Message#INFO_SPECIFIC_WIDGET",
			value1 = "Info: There are no results.");
	}

	@summary = "Default summary"
	macro viewMultipleDDLRecordsViaAP(ddlRecordFieldData2 = null, ddlRecordFieldData1 = null, ddlRecordFieldData3 = null) {
		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DDL_RECORD_1",
			value1 = ${ddlRecordFieldData1});

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DDL_RECORD_2",
			value1 = ${ddlRecordFieldData2});

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DDL_RECORD_3",
			value1 = ${ddlRecordFieldData3});
	}

	@summary = "Default summary"
	macro viewMultipleSiteScopesAddDropdowns(siteName1 = null, siteName2 = null) {
		var key_siteScope = ${siteName1};

		MouseOver.mouseOverNotVisible(locator1 = "AP#ADD_ASSET_PLUS_ICON");

		Click(locator1 = "AP#ADD_ASSET_PLUS_ICON");

		AssertClick(
			locator1 = "AP#ADD_ASSET_SCOPED",
			value1 = "Add Content (Select Scope and Type)");

		Select(
			locator1 = "Select#SCOPE",
			value1 = ${siteName1});

		AssertSelectedLabel(
			locator1 = "Select#SCOPE",
			value1 = ${siteName1});

		Select(
			locator1 = "Select#SCOPE",
			value1 = ${siteName2});

		AssertSelectedLabel(
			locator1 = "Select#SCOPE",
			value1 = ${siteName2});
	}

	@summary = "Default summary"
	macro viewNoEditLinkPG(entryTitle = null, entryContent = null) {
		var key_assetTitle = ${entryTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${entryTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${entryContent});

		Click(locator1 = "AP#ASSET_ABSTRACT_EDIT");

		AssertElementNotPresent(locator1 = "AP#ASSET_EDIT");
	}

	@summary = "Default summary"
	macro viewPG(assetContent = null, assetTitle = null, assetPriority = null, relatedAssetTitles = null, tagName = null, relatedAssetTitleHidden = null) {
		var key_assetContent = ${assetContent};
		var key_assetTitle = ${assetTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${assetTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${assetContent});

		AssertTextEquals.assertPartialText(
			locator1 = "APAsset#ASSET_CONTENT",
			value1 = ${assetContent});

		AssertClick(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${assetTitle});

		if (isSet(assetPriority)) {
			var key_assetPriority = ${assetPriority};

			AssertTextEquals.assertPartialText(
				locator1 = "AP#METADATA_PRIORITY",
				value1 = ${assetPriority});
		}

		if (isSet(relatedAssetTitles)) {
			AssetPublisherPortlet.viewAssetRelatedAssets(relatedAssetTitles = ${relatedAssetTitles});
		}

		if (isSet(relatedAssetTitleHidden)) {
			AssertTextEquals(
				locator1 = "AssetRelatedAssets#HEADER",
				value1 = "Related Assets:");

			AssertTextNotPresent(value1 = ${relatedAssetTitleHidden});
		}

		if (isSet(tagName)) {
			AssertTextEquals(
				locator1 = "AP#METADATA_TAGS",
				value1 = ${tagName});
		}
	}

	@summary = "Default summary"
	macro viewPlusIconNotPresentPG() {
		AssertElementNotPresent(locator1 = "AP#ADD_ASSET_PLUS_ICON");
	}

	@summary = "Default summary"
	macro viewReadMoreLinkNotPresentPG() {
		AssertTextNotPresent(
			locator1 = "Link#READ_MORE",
			value1 = "Read More");
	}

	@summary = "Default summary"
	macro viewRestoredSetupPG(portletName = null) {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = ${portletName});

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Asset Entries");

		AssertTextEquals(
			locator1 = "APConfigurationManual#ASSET_SELECTION_MANUAL_NONE",
			value1 = "None");

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro viewSelectedPG(selectedAssetConfiguration = null, assetSubtypeConfiguration = null, selectedAsset = null) {
		Portlet.clickPortletPlusIconPG(portletName = "Asset Publisher");

		AssertTextEquals(
			key_menuItem = ${selectedAsset},
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = ${selectedAsset});

		Click(locator1 = "//body");

		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		AssertSelectedLabel(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = ${selectedAssetConfiguration});

		if (isSet(assetSubtypeConfiguration)) {
			AssertSelectedLabel(
				locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
				value1 = ${assetSubtypeConfiguration});
		}

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro viewTagFocusPG(nonTaggedAsset = null, assetTitleList = null) {
		for (var assetTitle : list ${assetTitleList}) {
			var key_assetTitle = ${assetTitle};

			AssertTextEquals(
				locator1 = "AP#ASSET_ABSTRACT_TITLE",
				value1 = ${assetTitle});
		}

		if (isSet(nonTaggedAsset)) {
			var key_assetTitle = ${nonTaggedAsset};

			AssertTextNotPresent(
				locator1 = "AP#ASSET_ABSTRACT_TITLE",
				value1 = ${nonTaggedAsset});
		}
	}

	@summary = "Default summary"
	macro viewVideoThumbnail(thumbnailName = null) {
		AssertVisible(
			key_thumbnailName = ${thumbnailName},
			locator1 = "AP#ASSET_ABSTRACT_DETAIL_EXTERNAL_VIDEO_THUMBNAIL");
	}

}