definition {

	@summary = "Default summary"
	macro addAssociatedAssetType(required = null, assetType = null) {
		Panel.expandPanel(panel = "Associated Asset Types");

		if (!(isSet(rowNumber))) {
			var rowNumber = 1;
		}

		Select(
			key_rowNumber = ${rowNumber},
			locator1 = "CategoriesEditVocabulary#ASSOCIATED_ASSET_TYPES_SELECT_N",
			value1 = ${assetType});

		if (${required} == "true") {
			var key_rowNumber = ${rowNumber};

			Check.checkToggleSwitch(locator1 = "ToggleSwitch#REQUIRED");
		}
	}

	@summary = "Default summary"
	macro addCP(allowMultipleCategories = null, localizationName = null, locale2 = null, vocabularyDescription = null, localization2Name = null, vocabularyName = null, locale = null) {
		Vocabulary.gotoAddVocabulary();

		PortletEntry.inputName(name = ${vocabularyName});

		if (isSet(vocabularyDescription)) {
			PortletEntry.inputDescription(description = ${vocabularyDescription});
		}

		if (${allowMultipleCategories} == "false") {
			Uncheck.uncheckToggleSwitch(locator1 = "CategoriesEditVocabulary#ALLOW_MULTIPLE_CATEGORIES_TOGGLE_SWITCH");
		}

		if (isSet(locale)) {
			PortletEntry.changeLocale(
				fieldName = "Name",
				locale = ${locale});

			PortletEntry.inputName(name = ${localizationName});
		}

		if (isSet(locale2)) {
			PortletEntry.changeLocale(
				fieldName = "Name",
				locale = ${locale2});

			PortletEntry.inputName(name = ${localization2Name});
		}

		Button.clickNoError(button = "Save");

		AssertConfirm.assertPartialConfirmation(value1 = "Are you sure you want to create this vocabulary with public visibility?");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro addInternalVocabulary(vocabularyName = null) {
		Vocabulary.gotoAddVocabulary();

		PortletEntry.inputName(name = ${vocabularyName});

		Click(locator1 = "Categories#INTERNAL_VISIBILITY");

		Button.clickNoError(button = "Save");

		AssertConfirm.assertPartialConfirmation(value1 = "Are you sure you want to create this vocabulary only with internal visibility?");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro addViewableByCP(viewableBy = null, vocabularyName = null) {
		Vocabulary.gotoAddVocabulary();

		PortletEntry.inputName(name = ${vocabularyName});

		Panel.expandPanel(panel = "Permissions");

		Select(
			locator1 = "Select#PERMISSIONS",
			value1 = ${viewableBy});

		Button.clickNoError(button = "Save");

		AssertConfirm.assertPartialConfirmation(value1 = "Are you sure you want to create this vocabulary with public visibility?");

		Alert.viewSuccessMessage();

		AssertTextEquals(
			key_navNested = ${vocabularyName},
			locator1 = "NavNested#NAV_NESTED_LINK",
			value1 = ${vocabularyName});
	}

	@summary = "Default summary"
	macro addVocabularyWithNullTitle() {
		Vocabulary.gotoAddVocabulary();

		PortletEntry.inputName(name = " ");

		Button.clickSave();

		AssertTextEquals(
			locator1 = "Message#REQUIRED_INFO",
			value1 = "The Name field is required.");
	}

	@summary = "Default summary"
	macro addWithAssociatedAssetTypeCP(assetSubtype = null, vocabularyName = null, rowNumber = null, required = null, assetType = null) {
		Vocabulary.gotoAddVocabulary();

		PortletEntry.inputName(name = ${vocabularyName});

		Vocabulary.addAssociatedAssetType(
			assetType = ${assetType},
			required = ${required},
			rowNumber = ${rowNumber});

		if (isSet(assetSubtype)) {
			Select(
				locator1 = "Select#ASSET_SUBTYPE",
				value1 = ${assetSubtype});
		}

		Button.clickNoError(button = "Save");

		AssertConfirm.assertPartialConfirmation(value1 = "Are you sure you want to create this vocabulary with public visibility?");

		Alert.viewSuccessMessage();

		AssertTextEquals(
			key_navNested = ${vocabularyName},
			locator1 = "NavNested#NAV_NESTED_LINK",
			value1 = ${vocabularyName});
	}

	@summary = "Default summary"
	macro assertVocabularyVisibilityNonEditable(vocabularyName = null, visibilityType = null) {
		Navigator.gotoNavNested(navNested = ${vocabularyName});

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Edit");

		AssertElementPresent(
			key_visibilityType = ${visibilityType},
			locator1 = "Categories#VOCABULARY_VISIBILITY_DISABLED");

		Button.clickCancel();
	}

	@summary = "Default summary"
	macro deleteAssociatedAssetTypeViaVocabularyCP(vocabularyName = null) {
		Navigator.gotoNavNested(navNested = ${vocabularyName});

		Click.waitForMenuToggleJSClick(
			key_headerName = ${vocabularyName},
			locator1 = "Portlet#H2_HEADER_VERTICAL_ELLIPSIS");

		WaitForLiferayEvent.initializeLiferayEventLog();

		MenuItem.click(menuItem = "Edit");

		Panel.expandPanel(panel = "Associated Asset Types");

		Click(locator1 = "CategoriesEditVocabulary#ASSOCIATED_ASSET_TYPES_DELETE_BUTTON_2");

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro deleteByIconCP(vocabularyName = null) {
		WaitForLiferayEvent.initializeLiferayEventLog();

		Click.waitForMenuToggleJSClick(locator1 = "NavNested#NAV_NESTED_ELLIPSIS");

		MenuItem.click(menuItem = "Delete");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertTextEquals(
			key_vocabularyName = ${vocabularyName},
			locator1 = "Categories#VOCABULARY_ENTRY",
			value1 = ${vocabularyName});

		PortletEntry.selectAll();

		SelectFrame(value1 = "relative=top");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		AssertTextEquals(
			locator1 = "Modal#BODY",
			value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		Alert.viewSuccessMessage();

		AssertTextNotPresent(
			key_navNested = ${vocabularyName},
			locator1 = "NavNested#NAV_NESTED_LINK",
			value1 = ${vocabularyName});
	}

	@summary = "Default summary"
	macro deleteByMenuCP(vocabularyName = null) {
		WaitForLiferayEvent.initializeLiferayEventLog();

		Click.waitForMenuToggleJSClick(locator1 = "NavNested#NAV_NESTED_ELLIPSIS");

		MenuItem.click(menuItem = "Delete");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Check(
			key_vocabularyName = ${vocabularyName},
			locator1 = "Categories#VOCABULARY_ENTRY_CHECKBOX");

		SelectFrame(value1 = "relative=top");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		AssertTextEquals(
			locator1 = "Modal#BODY",
			value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		Alert.viewSuccessMessage();

		AssertTextNotPresent(
			key_navNested = ${vocabularyName},
			locator1 = "NavNested#NAV_NESTED_LINK",
			value1 = ${vocabularyName});
	}

	@summary = "Default summary"
	macro editCP(allowMultipleCategories = null, vocabularyNameEdit = null, vocabularyName = null) {
		Navigator.gotoNavNested(navNested = ${vocabularyName});

		Click.waitForMenuToggleJSClick(
			key_headerName = ${vocabularyName},
			locator1 = "Portlet#H2_HEADER_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		if (isSet(vocabularyNameEdit)) {
			PortletEntry.inputTitle(title = ${vocabularyNameEdit});
		}

		if (${allowMultipleCategories} == "false") {
			Uncheck.uncheckToggleSwitch(locator1 = "CategoriesEditVocabulary#ALLOW_MULTIPLE_CATEGORIES_TOGGLE_SWITCH");
		}
		else if (${allowMultipleCategories} == "true") {
			Check.checkToggleSwitch(locator1 = "CategoriesEditVocabulary#ALLOW_MULTIPLE_CATEGORIES_TOGGLE_SWITCH");
		}

		PortletEntry.save();

		if (isSet(vocabularyNameEdit)) {
			var key_navNested = ${vocabularyNameEdit};

			AssertTextEquals(
				locator1 = "NavNested#NAV_NESTED_LINK",
				value1 = ${vocabularyNameEdit});
		}
	}

	@summary = "Default summary"
	macro gotoAddVocabulary() {
		if (IsElementPresent(locator1 = "//*[contains(@class,'taglib-empty-result-message-title')][normalize-space(text())='No Vocabularies yet.']")) {
			Button.click(button = "Add Vocabulary");
		}
		else {
			Click(locator1 = "NavNested#NAV_NESTED_PLUS");
		}
	}

	@summary = "Default summary"
	macro goToVocabulary(vocabularyName = null) {
		Navigator.gotoNavNested(navNested = ${vocabularyName});

		AssertElementPresent(
			key_title = ${vocabularyName},
			locator1 = "Header#H2_TITLE");
	}

	@summary = "Default summary"
	macro tearDownCP() {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			portlet = "Categories");

		WaitForLiferayEvent.initializeLiferayEventLog();

		Click.waitForMenuToggleJSClick(locator1 = "NavNested#NAV_NESTED_ELLIPSIS");

		MenuItem.click(menuItem = "Delete");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (IsElementNotPresent(locator1 = "Message#EMPTY_INFO")) {
			PortletEntry.selectAll();

			SelectFrame(value1 = "relative=top");

			Click(
				key_text = "Delete",
				locator1 = "Button#ANY");

			AssertTextEquals(
				locator1 = "Modal#BODY",
				value1 = "Are you sure you want to delete this? It will be deleted immediately.");

			Click(
				key_text = "Delete",
				locator1 = "Modal#MODAL_FOOTER_BUTTON");
		}
	}

	@summary = "Default summary"
	macro viewCP(allowMultipleCategories = null, vocabularyName = null) {
		AssertTextEquals(
			key_navNested = ${vocabularyName},
			locator1 = "NavNested#NAV_NESTED_LINK",
			value1 = ${vocabularyName});

		if (${allowMultipleCategories} == "false") {
			Navigator.gotoNavNested(navNested = ${vocabularyName});

			Click.waitForMenuToggleJSClick(
				key_headerName = ${vocabularyName},
				locator1 = "Portlet#H2_HEADER_VERTICAL_ELLIPSIS");

			WaitForLiferayEvent.initializeLiferayEventLog();

			MenuItem.click(menuItem = "Edit");

			AssertNotChecked.assertNotCheckedNotVisible(locator1 = "CategoriesEditVocabulary#ALLOW_MULTIPLE_CATEGORIES_TOGGLE_SWITCH");
		}
	}

	@summary = "Default summary"
	macro viewVocabularyAllowMultipleCAtegories(vocabularyName = null) {
		Navigator.gotoNavNested(navNested = ${vocabularyName});

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Edit");

		AssertChecked.assertCheckedNotVisible(locator1 = "Categories#VOCABULARY_EDIT_CHECKBOX");

		Button.clickCancel();
	}

	@summary = "Default summary"
	macro viewVocabularyAssociatedAssetTypesRequirement(vocabularyName = null) {
		Navigator.gotoNavNested(navNested = ${vocabularyName});

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Edit");

		Panel.expandPanel(panel = "Associated Asset Types");

		AssertNotChecked.assertNotCheckedNotVisible(locator1 = "Categories#VOCABULARY_EDIT_CHECKBOX");

		Button.clickCancel();
	}

	@summary = "Default summary"
	macro viewVocabularyPermissionsCP(viewableBy = null, vocabularyName = null) {
		Navigator.gotoNavNested(navNested = ${vocabularyName});

		WaitForLiferayEvent.initializeLiferayEventLog();

		Click.waitForMenuToggleJSClick(
			key_headerName = ${vocabularyName},
			locator1 = "Portlet#H2_HEADER_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Permissions");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (${viewableBy} == "Anyone (Guest Role)") {
			AssertChecked.assertCheckedNotVisible(locator1 = "AssetPermissions#GUEST_VIEW_CHECKBOX");
		}
		else if (${viewableBy} == "Owner") {
			AssertChecked.assertCheckedNotVisible(locator1 = "AssetPermissions#OWNER_VIEW_CHECKBOX");
		}
		else if (${viewableBy} == "Site Members") {
			AssertChecked.assertCheckedNotVisible(locator1 = "AssetPermissions#SITE_MEMBER_VIEW_CHECKBOX");
		}

		SelectFrameTop(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro viewVocabularyVisibilityEdit(vocabularyName = null) {
		Navigator.gotoNavNested(navNested = ${vocabularyName});

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Edit");

		AssertChecked.assertCheckedNotVisible(locator1 = "Categories#VOCABULARY_EDIT_CHECKBOX");

		Button.clickCancel();
	}

	@summary = "Default summary"
	macro viewWithAssociatedAssetTypeCP(vocabularyName = null, vocabularyAssociatedAssetType = null) {
		Navigator.gotoNavNested(navNested = ${vocabularyName});

		Click.waitForMenuToggleJSClick(
			key_headerName = ${vocabularyName},
			locator1 = "Portlet#H2_HEADER_VERTICAL_ELLIPSIS");

		WaitForLiferayEvent.initializeLiferayEventLog();

		MenuItem.click(menuItem = "Edit");

		Panel.expandPanel(panel = "Associated Asset Types");

		AssertSelectedLabel(
			locator1 = "CategoriesEditVocabulary#ASSOCIATED_ASSET_TYPES_SELECT",
			value1 = ${vocabularyAssociatedAssetType});
	}

}