definition {

	@summary = "Default summary"
	macro changeLocale(fieldName = null, locale = null, translated = null) {
		Portlet.waitForForm();

		if (isSet(fieldName)) {
			Click.clickNoMouseOver(
				key_fieldName = ${fieldName},
				locator1 = "Button#LOCALIZATION");
		}
		else if (isSet(friendlyURLHistory)) {
			Click.clickNoMouseOver(locator1 = "Icon#FRIENDLY_URL_HISTORY_LOCALIZATION");
		}
		else if (isSet(modal)) {
			Click(locator1 = "Modal#LOCALIZATION_DROPDOWN_TOGGLE");
		}
		else if (isSet(translated)) {
			Click.clickNoMouseOver(locator1 = "Button#LOCALIZATION_TRANSLATED");
		}
		else {
			Click.clickNoMouseOver(locator1 = "Button#LOCALIZATION_GENERIC");
		}

		if (isSet(localizedFriendlyURL)) {
			Click.clickNoMouseOver(locator1 = "Icon#FRIENDLY_URL_HISTORY_SPANISH_LOCALIZATION");
		}
		else if (isSet(modal)) {
			Click(
				key_locale = ${locale},
				locator1 = "Translation#DROPDOWN_MENU_ITEM");
		}
		else if (isSet(translated)) {
			var keyLocale = StringUtil.replace(${locale}, "-", "_");

			Click(
				key_locale = ${keyLocale},
				locator1 = "Translation#LOCALIZATION_NAME_TRANSLATED");
		}
		else {
			Click(
				key_locale = ${locale},
				locator1 = "Translation#LOCALIZATION_NAME");
		}
	}

	@summary = "Default summary"
	macro changeLocaleSummary(locale = null) {
		Click.clickNoMouseOver(locator1 = "Button#LOCALIZATION_SUMMARY");

		Click(
			key_locale = ${locale},
			locator1 = "Translation#LOCALIZATION_NAME");
	}

	@summary = "Default summary"
	macro checkOut() {
		Button.clickCheckOut();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro clickEditFromEllipsis() {
		Click.waitForMenuToggleJSClick(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");
	}

	@summary = "Default summary"
	macro clickMoveToRecycleBin() {
		MenuItem.click(menuItem = "Delete");
	}

	@summary = "Default summary"
	macro create() {
		Button.clickCreate();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro deleteViaMenuItem(rowEntry = null) {
		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Delete",
			rowEntry = ${rowEntry});

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");
	}

	@summary = "Default summary"
	macro deleteViaToolbar(rowEntries = null) {
		for (var rowEntry : list ${rowEntries}) {
			LexiconEntry.selectEntry(key_rowEntry = ${rowEntry});
		}

		ClickNoError(
			key_text = "times-circle",
			locator1 = "ManagementBar#ANY_ICON");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");
	}

	@summary = "Default summary"
	macro deselectAll() {
		if (IsChecked(locator1 = "Checkbox#LEXICON_SELECT_ALL_INPUT")) {
			Click(locator1 = "Checkbox#LEXICON_SELECT_ALL_CONTAINER");
		}

		AssertNotChecked.assertNotCheckedNotVisible(locator1 = "Checkbox#LEXICON_SELECT_ALL_INPUT");
	}

	@summary = "Default summary"
	macro inputDescription(description = null) {
		Type(
			locator1 = "TextArea#DESCRIPTION",
			value1 = ${description});
	}

	@summary = "Default summary"
	macro inputDescriptionTextInput(description = null) {
		Type(
			locator1 = "TextInput#DESCRIPTION",
			value1 = ${description});
	}

	@summary = "Default summary"
	macro inputLocalizedName(localizedName = null, language = null) {
		PortletEntry.changeLocale(
			fieldName = "Name",
			locale = ${language});

		PortletEntry.inputName(name = ${localizedName});
	}

	@summary = "Default summary"
	macro inputName(name = null) {
		Type(
			locator1 = "TextInput#NAME",
			value1 = ${name});
	}

	@summary = "Default summary"
	macro inputNumber(number = null, fieldLabel = null) {
		Type(
			key_fieldLabel = ${fieldLabel},
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = ${number});
	}

	@summary = "Default summary"
	macro inputStructureKeyTextInput(structureKey = null) {
		Type(
			locator1 = "TextInput#STRUCTURE_KEY_FIELD",
			value1 = ${structureKey});
	}

	@summary = "Default summary"
	macro inputText(fieldLabel = null, text = null) {
		Type(
			key_fieldLabel = ${fieldLabel},
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = ${text});
	}

	@summary = "Default summary"
	macro inputTextArea(text = null, fieldId = null) {
		Type(
			key_text = ${fieldId},
			locator1 = "TextArea#ANY",
			value1 = ${text});
	}

	@summary = "Default summary"
	macro inputTitle(title = null) {
		Type(
			locator1 = "TextInput#TITLE",
			value1 = ${title});
	}

	@summary = "Default summary"
	macro publish() {
		Button.clickPublish();

		WaitForElementPresent.waitForElementPresentNoException(locator1 = "Message#ALERT_DISMISSIBLE");

		if (IsElementPresent(locator1 = "Message#WARNING")) {
			VerifyElementPresent(locator1 = "Message#WARNING");
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	@summary = "Default summary"
	macro save() {
		Click(
			key_text = "Save",
			locator1 = "Button#ANY");

		Alert.viewSuccessMessage();

		WaitForLiferayEvent.initializeLiferayEventLog();
	}

	@summary = "Default summary"
	macro saveAsDraft() {
		Button.clickSaveAsDraft();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro selectAll() {
		if (IsNotChecked.isNotCheckedNotVisible(locator1 = "Checkbox#LEXICON_SELECT_ALL_INPUT")) {
			Click(locator1 = "Checkbox#LEXICON_SELECT_ALL_CONTAINER");
		}
		else if (IsNotChecked(locator1 = "Checkbox#SELECT_ALL")) {
			Click(locator1 = "Checkbox#SELECT_ALL");
		}

		AssertChecked.assertCheckedNotVisible(locator1 = "Checkbox#LEXICON_SELECT_ALL_INPUT");
	}

	@summary = "Default summary"
	macro SelectAllOnSpecificWidget(widgetPosition = null) {
		if (IsNotChecked.isNotCheckedNotVisible(key_position = ${widgetPosition}, locator1 = "Checkbox#LEXICON_SELECT_ALL_INPUT_SPECIFIC")) {
			Click(
				key_position = ${widgetPosition},
				locator1 = "Checkbox#LEXICON_SELECT_ALL_CONTAINER_SPECIFIC");
		}

		AssertChecked.assertCheckedNotVisible(
			key_position = ${widgetPosition},
			locator1 = "Checkbox#LEXICON_SELECT_ALL_INPUT_SPECIFIC");
	}

	@summary = "Default summary"
	macro submitForWorkflow() {
		Button.clickSubmitForWorkflow();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro update() {
		Button.clickUpdate();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro viewEmptyMessage() {
		var entity = StringUtil.toLowerCase(${entity});

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no ${entity}.");
	}

	@summary = "Default summary"
	macro viewLocale(locale = null, portletName = null) {
		if (${portletName} == "Web Content") {
			AssertElementPresent(
				key_locale = ${locale},
				locator1 = "Translation#CURRENT_LOCALE_TITLE");

			AssertElementPresent(
				key_locale = ${locale},
				locator1 = "Translation#CURRENT_LOCALE_CONTENT");

			AssertElementPresent(
				key_locale = ${locale},
				locator1 = "Translation#CURRENT_LOCALE_DESCRIPTION");
		}
		else {
			AssertElementPresent(
				key_locale = ${locale},
				locator1 = "Translation#CURRENT_LOCALE");
		}
	}

	@summary = "Default summary"
	macro viewNoNavItemLink() {
		AssertElementNotPresent(locator1 = "NavBar#NAV_ITEM_LINK");
	}

}