definition {

	@summary = "Default summary"
	macro assertCssCustomPropertyValue(expected = null, attribute = null, element = null) {
		var actual = Css.getCssValue(
			attribute = ${attribute},
			element = ${element});

		StringUtil.assertEquals(${expected}, ${actual});
	}

	@summary = "Default summary"
	macro assertCssValueIsGreaterThan(expected = null, attribute = null, element = null) {
		var actual = Css.getCssValue(
			attribute = ${attribute},
			element = ${element});

		var actual = StringUtil.extractLeadingDigits(${actual});

		TestUtils.isGreaterThan(
			actual = ${actual},
			expected = ${expected});
	}

	@summary = "Default summary"
	macro getCssValue(attribute = null, element = null) {
		WaitForSPARefresh();

		var javascript = '''
function getWebElement(locator) {
	return document.evaluate(locator, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
}

var computedStyle = getComputedStyle(getWebElement("${element}"));

return computedStyle.getPropertyValue("${attribute}");

		''';

		var cssValue = selenium.getEval(${javascript});

		return ${cssValue};
	}

	@summary = "Default summary"
	macro getElementPropertyValue(property = null, element = null) {
		WaitForSPARefresh();

		var javascript = '''
var value = document.evaluate("${element}", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.${property};

return value.toString();
	''';

		var propertyValue = selenium.getEval(${javascript});

		return ${propertyValue};
	}

	@summary = "Default summary"
	macro getPseudoElementCssValue(attribute = null, pseudo = null, element = null) {
		WaitForSPARefresh();

		var javascript = '''
function getWebElement(locator) {
	return document.evaluate(locator, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
}

var computedStyle = getComputedStyle(getWebElement("${element}"),'${pseudo}');

return computedStyle.getPropertyValue("${attribute}");

		''';

		var cssValue = selenium.getEval(${javascript});

		return ${cssValue};
	}

	@summary = "Default summary"
	macro getStyleValue(className = null, styleName = null, cssSelector = null) {
		WaitForSPARefresh();

		var javascript = '''
return	Array.from(document.querySelector('${cssSelector}').sheet.rules).filter(rule => rule.selectorText == `.${className}`)[0].style.${styleName};
		''';

		var styleValue = selenium.getEval(${javascript});

		return ${styleValue};
	}

}