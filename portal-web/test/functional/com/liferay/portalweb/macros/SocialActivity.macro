definition {

	// There is no need for a SocialActivity#tearDownCP, as the User Statistics will not be reset and Jenkins does not run teardowns.

	@summary = "Default summary"
	macro configureActionCP(userAction = null, participationIncrement = null, participationLimitPeriod = null, participationLimitValue = null, contributionLimitPeriod = null, contributionIncrement = null, contributionLimitValue = null) {
		var key_userAction = ${userAction};

		if (isSet(participationIncrement)) {
			Select(
				locator1 = "SocialActivity#PARTICIPATION_INCREMENT_SELECT",
				value1 = ${participationIncrement});
		}

		if (isSet(contributionIncrement)) {
			Select(
				locator1 = "SocialActivity#CONTRIBUTION_INCREMENT_SELECT",
				value1 = ${contributionIncrement});
		}

		if (isSet(contributionLimitValue) || isSet(contributionLimitPeriod) || isSet(participationLimitValue) || isSet(participationLimitPeriod)) {
			AssertClick(
				locator1 = "SocialActivity#LIMIT_LINK",
				value1 = "Limit");

			if (isSet(contributionLimitValue)) {
				Select(
					locator1 = "SocialActivity#CONTRIBUTION_LIMIT_VALUE_SELECT",
					value1 = ${contributionLimitValue});
			}

			if (isSet(contributionLimitPeriod)) {
				Select(
					locator1 = "SocialActivity#CONTRIBUTION_LIMIT_PERIOD_SELECT",
					value1 = ${contributionLimitPeriod});
			}

			if (isSet(participationLimitValue)) {
				Select(
					locator1 = "SocialActivity#PARTICIPATION_LIMIT_VALUE_SELECT",
					value1 = ${participationLimitValue});
			}

			if (isSet(participationLimitPeriod)) {
				Select(
					locator1 = "SocialActivity#PARTICIPATION_LIMIT_PERIOD_SELECT",
					value1 = ${participationLimitPeriod});
			}
		}

		Button.clickSave();
	}

	@summary = "Default summary"
	macro enableBlogsCP() {
		Check(locator1 = "Checkbox#BLOGS_ENTRY");

		Button.clickSave();
	}

	@summary = "Default summary"
	macro removeActionCP(userAction = null) {
		var key_userAction = ${userAction};

		Click(locator1 = "SocialActivity#CLOSE_ICON");

		AssertTextEquals(
			locator1 = "SocialActivity#POSSIBLE_USER_ACTIONS_BUTTON",
			value1 = ${userAction});

		Button.clickSave();
	}

	@summary = "Default summary"
	macro updateGroupStatisticsConfiguration(chartWidth = null, displayActivityCounterName = null, dataRange = null, chartType = null) {
		Portlet.gotoPortletOptions(
			portletName = "Group Statistics",
			portletOption = "Configuration");

		SelectFrame(locator1 = "GroupStatisticsConfiguration#CONFIGURATION_IFRAME");

		var key_chartType = ${chartType};
		var key_chartWidth = ${chartWidth};
		var key_dataRange = ${dataRange};
		var key_displayActivityCounterName = ${displayActivityCounterName};

		Select(
			locator1 = "GroupStatisticsConfiguration#SETUP_COUNTERS_DISPLAY_ACTIVITY_COUNTER_NAME_DROPDOWN",
			value1 = ${displayActivityCounterName});

		Select(
			locator1 = "GroupStatisticsConfiguration#SETUP_COUNTERS_CHART_TYPE_DROPDOWN",
			value1 = ${chartType});

		Select(
			locator1 = "GroupStatisticsConfiguration#SETUP_COUNTERS_CHART_WIDTH_DROPDOWN",
			value1 = ${chartWidth});

		Select(
			locator1 = "GroupStatisticsConfiguration#SETUP_COUNTERS_DATA_RANGE_DROPDOWN",
			value1 = ${dataRange});

		PortletEntry.save();

		SelectFrameTop(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro viewPGViaGroupStatistics(siteStatistics = null, currentValue = null) {
		var key_siteStatistics = ${siteStatistics};

		AssertTextEquals.assertPartialText(
			locator1 = "GroupStatistics#SITE_STATISTICS_PANEL",
			value1 = ${siteStatistics});

		var key_currentValue = ${currentValue};

		AssertTextEquals.assertPartialText(
			locator1 = "GroupStatistics#GROUP_STATISTICS_BODY_INFO",
			value1 = ${currentValue});

		AssertElementPresent(locator1 = "GroupStatistics#GROUP_STATISTICS_BODY_CHART");
	}

	@summary = "Default summary"
	macro viewPGViaUserStatistics(contributionScore = null, participationScore = null, userRank = null, userName = null) {
		var key_userName = ${userName};

		AssertTextEquals(
			locator1 = "UserStatistics#RANKING_TABLE_USER_NAME",
			value1 = ${userName});

		AssertTextEquals(
			locator1 = "UserStatistics#RANKING_TABLE_RANK",
			value1 = ${userRank});

		AssertTextEquals(
			locator1 = "UserStatistics#RANKING_TABLE_CONTRIBUTION_SCORE",
			value1 = ${contributionScore});

		AssertTextEquals(
			locator1 = "UserStatistics#RANKING_TABLE_PARTICIPATION_SCORE",
			value1 = ${participationScore});
	}

}