definition {

	@summary = "Default summary"
	macro addArticleCP(webContentTitle = null, webContentContent = null) {
		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		PortletEntry.publish();
	}

	@summary = "Default summary"
	macro addCP(videoShortcutTitle = null, depotName = null, siteName = null, webContentDescription = null, navTab = null, uploadFileName = null, viewableBy = null, webContentTitle = null, embedVideo = null, imageFileName = null, webContentContent = null, webContentId = null, folderName = null, imageSourceURL = null) {
		AssertVisible(locator1 = "WCEditWebContent#SIDEBAR");

		if (isSet(webContentTitle)) {
			PortletEntry.inputTitle(title = ${webContentTitle});
		}

		if (isSet(webContentContent)) {
			if (isSet(source)) {
				CKEditor.addSourceContent(content = ${webContentContent});
			}
			else {
				CKEditor.addContentInWebContent(
					content = ${webContentContent},
					fieldLabel = "Content");
			}
		}

		if (isSet(webContentDescription)) {
			CKEditor.addContentInWebContent(
				content = ${webContentDescription},
				fieldLabel = "Description");
		}

		if (isSet(embedImage)) {
			var key_imageFileName = ${imageFileName};

			ItemSelector.gotoItemSelectorViaCKEditor();

			if (isSet(uploadFileName)) {
				ItemSelector.uploadFile(
					navTab = ${navTab},
					uploadFileName = ${uploadFileName});

				SelectFrameTop();
			}
			else if (isSet(imageSourceURL)) {
				ItemSelector.addImageFromURL(
					imageSourceURL = ${imageSourceURL},
					navTab = "URL");
			}
			else {
				SelectFrame(locator1 = "ItemSelector#ITEM_SELECTOR_IFRAME");

				AssertClick(
					key_breadcrumbName = "Sites and Libraries",
					locator1 = "Breadcrumb#BREADCRUMB_ENTRY",
					value1 = "Sites and Libraries");

				if (isSet(depotName)) {
					AssertClick(
						key_groupTab = "Asset Library",
						locator1 = "ItemSelector#NAVIGATION_GROUP_TAB",
						value1 = "Asset Library");

					LexiconCard.clickCard(card = ${depotName});
				}
				else {
					LexiconCard.clickCard(card = ${siteName});
				}

				if (isSet(folderName)) {
					LexiconCard.clickCard(card = ${folderName});
				}

				if (isSet(pendingEntry)) {
					AssertElementNotPresent(locator1 = "ItemSelector#SELECT_FILE_IMAGE_CARD");
				}
				else {
					Click(locator1 = "ItemSelector#SELECT_FILE_IMAGE_CARD");
				}
			}

			SelectFrameTop();
		}

		if (isSet(embedVideo)) {
			WaitForPageLoad();

			Click(locator1 = "CKEditor#TOOLBAR_VIDEO_BUTTON");

			if (${navTab} == "Documents and Media") {
				ItemSelector.addVideoFromDM(
					depotName = ${depotName},
					navTab = ${navTab},
					videoShortcutTitle = ${videoShortcutTitle});
			}
			else {
				ItemSelector.addVideoFromURL(
					navTab = ${navTab},
					videoSourceURL = ${embedVideo});
			}
		}

		if (isSet(viewableBy)) {
			Panel.expandPanel(panel = "Permissions");

			Select(
				locator1 = "Select#PERMISSIONS",
				value1 = ${viewableBy});
		}

		if (isSet(webContentId)) {
			Uncheck(locator1 = "WCEditWebContent#AUTOGENERATEID");

			Type(
				locator1 = "WCEditWebContent#WEB_CONTENT_ID",
				value1 = ${webContentId});
		}
	}

	@summary = "Default summary"
	macro addDraft(webContentTitle = null, webContentContent = null) {
		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		Button.clickSaveAsDraft();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro addDraftPGViaAP(webContentTitle = null, webContentContent = null) {
		AssetPublisherPortlet.addAsset(assetType = "Basic Web Content");

		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		WebContent.saveAsDraftViaAP();
	}

	@summary = "Default summary"
	macro addExistingRelatedAssetCP(scopeSite = null, webContentTitle = null, otherSite = null, assetTitle = null, siteName = null, assetType = null) {
		var key_webContentTitle = ${webContentTitle};

		RelatedAssets.selectAsset(
			assetTitle = ${assetTitle},
			assetType = ${assetType},
			otherSite = ${otherSite},
			scopeSite = ${scopeSite});

		SelectFrame(value1 = "relative=top");

		var key_assetTitle = ${assetTitle};

		AssertTextEquals.assertPartialText(
			locator1 = "AssetRelatedAssets#RELATED_ASSETS_TABLE_TYPE",
			value1 = ${assetType});

		AssertTextEquals.assertPartialText(
			locator1 = "AssetRelatedAssets#RELATED_ASSETS_TABLE_TITLE",
			value1 = ${assetTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "AssetRelatedAssets#RELATED_ASSETS_TABLE_SCOPE",
			value1 = ${siteName});

		AssertElementPresent(locator1 = "AssetRelatedAssets#RELATED_ASSETS_TABLE_REMOVE_LINK");

		PortletEntry.publish();
	}

	@summary = "Default summary"
	macro addExpirationDateCP(expirationDate = null) {
		Panel.expandPanel(panel = "Schedule");

		AssertChecked(
			locator1 = "Checkbox#NEVER_EXPIRE",
			value1 = "Never Expire");

		Uncheck(
			locator1 = "Checkbox#NEVER_EXPIRE",
			value1 = "Never Expire");

		Type.clickAtType(
			locator1 = "TextInput#EXPIRATION_DATE",
			value1 = ${expirationDate});
	}

	@summary = "Default summary"
	macro addFailWithoutRequiredCategoryAssetTypeCP(vocabularyName = null) {
		PortletEntry.inputTitle(title = "Web Content Title");

		CKEditor.addContentInWebContent(
			content = "Web Content Content",
			fieldLabel = "Content");

		Button.clickPublish();

		AssertElementPresent(locator1 = "Icon#ASTERISK");

		Alert.viewRequestFailedToComplete();

		Panel.expandPanel(panel = "Categorization");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_1",
			value1 = "Please select at least one category for ${vocabularyName}.");
	}

	@summary = "Default summary"
	macro addFeaturedImageFromComputer(uploadFileName = null) {
		Panel.expandPanel(panel = "Featured Image");

		Select(
			locator1 = "WCEditWebContent#SELECT_FEATURED_IMAGE_TYPE",
			value1 = "From Your Computer");

		SetElementAttribute.removeElementAttribute(
			attribute1 = "hidden",
			locator1 = "WCEditWebContent#SELECT_FEATURED_IMAGE_INPUT");

		UploadCommonFile(
			locator1 = "WCEditWebContent#SELECT_FEATURED_IMAGE_INPUT",
			value1 = ${uploadFileName});
	}

	@summary = "Default summary"
	macro addFeaturedImageFromDocumentsAndMedia(imageFileName = null, dmFolderName = null) {
		Panel.expandPanel(panel = "Featured Image");

		Select(
			locator1 = "WCEditWebContent#SELECT_FEATURED_IMAGE_TYPE",
			value1 = "From Documents and Media");

		if (IsTextEqual(locator1 = "WCEditWebContent#SELECT_FEATURED_IMAGE_INPUT", value1 = "")) {
			Click(
				key_title = "Select Image",
				locator1 = "Button#ANY_TITLE");
		}
		else {
			Click(
				key_title = "Change Image",
				locator1 = "Button#ANY_TITLE");
		}

		ItemSelector.selectDMImage(
			dmFolderName = ${dmFolderName},
			imageFileName = ${imageFileName});
	}

	@summary = "Default summary"
	macro addFeaturedImageFromURL(imageSourceURL = null) {
		Panel.expandPanel(panel = "Featured Image");

		Select(
			locator1 = "WCEditWebContent#SELECT_FEATURED_IMAGE_TYPE",
			value1 = "From URL");

		Type(
			locator1 = "WCEditWebContent#FEATURED_IMAGE_URL_INPUT",
			value1 = ${imageSourceURL});
	}

	@summary = "Default summary"
	macro addMultipleArticlesCP() {
		var articleCount = ${articleCount} + 1;
		var count = 1;

		while (${count} != ${articleCount}) {
			WebContent.addArticleCP(
				webContentContent = "WC Content ${count}",
				webContentTitle = "WC Title ${count}");

			var count = ${count} + 1;
		}
	}

	@summary = "Default summary"
	macro addNullCP(webContentContent = null) {
		AssertElementNotPresent(locator1 = "TextInput#REQUIRED_ALERT");

		if (isSet(webContentContent)) {
			CKEditor.addContentInWebContent(
				content = ${webContentContent},
				fieldLabel = "Content");
		}

		Button.clickPublish();

		AssertElementPresent(locator1 = "TextInput#REQUIRED_ALERT");

		AssertTextPresent(value1 = "Please enter a valid title for the default language: en-US");
	}

	@summary = "Default summary"
	macro addPGViaAP(webContentTitle = null, webContentContent = null) {
		AssetPublisherPortlet.addAsset(assetType = "Basic Web Content");

		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		PortletEntry.publish();

		WaitForPageLoad();

		var key_assetTitle = ${webContentTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${webContentTitle});

		if (isSet(viewAllContent)) {
			Click(
				locator1 = "AP#ASSET_ABSTRACT_TITLE",
				value1 = ${webContentTitle});
		}

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${webContentContent});
	}

	@summary = "Default summary"
	macro addPGViaAPWithoutAsserts(webContentTitle = null, webContentContent = null) {
		AssetPublisherPortlet.addAsset(assetType = "Basic Web Content");

		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		Button.clickPublish();
	}

	@summary = "Default summary"
	macro addPriority(priority = null) {
		Panel.expandPanel(panel = "Categorization");

		Type(
			locator1 = "WC#PRIORITY",
			value1 = ${priority});
	}

	@summary = "Default summary"
	macro addReviewDate(reviewDate = null, reviewTime = null) {
		Panel.expandPanel(panel = "Schedule");

		Uncheck(locator1 = "Checkbox#NEVER_REVIEW");

		Type.clickAtType(
			locator1 = "TextInput#REVIEW_DATE",
			value1 = ${reviewDate});

		if (isSet(reviewTime)) {
			Type.clickAtType(
				locator1 = "TextInput#REVIEW_DATE_TIME",
				value1 = ${reviewTime});
		}
	}

	@summary = "Default summary"
	macro addViaCKEditor(webContentTitle = null, webContentContent = null) {
		AssertVisible(locator1 = "WCEditWebContent#SIDEBAR");

		PortletEntry.inputTitle(title = ${webContentTitle});

		CKEditor.addContentInWebContent(
			content = ${webContentContent},
			fieldLabel = "Content");
	}

	@summary = "Default summary"
	macro addWithCategoryCP(userSegmentDetailTitle = null, webContentTitle = null, webContentContent = null, vocabularyName = null, categoryName = null) {
		for (var key_panel : list "Basic Information,Default Template,Display Page Template,Featured Image ") {
			if ((IsElementPresent(locator1 = "Panel#PANEL_EXPANDED")) && (IsVisible(locator1 = "Panel#PANEL_EXPANDED"))) {
				AssertClick(
					locator1 = "Panel#PANEL_EXPANDED",
					value1 = ${key_panel});
			}
		}

		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		WebContent.selectCategory(
			categoryNameList = ${categoryName},
			userSegmentDetailTitle = ${userSegmentDetailTitle},
			vocabularyName = ${vocabularyName});

		PortletEntry.publish();
	}

	@summary = "Default summary"
	macro addWithDocumentCP(dmDocumentTitle = null, webContentTitle = null, webContentContent = null, siteName = null) {
		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		ItemSelector.gotoItemSelectorViaCKEditor();

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		var key_imageFileName = ${dmDocumentTitle};
		var key_imageFileName = StringUtil.replace(${dmDocumentTitle}, " ", "+");

		if (isSet(siteName)) {
			AssertClick(
				key_breadcrumbName = "Sites and Libraries",
				locator1 = "Breadcrumb#BREADCRUMB_ENTRY",
				value1 = "Sites and Libraries");

			WaitForElementPresent(
				key_siteName = ${siteName},
				locator1 = "ItemSelector#SITE_SELECTOR");

			AssertClick(
				key_siteName = ${siteName},
				locator1 = "ItemSelector#SITE_SELECTOR",
				value1 = ${siteName});
		}

		LexiconCard.clickCard(card = ${dmDocumentTitle});

		SelectFrameTop();

		PortletEntry.publish();
	}

	@summary = "Default summary"
	macro addWithFriendlyURL(webContentTitle = null, webContentContent = null, friendlyURL = null) {
		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		Type(
			inputFieldId = "friendlyURL",
			locator1 = "TextInput#INPUT_ID",
			value1 = ${friendlyURL});

		PortletEntry.publish();
	}

	@summary = "Default summary"
	macro addWithMultipleCategories(allowMultipleCategories = null, webContentTitle = null, webContentContent = null, vocabularyName = null, categoryNameList = null) {
		for (var key_panel : list "Basic Information,Default Template,Display Page Template,Featured Image ") {
			if ((IsElementPresent(locator1 = "Panel#PANEL_EXPANDED")) && (IsVisible(locator1 = "Panel#PANEL_EXPANDED"))) {
				AssertClick(
					locator1 = "Panel#PANEL_EXPANDED",
					value1 = ${key_panel});
			}
		}

		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.addMultipleCategories(
			categoryNameList = ${categoryNameList},
			vocabularyName = ${vocabularyName});

		if (${allowMultipleCategories} == "false") {
			Button.clickPublish();

			Alert.viewErrorMessage(errorMessage = "You cannot select more than one category for Vocabulary Name.");
		}
		else {
			PortletEntry.publish();
		}
	}

	@summary = "Default summary"
	macro addWithPriorityCP(webContentTitle = null, webContentContent = null, assetPriority = null) {
		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		Panel.expandPanel(panel = "Categorization");

		Type.typeNotVisibleNoMouseOverNoError(
			locator1 = "TextInput#ASSET_PRIORITY",
			value1 = ${assetPriority});

		PortletEntry.publish();
	}

	@summary = "Default summary"
	macro addWithStructureAndWorkflowCP(webContentText = null, webContentTitle = null) {
		WebContent.addCP(webContentTitle = ${webContentTitle});

		if (isSet(webContentText)) {
			Type(
				key_fieldName = "Text",
				locator1 = "FormViewBuilder#TEXT_FIELD",
				value1 = ${webContentText});
		}

		AssertClick(
			locator1 = "Button#SUBMIT_FOR_WORKFLOW",
			value1 = "Submit for Workflow");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro addWithStructureCP(saveAsDraft = null, webContentUpload = null, available = null, description = null, webContentGeolocation = null, webContentImageDescription = null, webContentLinkToPage = null, webContentText = null, dmDocumentTitle = null, webContentImage = null, row = null, webContentSelectFromList = null, webContentSingleSelection = null, depotName = null, otherSiteName = null, webContentColor = null, structureName = null, webContentDate = null, webContentWebContent = null, navTab = null, webContentNumeric = null, webContentTitle = null, templateName = null, webContentRichText = null, dmFolderName = null, folderName = null, webContentMultipleSelection = null, fieldType = null, invalidFileValidation = null, dmNavTab = null) {
		AssertVisible(locator1 = "WCEditWebContent#SIDEBAR");

		AssertVisible(locator1 = "Sidebar#FORM_BUILDER");

		if (isSet(webContentTitle)) {
			PortletEntry.inputTitle(title = ${webContentTitle});
		}

		if (isSet(webContentColor)) {
			if (!(isSet(webContentColorFieldLabel))) {
				var webContentColorFieldLabel = "Color";
			}

			Click(
				key_fieldFieldLabel = ${webContentColorFieldLabel},
				locator1 = "WCEditWebContent#COLOR_PICKER");

			Click(
				key_colorSwatchItem = "#${webContentColor}",
				locator1 = "Button#COLOR_SWATCH_ITEM");
		}

		if (isSet(webContentDate)) {
			if (!(isSet(webContentDateFieldLabel))) {
				var webContentDateFieldLabel = "Date";
			}

			Type(
				key_fieldFieldLabel = ${webContentDateFieldLabel},
				locator1 = "WCEditWebContent#DATE_INPUT",
				value1 = ${webContentDate});
		}

		if (isSet(webContentGeolocation)) {
			var lat = StringUtil.extractFirst(${webContentGeolocation}, ",");
			var lng = StringUtil.extractLast(${webContentGeolocation}, ",");

			Geolocation.setMarkerPosition(
				lat = ${lat},
				lng = ${lng});
		}

		if (isSet(webContentGrid)) {
			if (!(isSet(webContentGridFieldLabel))) {
				var webContentGridFieldLabel = "Grid";
			}

			var column = ${column} + 1;

			Check.checkNotVisible(
				key_column = ${column},
				key_fieldFieldLabel = ${webContentGridFieldLabel},
				key_row = ${row},
				locator1 = "WCEditWebContent#GRID_OPTION");
		}

		if (isSet(webContentImage)) {
			if (!(isSet(webContentImageFieldLabel))) {
				var webContentImageFieldLabel = "Image";
			}

			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				fieldLabel = ${webContentImageFieldLabel},
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			if (${navTab} == "Documents and Media") {
				if (isSet(depotName)) {
					ItemSelector.selectRepositoryImage(
						depotName = ${depotName},
						folderName = ${folderName},
						imageFileName = ${webContentImage},
						navTab = ${navTab});
				}
				else if (isSet(imageFileName)) {
					if (isSet(otherSiteName)) {
						SelectFrame(locator1 = "IFrame#MODAL_BODY");

						AssertClick(
							key_breadcrumbName = "Sites and Libraries",
							locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK",
							value1 = "Sites and Libraries");

						AssertClick(
							key_siteName = ${otherSiteName},
							locator1 = "ItemSelector#SITE_SELECTOR",
							value1 = ${otherSiteName});

						SelectFrame(value1 = "relative=top");

						ItemSelector.selectDMImage(
							dmFolderName = ${dmFolderName},
							imageFileName = ${webContentImage},
							navTab = ${navTab});

						SelectFrame(value1 = "relative=top");
					}
					else {
						ItemSelector.selectDMImage(
							dmFolderName = ${dmFolderName},
							imageFileName = ${webContentImage},
							navTab = ${navTab});
					}
				}
			}
			else if (${navTab} == "Web Content Images") {
				ItemSelector.uploadFile(
					navTab = ${navTab},
					uploadFileName = ${webContentImage});
			}

			if (isSet(webContentImageDescription)) {
				Type(
					key_fieldFieldLabel = ${webContentImageFieldLabel},
					locator1 = "WCEditWebContent#IMAGE_DESCRIPTION",
					value1 = ${webContentImageDescription});
			}
		}

		if (isSet(webContentLinkToPage)) {
			if (!(isSet(webContentLinkToPageFieldLabel))) {
				var webContentLinkToPageFieldLabel = "Link to Page";
			}

			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				fieldLabel = ${webContentLinkToPageFieldLabel},
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Portlet.expandTree();

			Click(
				key_nodeName = ${webContentLinkToPage},
				locator1 = "Treeview#NODE_UNSELECTED");

			SelectFrameTop();
		}

		if (isSet(webContentMultipleSelection)) {
			if (!(isSet(webContentMultipleSelectionFieldLabel))) {
				var webContentMultipleSelectionFieldLabel = "Multiple Selection";
			}

			if (IsNotChecked(key_fieldFieldLabel = ${webContentMultipleSelectionFieldLabel}, key_optionValue = ${webContentMultipleSelection}, locator1 = "WCEditWebContent#SELECTION_OPTION")) {
				Click.javaScriptClick(
					key_fieldFieldLabel = ${webContentMultipleSelectionFieldLabel},
					key_optionValue = ${webContentMultipleSelection},
					locator1 = "WCEditWebContent#SELECTION_OPTION");
			}
		}

		if (isSet(webContentNumeric)) {
			if (!(isSet(webContentNumericFieldLabel))) {
				var webContentNumericFieldLabel = "Numeric";
			}

			TripleClick(
				key_fieldFieldLabel = ${webContentNumericFieldLabel},
				locator1 = "WCEditWebContent#TEXT_INPUT");

			Type.sendKeys(
				key_fieldFieldLabel = ${webContentNumericFieldLabel},
				locator1 = "WCEditWebContent#TEXT_INPUT",
				value1 = ${webContentNumeric});
		}

		if (isSet(webContentRichText)) {
			if (!(isSet(webContentRichTextFieldLabel))) {
				var webContentRichTextFieldLabel = "Rich Text";
			}

			if (isSet(source)) {
				Click(
					key_fieldFieldLabel = ${webContentRichTextFieldLabel},
					locator1 = "WCEditWebContent#SOURCE_BUTTON");

				Type.typeCodeMirrorEditorNoError(
					locator1 = "CKEditor#BODY_FIELD_SOURCE_ON",
					value1 = ${webContentRichText});

				Click(locator1 = "CKEditor#TOOLBAR_SOURCE_BUTTON");
			}
			else {
				CKEditor.addContentInWebContent(
					content = ${webContentRichText},
					fieldLabel = ${webContentRichTextFieldLabel});
			}
		}

		if (isSet(webContentSelectFromList)) {
			if (!(isSet(webContentSelectFromListFieldLabel))) {
				var webContentSelectFromListFieldLabel = "Select from List";
			}

			Click(
				key_fieldFieldLabel = ${webContentSelectFromListFieldLabel},
				locator1 = "WCEditWebContent#SELECT_FIELD_TRIGGER");

			DropdownMenuItem.click(menuItem = ${webContentSelectFromList});
		}

		if (isSet(webContentSingleSelection)) {
			if (!(isSet(webContentSingleSelectionFieldLabel))) {
				var webContentSingleSelectionFieldLabel = "Single Selection";
			}

			Check.checkNotVisible(
				key_fieldFieldLabel = ${webContentSingleSelectionFieldLabel},
				key_optionValue = ${webContentSingleSelection},
				locator1 = "WCEditWebContent#SELECTION_OPTION");
		}

		if (isSet(webContentText)) {
			if (!(isSet(webContentTextFieldLabel))) {
				var webContentTextFieldLabel = "Text";
			}

			if (${fieldType} == "Multiple Lines") {
				Type(
					key_fieldFieldLabel = ${webContentTextFieldLabel},
					locator1 = "DDMField#MULTIPLE_LINES",
					value1 = ${webContentText});
			}
			else {
				Type(
					key_fieldFieldLabel = ${webContentTextFieldLabel},
					locator1 = "WCEditWebContent#TEXT_INPUT",
					value1 = ${webContentText});
			}

			if (isSet(duplicateField)) {
				Click(locator1 = "FormFields#FIELD_ADD_DUPLICATE");

				Type(
					key_fieldFieldLabel = ${webContentTextFieldLabel},
					locator1 = "WCEditWebContent#TEXT_INPUT_2",
					value1 = "${webContentText} Duplicate Field");
			}
		}

		if (isSet(webContentUpload)) {
			if (!(isSet(webContentUploadFieldLabel))) {
				var webContentUploadFieldLabel = "Upload";
			}

			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				fieldLabel = ${webContentUploadFieldLabel},
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			if (${dmNavTab} == "Documents and Media") {
				if (isSet(depotName)) {
					ItemSelector.selectRepositoryImage(
						depotName = ${depotName},
						folderName = ${folderName},
						imageFileName = ${webContentUpload},
						navTab = ${dmNavTab});
				}
				else if (isSet(dmDocumentTitle)) {
					ItemSelector.selectDMImage(
						imageFileName = ${dmDocumentTitle},
						navTab = ${dmNavTab});
				}
				else {
					ItemSelector.uploadFile(
						invalidFileValidation = ${invalidFileValidation},
						navTab = ${dmNavTab},
						uploadFileName = ${webContentUpload});
				}
			}
			else if (${dmNavTab} == "User Personal Folder") {
				ItemSelector.uploadFile(
					invalidFileValidation = ${invalidFileValidation},
					navTab = ${dmNavTab},
					uploadFileName = ${webContentUpload});
			}
		}

		if (isSet(webContentWebContent)) {
			if (!(isSet(webContentWebContentFieldLabel))) {
				var webContentWebContentFieldLabel = "Web Content";
			}

			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				fieldLabel = ${webContentWebContentFieldLabel},
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			if (isSet(depotName)) {
				WebContent.selectRepositoryWC(
					available = ${available},
					contentName = ${webContentWebContent},
					depotName = ${depotName},
					folderName = ${folderName});
			}
			else if (isSet(otherSiteName)) {
				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				AssertClick(
					key_breadcrumbName = "Sites and Libraries",
					locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK",
					value1 = "Sites and Libraries");

				AssertClick(
					key_siteName = ${otherSiteName},
					locator1 = "ItemSelector#SITE_SELECTOR",
					value1 = ${otherSiteName});

				AssertClick.assertPartialTextClickAt(
					key_listEntry = ${webContentWebContent},
					locator1 = "LexiconList#LIST_ENTRY",
					value1 = ${webContentWebContent});

				SelectFrame(value1 = "relative=top");
			}
			else {
				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				AssertClick.assertPartialTextClickAt(
					key_listEntry = ${webContentWebContent},
					locator1 = "LexiconList#LIST_ENTRY",
					value1 = ${webContentWebContent});

				SelectFrame(value1 = "relative=top");
			}
		}

		if (isSet(description)) {
			CKEditor.addContentInWebContent(
				content = ${description},
				fieldLabel = "Description");
		}

		if (isSet(templateName)) {
			SelectFrameTop();

			Panel.expandPanel(panel = "Default Template");

			if (IsTextNotEqual(inputFieldId = "ddmTemplateName", locator1 = "TextInput#INPUT_ID", value1 = ${templateName})) {
				WebContent.selectTemplateCP(
					structureName = ${structureName},
					templateName = ${templateName});
			}
		}

		if (${saveAsDraft} == "true") {
			PortletEntry.saveAsDraft();

			AssertTextEquals(
				key_status = "Draft",
				locator1 = "WCEditWebContent#WORKFLOW_STATUS",
				value1 = "Draft");
		}
	}

	@summary = "Default summary"
	macro addWithTagCP(webContentTitle = null, webContentContent = null, tagNameList = null) {
		for (var key_panel : list "Basic Information,Default Template,Display Page Template,Featured Image ") {
			if ((IsElementPresent(locator1 = "Panel#PANEL_EXPANDED")) && (IsVisible(locator1 = "Panel#PANEL_EXPANDED"))) {
				AssertClick(
					locator1 = "Panel#PANEL_EXPANDED",
					value1 = ${key_panel});
			}
		}

		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		Panel.expandPanel(panel = "Categorization");

		for (var tagName : list ${tagNameList}) {
			AssetCategorization.addTag(tagName = ${tagName});
		}

		PortletEntry.publish();
	}

	@summary = "Default summary"
	macro addWithWorkflowCP(webContentTitle = null, webContentContent = null) {
		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		Button.clickSubmitForWorkflow();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro addWithWorkflowPGViaAP(webContentTitle = null, webContentContent = null) {
		AssetPublisherPortlet.addAsset(assetType = "Basic Web Content");

		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		AssertClick(
			locator1 = "Button#SUBMIT_FOR_WORKFLOW",
			value1 = "Submit for Workflow");

		SelectFrame();

		if (IsElementPresent(locator1 = "Message#INFO")) {
			AssertTextEquals(
				locator1 = "Message#INFO",
				value1 = "There are no results.");
		}
		else {
			AssertTextNotPresent(value1 = ${webContentTitle});
		}
	}

	@summary = "Default summary"
	macro assertFieldOnWebContent(fieldHelpText = null, fieldName = null, fieldFieldLabel = null) {
		var key_fieldFieldLabel = ${fieldFieldLabel};
		var key_fieldName = ${fieldName};

		AssertVisible(locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER");

		AssertTextEquals(
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL",
			value1 = ${fieldFieldLabel});

		if (isSet(fieldHelpText)) {
			AssertTextEquals(
				locator1 = "WCEditWebContent#HELP_TEXT",
				value1 = ${fieldHelpText});
		}
	}

	@summary = "Default summary"
	macro changeDefaultLanguage(defaultLanguage = null) {
		Click(locator1 = "Button#CHANGE");

		MenuItem.click(menuItem = ${defaultLanguage});
	}

	@summary = "Default summary"
	macro clickMarginOfContentContainer() {
		var elementHeight = selenium.getElementHeight("WCEditWebContent#CONTENT_CONTAINER");

		var offSetY = 50 * ${elementHeight};

		var offSetY = ${offSetY} / 100;
		var elementWidth = selenium.getElementWidth("WCEditWebContent#CONTENT_CONTAINER");

		var offSetX = 2 * ${elementWidth};

		var offSetX = ${offSetX} / 100;

		Click.clickAt(
			locator1 = "WCEditWebContent#CONTENT_CONTAINER",
			value1 = "${offSetX},${offSetY}");
	}

	@summary = "Default summary"
	macro copyCP(webContentTitle = null) {
		WebContentNavigator.gotoEntryMenuItem(
			entry = ${webContentTitle},
			menuItem = "Make a Copy");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro deleteCP(depotName = null, webContentTitle = null, webContentTitleEscapeCharacter = null, siteURLKey = null) {
		WebContent.moveToRecycleBinCP(
			assetType = "Web Content Article",
			webContentTitle = ${webContentTitle},
			webContentTitleEscapeCharacter = ${webContentTitleEscapeCharacter});

		if (isSet(depotName)) {
			DepotNavigator.openDepotRecycleBinAdmin(depotName = ${depotName});

			RecycleBin.emptyCP();

			DepotNavigator.openDepotWebContentAdmin(depotName = ${depotName});
		}
		else {
			RecycleBin.openRecycleBinAdmin(siteURLKey = ${siteURLKey});

			RecycleBin.emptyCP();

			WebContentNavigator.openWebContentAdmin(siteURLKey = ${siteURLKey});
		}

		AssertTextNotPresent(value1 = ${webContentTitle});
	}

	@summary = "Default summary"
	macro deleteStagedCP(depotName = null, webContentTitle = null, webContentTitleEscapeCharacter = null, siteName = null, pageName = null) {
		WebContent.moveToRecycleBinCP(
			assetType = "Web Content Article",
			webContentTitle = ${webContentTitle},
			webContentTitleEscapeCharacter = ${webContentTitleEscapeCharacter});

		if (isSet(depotName)) {
			DepotNavigator.openDepotRecycleBinAdminStaging(depotName = ${depotName});
		}
		else {
			Navigator.gotoStagedSitePage(
				pageName = ${pageName},
				siteName = ${siteName});

			ProductMenu.gotoPortlet(
				category = "Recycle Bin",
				portlet = "Recycle Bin");
		}

		RecycleBin.emptyCP();

		if (isSet(depotName)) {
			DepotNavigator.openDepotWebContentAdminStaging(depotName = ${depotName});
		}
		else {
			Navigator.gotoStagedSitePage(
				pageName = ${pageName},
				siteName = ${siteName});

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Web Content");
		}

		AssertTextNotPresent(value1 = ${webContentTitle});
	}

	@summary = "Default summary"
	macro deleteWithDisabledRB(entryTitle = null) {
		WebContentNavigator.gotoEntryMenuItem(
			entry = ${entryTitle},
			menuItem = "Delete");

		AssertTextEquals(
			locator1 = "Modal#BODY",
			value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro editCP(videoShortcutTitle = null, depotName = null, saveAsDraft = null, webContentContentEdit = null, available = null, webContentImageDescription = null, webContentWebContent = null, navTab = null, embedVideo = null, webContentImage = null, webContentTitleEdit = null, folderName = null) {
		WebContent.addCP(webContentTitle = ${webContentTitleEdit});

		if (isSet(webContentContentEdit)) {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME_2");

			Type(
				key_fieldLabel = "Content",
				locator1 = "CKEditor#BODY",
				value1 = ${webContentContentEdit});

			SelectFrame(value1 = "relative=top");
		}

		if (isSet(webContentWebContent)) {
			if (!(isSet(webContentWebContentFieldLabel))) {
				var webContentWebContentFieldLabel = "Web Content";
			}

			Click(
				fieldLabel = ${webContentWebContentFieldLabel},
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			if (isSet(depotName)) {
				WebContent.selectRepositoryWC(
					available = ${available},
					contentName = ${webContentWebContent},
					depotName = ${depotName},
					folderName = ${folderName});
			}
			else {
				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				AssertClick.assertPartialTextClickAt(
					key_listEntry = ${webContentWebContent},
					locator1 = "LexiconList#LIST_ENTRY",
					value1 = ${webContentWebContent});

				SelectFrame(value1 = "relative=top");
			}
		}

		if (isSet(webContentImage)) {
			if (isSet(selectViaCKEditor)) {
				ItemSelector.gotoItemSelectorViaCKEditor();
			}
			else {
				if (!(isSet(webContentImageFieldLabel))) {
					var webContentImageFieldLabel = "Image";
				}

				Click(
					fieldLabel = ${webContentImageFieldLabel},
					locator1 = "Button#BUTTON_LABEL",
					text = "Select");
			}

			if (${navTab} == "Documents and Media") {
				if (isSet(depotName)) {
					ItemSelector.selectRepositoryImage(
						depotName = ${depotName},
						folderName = ${folderName},
						imageFileName = ${webContentImage},
						navTab = ${navTab});
				}
				else if (isSet(imageFileName)) {
					ItemSelector.selectDMImage(
						imageFileName = ${webContentImage},
						navTab = ${navTab});
				}
				else {
					ItemSelector.uploadFile(
						navTab = ${navTab},
						uploadFileName = ${webContentImage});
				}
			}
			else if (${navTab} == "Web Content Images") {
				ItemSelector.uploadFile(
					navTab = ${navTab},
					uploadFileName = ${webContentImage});
			}

			if (isSet(webContentImageDescription)) {
				Type(
					key_fieldFieldLabel = ${webContentImageFieldLabel},
					locator1 = "WCEditWebContent#IMAGE_DESCRIPTION",
					value1 = ${webContentImageDescription});
			}
		}

		if (isSet(embedVideo)) {
			WaitForPageLoad();

			Click(locator1 = "CKEditor#TOOLBAR_VIDEO_BUTTON");

			if (${navTab} == "Documents and Media") {
				ItemSelector.addVideoFromDM(
					depotName = ${depotName},
					navTab = ${navTab},
					videoShortcutTitle = ${videoShortcutTitle});
			}
			else {
				ItemSelector.addVideoFromURL(
					navTab = ${navTab},
					videoSourceURL = ${embedVideo});
			}
		}

		if (${saveAsDraft} == "true") {
			PortletEntry.saveAsDraft();

			AssertTextEquals.assertPartialText(
				key_status = "Draft",
				locator1 = "WCEditWebContent#WORKFLOW_STATUS",
				value1 = "Draft");
		}
		else {
			PortletEntry.publish();

			LexiconEntry.changeDisplayStyle(displayStyle = "list");

			LexiconEntry.viewActiveDisplayStyle(displayStyle = "list");

			var key_webContentTitle = ${webContentTitleEdit};

			AssertElementPresent(locator1 = "WC#ENTRY_LIST_THUMBNAIL");

			AssertTextEquals.assertPartialText(
				locator1 = "WC#ENTRY_LIST_TITLE",
				value1 = ${webContentTitleEdit});
		}
	}

	@summary = "Default summary"
	macro editDisplayDate(displayDate = null) {
		Panel.expandPanel(panel = "Schedule");

		DoubleClick(locator1 = "TextInput#DISPLAY_DATE");

		Type.sendKeys(
			locator1 = "TextInput#DISPLAY_DATE",
			value1 = "keys=CONTROL,a");

		KeyPress(
			locator1 = "TextInput#DISPLAY_DATE",
			value1 = "\BACK_SPACE");

		Type.clickAtType(
			locator1 = "TextInput#DISPLAY_DATE",
			value1 = ${displayDate});

		if (isSet(displayTime)) {
			var displayTime = StringUtil.removeSpaces(${displayTime});

			Type.sendKeys(
				locator1 = "TextInput#DISPLAY_DATE_TIME",
				value1 = ${displayTime});
		}
	}

	@summary = "Default summary"
	macro editDisplayPage(pageType = null, pageName = null) {
		Panel.expandPanel(panel = "Display Page");

		if (!(isSet(displayPageTemplateType))) {
			var displayPageTemplateType = "Specific";
		}

		if (IsElementPresent(locator1 = "Select#SELECT_ID", selectFieldId = "displayPageType")) {
			Select(
				locator1 = "Select#SELECT_ID",
				selectFieldId = "displayPageType",
				value1 = ${displayPageTemplateType});
		}
		else {
			Select(
				ariaLabel = "Select Display Page Type",
				locator1 = "Select#ANY_ARIA_LABEL",
				value1 = ${displayPageTemplateType});
		}

		if (${displayPageTemplateType} == "Specific") {
			if (IsElementPresent(buttonId = "chooseSpecificDisplayPage", locator1 = "Button#BUTTON_ID")) {
				Click(
					buttonId = "chooseSpecificDisplayPage",
					locator1 = "Button#BUTTON_ID");
			}
			else {
				Click(
					ariaLabel = "Select Display Page",
					locator1 = "Button#ANY_WITH_ARIA_LABEL");
			}

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			if (${pageType} == "Public Pages") {
				Navigator.gotoNavItem(navItem = "Public Pages");

				Portlet.expandTree();

				Click(
					key_nodeName = ${pageName},
					locator1 = "Treeview#NODE_UNSELECTED");
			}
			else if (${pageType} == "Pages") {
				Navigator.gotoNavItem(navItem = "Pages");

				Portlet.expandTree();

				Click(
					key_nodeName = ${pageName},
					locator1 = "Treeview#NODE_UNSELECTED");
			}
			else {
				if (IsElementNotPresent(key_navItem = ${pageType}, locator1 = "NavBar#NAV_ITEM_LINK")) {
					LexiconCard.clickCard(card = ${pageName});
				}
				else {
					Navigator.gotoNavItem(navItem = ${pageType});

					LexiconCard.clickCard(card = ${pageName});
				}
			}

			SelectFrameTop();

			if (IsElementPresent(inputFieldId = "specificDisplayPageNameInput", locator1 = "TextInput#INPUT_ID")) {
				if (${pageType} == "Public Pages") {
					AssertTextEquals(
						inputFieldId = "specificDisplayPageNameInput",
						locator1 = "TextInput#INPUT_ID",
						value1 = "Public Pages > ${pageName}");
				}
				else if (${pageType} == "Pages") {
					AssertTextEquals(
						inputFieldId = "specificDisplayPageNameInput",
						locator1 = "TextInput#INPUT_ID",
						value1 = "Pages > ${pageName}");
				}
				else {
					AssertTextEquals(
						inputFieldId = "specificDisplayPageNameInput",
						locator1 = "TextInput#INPUT_ID",
						value1 = ${pageName});
				}
			}
			else {
				if (${pageType} == "Public Pages") {
					AssertTextEquals(
						key_placeHolder = "No Display Page Selected",
						locator1 = "TextInput#ANY_PLACEHOLDER",
						value1 = "Public Pages > ${pageName}");
				}
				else if (${pageType} == "Pages") {
					AssertTextEquals(
						key_placeHolder = "No Display Page Selected",
						locator1 = "TextInput#ANY_PLACEHOLDER",
						value1 = "Pages > ${pageName}");
				}
				else {
					AssertTextEquals(
						key_placeHolder = "No Display Page Selected",
						locator1 = "TextInput#ANY_PLACEHOLDER",
						value1 = ${pageName});
				}
			}
		}

		if (${displayPageTemplateType} == "Default") {
			if (IsElementPresent(inputFieldId = "defaultDisplayPageNameInput", locator1 = "TextInput#INPUT_ID")) {
				AssertTextEquals(
					inputFieldId = "defaultDisplayPageNameInput",
					locator1 = "TextInput#INPUT_ID",
					value1 = ${pageName});
			}
			else {
				AssertTextEquals(
					ariaLabel = "Display Page Name",
					locator1 = "TextInput#ANY_WITH_ARIA_LABEL",
					value1 = ${pageName});
			}
		}
	}

	@summary = "Default summary"
	macro editDisplayPagePGViaAP(pageType = null, displayPageName = null, assetTitle = null) {
		AssetPublisherPortlet.gotoEditAssetPG(assetTitle = ${assetTitle});

		WebContent.editDisplayPage(
			pageName = ${displayPageName},
			pageType = ${pageType});

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro editFieldValue(fieldFieldLabel = null, index = null, value = null) {
		Type(
			index = ${index},
			key_fieldFieldLabel = ${fieldFieldLabel},
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = ${value});
	}

	@summary = "Default summary"
	macro editFriendlyURL(webContentFriendlyURL = null) {
		Type(
			inputFieldId = "friendlyURL",
			locator1 = "TextInput#INPUT_ID",
			value1 = ${webContentFriendlyURL});
	}

	@summary = "Default summary"
	macro editInReview(webContentImage = null, webContentTitleEdit = null) {
		WebContent.addCP(webContentTitle = ${webContentTitleEdit});

		if (isSet(webContentImage)) {
			Click(
				fieldLabel = "Image",
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			SelectFrameTop(value1 = "relative=top");

			ItemSelector.uploadFile(
				navTab = "Web Content Images",
				uploadFileName = ${webContentImage});
		}

		var iFrameDialog = "IFrame#MODAL_BODY";

		if (IsElementPresent(locator1 = ${iFrameDialog})) {
			SelectFrame(locator1 = ${iFrameDialog});
		}

		PortletEntry.save();

		if (IsElementPresent(locator1 = ${iFrameDialog})) {
			IFrame.closeFrame();
		}
	}

	@summary = "Default summary"
	macro editNullCP(webContentContent = null) {
		AssertElementNotPresent(locator1 = "TextInput#REQUIRED_ALERT");

		WebContent.addCP(webContentTitle = "");

		if (isSet(webContentContent)) {
			CKEditor.addContentInWebContent(
				content = ${webContentContent},
				fieldLabel = "Content");
		}

		Button.clickPublish();

		AssertElementPresent(locator1 = "TextInput#REQUIRED_ALERT");
	}

	@summary = "Default summary"
	macro editViaContentPanel(fieldName = null, webContentTitle = null, saveAsDraft = null, webContentContentEdit = null, webContentSelectWcFile = null, webContentTitleEdit = null) {
		PageEditor.gotoEllipsisMenuItemInPageContentPanel(
			itemName = ${webContentTitle},
			menuItem = "Edit");

		WebContent.addCP(webContentTitle = ${webContentTitleEdit});

		if (isSet(webContentContentEdit)) {
			CKEditor.addContentInWebContent(
				content = ${webContentContentEdit},
				fieldLabel = "Content");
		}

		if (isSet(webContentSelectWcFile)) {
			AssertClick(
				key_fieldName = ${fieldName},
				locator1 = "Button#SELECT_CONTENT",
				value1 = "Select");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			AssertClick.assertPartialTextClickAt(
				key_listEntry = ${webContentSelectWcFile},
				locator1 = "LexiconList#LIST_ENTRY",
				value1 = ${webContentSelectWcFile});

			SelectFrame(value1 = "relative=top");
		}

		if (${saveAsDraft} == "true") {
			PortletEntry.saveAsDraft();

			AssertTextEquals.assertPartialText(
				key_status = "Draft",
				locator1 = "WCEditWebContent#WORKFLOW_STATUS",
				value1 = "Draft");
		}
		else {
			Button.clickPublish();
		}
	}

	@summary = "Default summary"
	macro editWebContentContent(saveAsDraft = null, webContentContentEdit = null, webContentTitleEdit = null) {
		WebContent.addCP(webContentTitle = ${webContentTitleEdit});

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME_2");

		Type(
			key_fieldLabel = "Content",
			locator1 = "CKEditor#BODY",
			value1 = ${webContentContentEdit});

		SelectFrame(value1 = "relative=top");

		if (${saveAsDraft} == "true") {
			PortletEntry.saveAsDraft();

			AssertTextEquals.assertPartialText(
				key_status = "Draft",
				locator1 = "WCEditWebContent#WORKFLOW_STATUS",
				value1 = "Draft");
		}
		else {
			PortletEntry.publish();
		}
	}

	@summary = "Default summary"
	macro editWithStructureCP(webContentColor = null, saveAsDraft = null, structureName = null, webContentUpload = null, column = null, webContentDate = null, webContentLinkToPage = null, locale = null, webContentWebContent = null, navTab = null, webContentNumeric = null, webContentText = null, webContentTitle = null, templateName = null, webContentGrid = null, webContentRichText = null, webContentImage = null, webContentTitleEdit = null, row = null, webContentMultipleSelection = null, webContentSelectFromList = null, webContentSingleSelection = null, dmNavTab = null) {
		WebContentNavigator.gotoEditCP(webContentTitle = ${webContentTitle});

		if (isSet(locale)) {
			PortletEntry.changeLocale(
				locale = ${locale},
				translated = "true");
		}

		WebContent.addWithStructureCP(
			column = ${column},
			dmNavTab = ${dmNavTab},
			navTab = ${navTab},
			row = ${row},
			structureName = ${structureName},
			templateName = ${templateName},
			webContentColor = ${webContentColor},
			webContentDate = ${webContentDate},
			webContentGrid = ${webContentGrid},
			webContentImage = ${webContentImage},
			webContentLinkToPage = ${webContentLinkToPage},
			webContentMultipleSelection = ${webContentMultipleSelection},
			webContentNumeric = ${webContentNumeric},
			webContentRichText = ${webContentRichText},
			webContentSelectFromList = ${webContentSelectFromList},
			webContentSingleSelection = ${webContentSingleSelection},
			webContentText = ${webContentText},
			webContentTitle = ${webContentTitleEdit},
			webContentUpload = ${webContentUpload},
			webContentWebContent = ${webContentWebContent});

		if (${saveAsDraft} == "true") {
			PortletEntry.saveAsDraft();

			AssertTextEquals.assertPartialText(
				key_status = "Draft",
				locator1 = "WCEditWebContent#WORKFLOW_STATUS",
				value1 = "Draft");
		}
		else {
			PortletEntry.publish();
		}
	}

	@summary = "Default summary"
	macro expireCP(webContentTitleList = null) {
		for (var webContentTitle : list ${webContentTitleList}) {
			Check(
				key_webContentTitle = ${webContentTitle},
				locator1 = "WC#ENTRY_LIST_CHECKBOX");
		}

		Click(
			key_text = "time",
			locator1 = "ManagementBar#ANY_ICON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro expireSpecificVersionCP(webContentList = null) {
		WebContentNavigator.gotoEntryMenuItem(
			entry = ${webContentTitle},
			menuItem = "View History");

		if (isSet(webContentList)) {
			for (var webContentTitle : list ${webContentList}) {
				Check(
					key_webContentTitle = ${webContentTitle},
					locator1 = "WCEditWebContent#VIEW_HISTORY_VERSION_CHECKBOX");
			}
		}
		else {
			Check(
				key_webContentTitle = ${webContentTitle},
				locator1 = "WCEditWebContent#VIEW_HISTORY_VERSION_CHECKBOX");
		}

		ClickNoError(
			key_text = "time",
			locator1 = "ManagementBar#ANY_ICON");

		AssertConfirm(value1 = "Are you sure you want to expire the selected version?");
	}

	@summary = "Default summary"
	macro getAssetId(folderAsset = null, webContentAsset = null) {
		if (isSet(webContentAsset)) {
			var webContentId = selenium.getAttribute("//*[contains(@data-title,'${webContentAsset}')]//input@value");

			return ${webContentId};
		}

		if (isSet(folderAsset)) {
			var folderId = selenium.getAttribute("//*[contains(@data-title,'${folderAsset}')]@data-folder-id");

			return ${folderId};
		}
	}

	@summary = "Default summary"
	macro increaseDisplayDate(minuteIncrease = null) {
		var displayDate = DateTimeSchedule.getCurrentDisplayDate(field = "display");
		var currentTime = DateTimeSchedule.getCurrentDisplayTime(field = "display");
		var displayTime = DateTimeSchedule.increaseDisplayTime(
			field = "display",
			minuteIncreaseValue = ${minuteIncrease});

		WebContent.editDisplayDate(
			displayDate = ${displayDate},
			displayTime = ${displayTime});

		echo("Web Content display time increased ${minuteIncrease} minutes, changed from ${currentTime} to ${displayTime}");
	}

	@summary = "Default summary"
	macro moveArticlesToFolderCP(webContentArticlesList = null, folderName = null) {
		for (var webContentTitle : list ${webContentArticlesList}) {
			Check(
				key_webContentTitle = ${webContentTitle},
				locator1 = "WC#ENTRY_LIST_CHECKBOX");
		}

		Click(
			key_text = "move",
			locator1 = "ManagementBar#ANY_ICON");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Move Web Content");

		Click(locator1 = "Button#SELECT");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		WebContentFolder.selectFolderTreeNode(nodeName = ${folderName});

		SelectFrameTop();

		AssertClick(
			locator1 = "Button#MOVE",
			value1 = "Move");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro moveMultipleToFolderCP(folderName = null, rowEntryCheckList = null) {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		for (var rowEntry : list ${rowEntryCheckList}) {
			Check(
				key_rowEntry = ${rowEntry},
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
		}

		Click(
			key_text = "move",
			locator1 = "ManagementBar#ANY_ICON");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		WebContentFolder.selectFolderTreeNode(nodeName = ${folderName});

		SelectFrame(value1 = "relative=top");

		AssertClick(
			locator1 = "Button#MOVE",
			value1 = "Move");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro moveToFolderCP(webContentTitle = null, folderName = null) {
		WebContentNavigator.gotoEntryMenuItem(
			entry = ${webContentTitle},
			menuItem = "Move");

		AssertTextEquals(
			key_webContentTitle = ${webContentTitle},
			locator1 = "WC#MOVE_WEB_CONTENT_ARTICLE",
			value1 = ${webContentTitle});

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		WebContentFolder.selectFolderTreeNode(nodeName = ${folderName});

		SelectFrame(value1 = "relative=top");

		AssertClick(
			locator1 = "Button#MOVE",
			value1 = "Move");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro moveToRecycleBinCP(webContentTitle = null, webContentTitleEscapeCharacter = null) {
		WebContent.viewTitle(
			webContentTitle = ${webContentTitle},
			webContentTitleEscapeCharacter = ${webContentTitleEscapeCharacter});

		if (isSet(webContentTitleEscapeCharacter)) {
			var key_webContentTitle = ${webContentTitleEscapeCharacter};

			WebContentNavigator.gotoEntryMenuItem(
				entry = ${webContentTitleEscapeCharacter},
				menuItem = "Delete");
		}
		else {
			var key_webContentTitle = ${webContentTitle};

			WebContentNavigator.gotoEntryMenuItem(
				entry = ${webContentTitle},
				menuItem = "Delete");
		}

		VerifyElementPresent(locator1 = "Message#SUCCESS");

		AssertElementNotPresent(
			key_webContentTitle = ${key_webContentTitle},
			locator1 = "WC#ENTRY_LIST_TITLE");
	}

	@summary = "Default summary"
	macro moveToRecycleBinViaDeleteIconCP() {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		PortletEntry.selectAll();

		Click(locator1 = "Icon#MOVE_TO_RECYCLE_BIN");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro paginateRelatedAssets(webContentTitle = null, itemsPerPage = null, assetType = null) {
		WebContentNavigator.gotoEditCP(webContentTitle = ${webContentTitle});

		Panel.expandPanel(panel = "Related Assets");

		WaitForLiferayEvent.initializeLiferayEventLog();

		AssertClick(
			locator1 = "AssetRelatedAssets#RELATED_ASSETS_SELECT",
			value1 = "Select");

		MenuItem.click(menuItem = ${assetType});

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertClick.assertPartialTextClickAt(
			locator1 = "Pagination#ITEMS_PER_PAGE_SELECT",
			value1 = "20 Entries");

		MenuItem.click(menuItem = ${itemsPerPage});
	}

	@summary = "Default summary"
	macro previewDisplayPageTemplate(webContentContent = null) {
		Panel.expandPanel(panel = "Display Page");

		WaitForLiferayEvent.initializeLiferayEventLog();

		Button.click(button = "Preview");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertTextPresent(
			locator1 = "IFrame#MODAL_BODY",
			value1 = ${webContentContent});

		takeScreenshot();

		IFrame.closeFrame();
	}

	@summary = "Default summary"
	macro removeDuplicatedFieldsGroup(index = null) {
		Click(
			key_class = "delete-button",
			key_index = ${index},
			locator1 = "Button#ANY_WITH_CLASS_AND_INDEX");
	}

	@summary = "Default summary"
	macro saveAsDraftViaAP() {
		Button.clickSaveAsDraft();

		Alert.viewSuccessMessage();

		Refresh();

		AssertElementNotPresent(locator1 = "AP#ASSET_ABSTRACT_GENERIC");
	}

	@summary = "Default summary"
	macro searchCP(webContentTitle = null) {
		Search.searchCP(searchTerm = ${webContentTitle});

		AssertTextEquals(
			key_webContentTitle = ${webContentTitle},
			locator1 = "WC#ENTRY_LIST_TITLE",
			value1 = ${webContentTitle});
	}

	@summary = "Default summary"
	macro searchNoResultsCP(webContentTitle = null, searchQuery = null) {
		Search.searchCP(searchTerm = ${searchQuery});

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No web content was found.");

		AssertTextNotPresent(
			key_webContentTitle = ${webContentTitle},
			locator1 = "WC#ENTRY_LIST_TITLE",
			value1 = ${webContentTitle});

		Search.searchCP(searchTerm = "");

		AssertTextPresent(
			key_webContentTitle = ${webContentTitle},
			locator1 = "WC#ENTRY_LIST_TITLE",
			value1 = ${webContentTitle});
	}

	@summary = "Default summary"
	macro selectCategory(userSegmentDetailTitle = null, vocabularyName = null, categoryNameList = null) {
		Panel.expandPanel(panel = "Categorization");

		if (isSet(userSegmentDetailTitle)) {
			AssertTextEquals(
				key_userSegmentDetailTitle = ${userSegmentDetailTitle},
				locator1 = "WCEditWebContent#USER_SEGMENT_DETAIL_TITLE",
				value1 = ${userSegmentDetailTitle});
		}

		Click(
			key_fieldLabel = ${vocabularyName},
			key_text = "Select",
			locator1 = "Button#ANY_WITH_LABEL");

		AssetCategorization.selectCategories(categoryNameList = ${categoryNameList});
	}

	@summary = "Default summary"
	macro selectFolder(searchTerm = null, folderName = null) {
		WaitForLiferayEvent.initializeLiferayEventLog();

		Click(locator1 = "Button#PARENT_FOLDER_SELECT");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(searchTerm)) {
			Type(
				locator1 = "TextInput#SEARCH",
				value1 = ${searchTerm});

			Click(
				key_nodeName = ${folderName},
				locator1 = "Treeview#NODE_ITEM");
		}
		else {
			WebContentFolder.selectFolderTreeNode(nodeName = ${folderName});
		}

		SelectFrame(value1 = "relative=top");

		AssertTextEquals.assertValue(
			inputFieldId = "resourceName",
			locator1 = "TextInput#INPUT_ID",
			value1 = ${folderName});
	}

	@summary = "Default summary"
	macro selectPreviewDisplayPage(displayPageName = null) {
		if (IsTextEqual(key_text = "Display Page", locator1 = "TextInput#ANY", value1 = "")) {
			Click(
				key_fieldLabel = "Display Page",
				key_text = "plus",
				locator1 = "Icon#ANY_ITEM_SELECTOR");
		}
		else {
			Click(
				key_fieldLabel = "Display Page",
				key_text = "change",
				locator1 = "Icon#ANY_ITEM_SELECTOR");
		}

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		LexiconCard.clickCard(card = ${displayPageName});

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro selectPreviewSite(siteName = null) {
		Click(
			key_fieldLabel = "Site",
			locator1 = "Dropdown#DROPDOWN_TOGGLE_BUTTON_WITH_LABEL");

		if ((IsElementNotPresent(key_menuItem = ${siteName}, locator1 = "MenuItem#ANY_MENU_ITEM")) && (IsElementPresent(key_text = "More", locator1 = "Button#ANY"))) {
			Button.clickMore();

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Navigator.gotoNavItem(navItem = "All Sites");

			LexiconEntry.gotoEntry(rowEntry = ${siteName});

			SelectFrameTop();
		}
		else {
			MenuItem.click(menuItem = ${siteName});
		}
	}

	@summary = "Default summary"
	macro selectRepositoryWC(depotName = null, available = null, folderName = null, contentName = null) {
		var key_contentName = ${contentName};

		ItemSelector.changeWorkspaces(workspacesType = "Asset Library");

		LexiconCard.clickCard(card = ${depotName});

		if (isSet(folderName)) {
			LexiconList.clickListEntryTitle(listEntry = ${folderName});
		}

		if (${available} == "false") {
			AssertElementNotPresent(locator1 = "ItemSelector#SELECT_FILE_WEB_CONTENT");
		}
		else {
			Click(locator1 = "ItemSelector#SELECT_FILE_WEB_CONTENT");
		}
	}

	@summary = "Default summary"
	macro selectTemplateCP(templateName = null, structureName = null) {
		ScrollBy(value1 = "0, 50");

		AssertTextEquals.assertPartialText(
			locator1 = "WCEditWebContent#SELECTED_STRUCTURE",
			value1 = ${structureName});

		Panel.expandPanel(panel = "Default Template");

		Click(
			buttonId = "selectDDMTemplate",
			locator1 = "Button#BUTTON_ID");

		IFrame.selectTopFrame();

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(confirm)) {
			LexiconCard.clickCard(card = ${templateName});
		}
		else {
			LexiconCard.clickCardWithConfirmation(card = ${templateName});
		}

		IFrame.selectTopFrame();

		WaitForPageLoad();

		Panel.expandPanel(panel = "Default Template");

		AssertTextEquals(
			inputFieldId = "ddmTemplateName",
			locator1 = "TextInput#INPUT_ID",
			value1 = ${templateName});
	}

	@summary = "Default summary"
	macro setImageDescription(fieldFieldLabel = null, webContentImageDescription = null) {
		Type(
			key_fieldFieldLabel = ${fieldFieldLabel},
			locator1 = "WCEditWebContent#IMAGE_DESCRIPTION",
			value1 = ${webContentImageDescription});
	}

	@summary = "Default summary"
	macro subscribeToCurrentFolderCP() {
		Click.clickAt(locator1 = "Icon#INFO");

		Click(locator1 = "Icon#SUBSCRIBE_BELL");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro subscribeToSpecificArticle(webContentTitle = null) {
		WebContentNavigator.gotoEntryMenuItem(
			entry = ${webContentTitle},
			menuItem = "Subscribe");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro tearDownCP() {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		LexiconEntry.viewActiveDisplayStyle(displayStyle = "list");

		if (IsElementPresent(locator1 = "WC#ENTRY_LIST_THUMBNAIL_GENERIC")) {
			PortletEntry.selectAll();

			Click(locator1 = "Icon#MOVE_TO_RECYCLE_BIN");

			VerifyElementPresent(locator1 = "Message#SUCCESS");
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			portlet = "Recycle Bin");

		RecycleBin.emptyCP();
	}

	@summary = "Default summary"
	macro uploadAudio(navTab = null, dmDocumentURL = null) {
		Click(locator1 = "CKEditor#TOOLBAR_AUDIO_BUTTON");

		ItemSelector.addAudioFromURL(
			audioSourceURL = ${dmDocumentURL},
			navTab = ${navTab});

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "Content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertElementPresent(locator1 = "CKEditor#CONTENT_AUDIO_LINK_IMAGE");

		IFrame.selectTopFrame();
	}

	@summary = "Default summary"
	macro uploadVideo(navTab = null, videoShortcutTitle = null, dmDocumentURL = null, videoShortcutPreview = null) {
		Click(locator1 = "WCEditWebContent#VIDEO_BUTTON");

		if (${navTab} == "URL") {
			ItemSelector.addVideoFromURL(
				navTab = ${navTab},
				videoSourceURL = ${dmDocumentURL});
		}
		else if (${navTab} == "Documents and Media") {
			ItemSelector.addVideoFromDM(
				navTab = ${navTab},
				videoShortcutPreview = ${videoShortcutPreview},
				videoShortcutTitle = ${videoShortcutTitle});
		}

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "Content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertElementPresent(locator1 = "CKEditor#CONTENT_VIDEO_LINK_IMAGE");

		IFrame.selectTopFrame();
	}

	@summary = "Default summary"
	macro viewApprovedStatus(webContentTitle = null) {
		var key_webContentTitle = ${webContentTitle};

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		AssertTextEquals(
			locator1 = "WC#ENTRY_TABLE_WORKFLOW_STATUS",
			value1 = "APPROVED");
	}

	@summary = "Default summary"
	macro viewAvailableLanguages(availableLanguageList = null, unavailableLanguageList = null) {
		Click(locator1 = "Button#LOCALIZATION_TRANSLATED");

		for (var availableLanguage : list ${availableLanguageList}) {
			AssertElementPresent(
				key_locale = ${availableLanguage},
				locator1 = "Translation#LOCALIZATION_NAME");
		}

		for (var unavailableLanguage : list ${unavailableLanguageList}) {
			AssertElementNotPresent(
				key_locale = ${unavailableLanguage},
				locator1 = "Translation#LOCALIZATION_NAME");
		}
	}

	@summary = "Default summary"
	macro viewCategorizationCategoriesOrderCP(vocabularyName = null, categoryNameList = null) {
		Panel.expandPanel(panel = "Categorization");

		var index = 1;

		for (var categoryName : list ${categoryNameList}) {
			AssertTextEquals(
				key_categoryName = ${categoryName},
				key_index = ${index},
				key_vocabularyName = ${vocabularyName},
				locator1 = "AssetCategorization#CATEGORY_BY_INDEX",
				value1 = ${categoryName});

			var index = ${index} + 1;
		}
	}

	@summary = "Default summary"
	macro viewCategorizationCategoryCP(categoryNameList = null) {
		Panel.expandPanel(panel = "Categorization");

		for (var categoryName : list ${categoryNameList}) {
			AssertTextEquals(
				key_categoryName = ${categoryName},
				locator1 = "AssetCategorization#CATEGORY",
				value1 = ${categoryName});
		}
	}

	@summary = "Default summary"
	macro viewCategorizationCategoryNotVisibleCP(categoryNameList = null) {
		Panel.expandPanel(panel = "Categorization");

		for (var categoryName : list ${categoryNameList}) {
			AssertElementNotPresent(
				key_categoryName = ${categoryName},
				locator1 = "AssetCategorization#CATEGORY");
		}
	}

	@summary = "Default summary"
	macro viewCategorizationVocabularyCP(vocabularyNameList = null) {
		Panel.expandPanel(panel = "Categorization");

		for (var vocabularyName : list ${vocabularyNameList}) {
			AssertTextEquals(
				key_fieldLabel = ${vocabularyName},
				locator1 = "AssetCategorization#VOCABULARY_LIST_ITEM",
				value1 = ${vocabularyName});
		}
	}

	@summary = "Default summary"
	macro viewClipboardContent(text = null) {
		WebContentNavigator.openToAddBasicArticle(
			groupName = "Guest",
			siteURLKey = "guest");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME_2");

		Click(locator1 = "CKEditor#BODY");

		Type.sendKeys(
			locator1 = "CKEditor#BODY",
			value1 = "keys=CONTROL,v");

		WaitForElementPresent(
			key_text = ${text},
			locator1 = "CKEditor#BODY_TEXT");
	}

	@summary = "Default summary"
	macro viewCompareVersions(newContent = null, version = null) {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		LexiconEntry.gotoEntry(rowEntry = ${version});

		SelectFrameTop();

		AssertTextEquals(
			locator1 = "WCViewHistory#VIEW_COMPARE_VERSIONS_CONTENT",
			value1 = ${newContent});
	}

	@summary = "Default summary"
	macro viewConversionLinksPGViaAP(webContentTitle = null, author = null, documentTypes = null, webContentContent = null) {
		WebContent.viewPGViaAP(
			author = ${author},
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		for (var documentType : list ${documentTypes}) {
			var documentTypeUppercase = StringUtil.upperCase(${documentType});

			var key_documentType = ${documentTypeUppercase};

			AssertTextEquals.assertPartialText(
				locator1 = "APAsset#DOCUMENT_CONVERSION_NAME",
				value1 = ${documentTypeUppercase});
		}
	}

	@summary = "Default summary"
	macro viewCP(webContentDescription = null, webContentTitle = null, upgradedFieldLabel = null, webContentTitleEscapeCharacter = null, webContentContent = null, otherLocaleSummary = null) {
		if (isSet(webContentTitleEscapeCharacter)) {
			var key_webContentTitle = ${webContentTitleEscapeCharacter};
		}
		else {
			var key_webContentTitle = ${webContentTitle};
		}

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = ${webContentTitle});

		if (${upgradedFieldLabel} == "true") {
			SelectFrame.selectFrameNoLoading(
				key_fieldLabel = "content",
				locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");
		}
		else {
			SelectFrame.selectFrameNoLoading(
				key_fieldLabel = "Content",
				locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");
		}

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = ${webContentContent});

		SelectFrame(value1 = "relative=top");

		if (isSet(webContentDescription)) {
			if (isSet(otherLocaleSummary)) {
				SelectFrame.selectFrameNoLoading(
					key_fieldLabel = ${otherLocaleSummary},
					locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");
			}
			else {
				SelectFrame.selectFrameNoLoading(
					key_fieldLabel = "Description",
					locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");
			}

			AssertTextEquals(
				locator1 = "CKEditor#BODY",
				value1 = ${webContentDescription});

			SelectFrameTop(value1 = "relative=top");
		}

		if (isSet(displayPageTemplateDisabled)) {
			Portlet.waitForForm();

			var key_panel = "Display Page";

			AssertElementNotPresent(locator1 = "Panel#PANEL");
		}
	}

	@summary = "Default summary"
	macro viewDefaultCP(webContentTitle = null) {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No web content was found.");

		var key_webContentTitle = ${webContentTitle};

		AssertElementNotPresent(locator1 = "WC#ENTRY_LIST_THUMBNAIL");

		AssertElementNotPresent(locator1 = "WC#ENTRY_LIST_TITLE");
	}

	@summary = "Default summary"
	macro viewDefaultLanguage(defaultLanguage = null) {
		AssertVisible(
			defaultLanguage = ${defaultLanguage},
			locator1 = "WCEditWebContent#DEFAULT_LANGUAGE");
	}

	@summary = "Default summary"
	macro viewDisplayStyleCP(webContentTitle = null) {
		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		LexiconEntry.viewActiveDisplayStyle(displayStyle = "cards");

		AssertElementPresent(
			key_webContentTitle = ${webContentTitle},
			locator1 = "WC#ENTRY_CARDS_THUMBNAIL");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		LexiconEntry.viewActiveDisplayStyle(displayStyle = "list");

		AssertElementPresent(
			key_webContentTitle = ${webContentTitle},
			locator1 = "WC#ENTRY_LIST_THUMBNAIL");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		LexiconEntry.viewActiveDisplayStyle(displayStyle = "table");

		AssertElementPresent(
			key_webContentTitle = ${webContentTitle},
			locator1 = "WC#ENTRY_TABLE_TITLE");
	}

	@summary = "Default summary"
	macro viewDuplicatedField(fieldLabel = null, totalPortletCount = null) {
		var i = 0;

		while (${i} != ${totalPortletCount}) {
			var i = ${i} + 1;

			AssertElementPresent(
				index = ${i},
				key_fieldLabel = ${fieldLabel},
				locator1 = "DataEngineRenderer#REPEATABLE_FIELD_ADD_BUTTON_INDEXED");
		}
	}

	@summary = "Default summary"
	macro viewEntryAsWorkflowAsset(webContentTitle = null, webContentContent = null) {
		SiteAdmin.viewPortletTitle(portletTitle = ${webContentTitle});

		AssertTextEquals(
			index = 1,
			key_webContentContent = ${webContentContent},
			locator1 = "WCD#WEB_CONTENT_CONTENT",
			value1 = ${webContentContent});
	}

	@summary = "Default summary"
	macro viewEntryListAuthor(author = null, entryTitle = null) {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		AssertTextEquals.assertPartialText(
			key_entryAuthor = ${author},
			key_entryTitle = ${entryTitle},
			locator1 = "WCEditWebContent#ENTRY_LIST_AUTHOR",
			value1 = ${author});
	}

	@summary = "Default summary"
	macro viewExpirationDateCP(expirationDate = null) {
		Panel.expandPanel(panel = "Schedule");

		AssertNotChecked(
			locator1 = "Checkbox#NEVER_EXPIRE",
			value1 = "Never Expire");

		AssertTextEquals(
			locator1 = "TextInput#EXPIRATION_DATE",
			value1 = ${expirationDate});
	}

	@summary = "Default summary"
	macro viewFieldRepeated(ddlRecordFieldData = null, fieldName = null) {
		AssertTextEquals(
			locator1 = "xpath=(//div[@data-fieldname='${fieldName}'][1]//a[contains(@class,'ddm-repeatable-add-button')]/../div//input)",
			value1 = ${ddlRecordFieldData});

		AssertTextEquals(
			locator1 = "xpath=(//div[@data-fieldname='${fieldName}'][2]//a[contains(@class,'ddm-repeatable-add-button')]/../div//input)",
			value1 = "${ddlRecordFieldData} 2");

		var i = 3;

		while (IsElementPresent(locator1 = "xpath=(//div[@data-fieldname='${fieldName}'])[${i}]")) {
			AssertTextEquals(
				locator1 = "xpath=(//div[@data-fieldname='${fieldName}'][${i}]//a[contains(@class,'ddm-repeatable-add-button')]/../div//input)",
				value1 = "${ddlRecordFieldData} ${i}");

			var i = ${i} + 1;
		}
	}

	@summary = "Default summary"
	macro viewFriendlyURLCP(friendlyURL = null) {
		AssertTextEquals(
			inputFieldId = "friendlyURL",
			locator1 = "TextInput#INPUT_ID",
			value1 = ${friendlyURL});
	}

	@summary = "Default summary"
	macro viewLinkedAssetPGViaAP(webContentTitle = null, webContentContent = null) {
		AssertClick.assertPartialTextClickAt(
			key_assetTitle = ${webContentTitle},
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${webContentTitle});

		AssertTextEquals.assertPartialText(
			key_assetTitle = ${webContentTitle},
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${webContentTitle});

		AssertTextEquals.assertPartialText(
			key_assetContent = ${webContentContent},
			locator1 = "APAsset#ASSET_CONTENT",
			value1 = ${webContentContent});
	}

	@summary = "Default summary"
	macro viewNoConversionLinksPGViaAP(webContentTitle = null, author = null, documentTypes = null, webContentContent = null) {
		WebContent.viewPGViaAP(
			author = ${author},
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		for (var documentType : list ${documentTypes}) {
			var documentTypeUppercase = StringUtil.upperCase(${documentType});

			AssertElementNotPresent(
				key_documentType = ${documentTypeUppercase},
				locator1 = "APAsset#DOCUMENT_CONVERSION_NAME");
		}
	}

	@summary = "Default summary"
	macro viewNoEditWCCP(webContentTitle = null) {
		var key_webContentTitle = ${webContentTitle};

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Click(locator1 = "WC#ENTRY_LIST_MENULIST_ICON");

		AssertElementNotPresent(
			key_menuItem = "Edit",
			locator1 = "MenuItem#ANY_MENU_ITEM");
	}

	@summary = "Default summary"
	macro viewNoEditWCViaAP(assetTitle = null) {
		AssertElementPresent(
			key_assetTitle = ${assetTitle},
			locator1 = "AP#ASSET_ABSTRACT_TITLE");

		AssertElementNotPresent(
			key_assetTitle = ${assetTitle},
			locator1 = "AP#ASSET_ELLIPSIS_ICON");
	}

	@summary = "Default summary"
	macro viewNoPermissionCP() {
		SiteAdmin.viewPortletTitle(portletTitle = "Web Content");

		AssertElementPresent(locator1 = "NavBar#CONTAINER");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No web content was found.");
	}

	@summary = "Default summary"
	macro viewNoTagsFromInfoPanel(webContentTitle = null, tagNameList = null) {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Check(
			key_webContentTitle = ${webContentTitle},
			locator1 = "WC#ENTRY_LIST_CHECKBOX");

		Click(locator1 = "Icon#INFO");

		for (var tagName : list ${tagNameList}) {
			AssertElementNotPresent(
				key_tagName = ${tagName},
				locator1 = "WC#SIDEBAR_TAG");
		}
	}

	@summary = "Default summary"
	macro viewNotPresentCP() {
		AssertElementNotPresent(locator1 = "TextInput#TITLE");
	}

	@summary = "Default summary"
	macro viewPaginateRelatedAssets(numberOfPages = null, itemsPerPage = null) {
		AssertTextEquals.assertPartialText(
			locator1 = "Pagination#ITEMS_PER_PAGE_SELECT",
			value1 = ${itemsPerPage});

		AssertTextEquals(
			locator1 = "Pagination#CURRENT_PAGE_SELECT",
			value1 = ${numberOfPages});
	}

	@summary = "Default summary"
	macro viewPGViaAP(webContentTitle = null, author = null, webContentContent = null) {
		var key_assetContent = ${webContentContent};
		var key_assetTitle = ${webContentTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${webContentTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${webContentContent});

		if (isSet(author)) {
			AssertTextEquals.assertPartialText(
				key_author = ${author},
				locator1 = "AP#METADATA_AUTHOR",
				value1 = ${author});
		}

		AssetPublisherPortlet.clickAssetTitle(assetTitle = ${webContentTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${webContentTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "APAsset#ASSET_VIEW_CONTENT",
			value1 = ${webContentContent});
	}

	@summary = "Default summary"
	macro viewRepeatedField(fieldName = null) {
		AssertElementPresent(locator1 = "xpath=(//div[@data-fieldname='${fieldName}'][1]//a[contains(@class,'ddm-repeatable-add-button')]/../div)");

		AssertElementPresent(locator1 = "xpath=(//div[@data-fieldname='${fieldName}'][2]//a[contains(@class,'ddm-repeatable-add-button')]/../div)");
	}

	@summary = "Default summary"
	macro viewRTLLayout() {
		AssertCssValue(
			locator1 = "TextInput#TITLE",
			locator2 = "direction",
			value1 = "rtl");
	}

	@summary = "Default summary"
	macro viewSelectedDisplayPageTemplateCP(displayPageTemplateType = null, displayPageTemplateName = null) {
		Panel.expandPanel(panel = "Display Page");

		if (IsElementPresent(locator1 = "Select#SELECT_ID", selectFieldId = "displayPageType")) {
			AssertSelectedLabel(
				locator1 = "Select#SELECT_ID",
				selectFieldId = "displayPageType",
				value1 = ${displayPageTemplateType});
		}
		else {
			AssertSelectedLabel(
				ariaLabel = "Select Display Page Type",
				locator1 = "Select#ANY_ARIA_LABEL",
				value1 = ${displayPageTemplateType});
		}

		if (isSet(displayPageTemplateName)) {
			if (IsElementPresent(key_titleName = "Display Page Template", locator1 = "TextInput#INPUT_CONTAINS_TITLE")) {
				AssertTextEquals(
					key_titleName = "${displayPageTemplateType} Display Page Template",
					locator1 = "TextInput#INPUT_CONTAINS_TITLE",
					value1 = ${displayPageTemplateName});
			}
			else {
				if (${displayPageTemplateType} == "Default") {
					AssertTextEquals(
						ariaLabel = "Display Page Name",
						locator1 = "TextInput#ANY_WITH_ARIA_LABEL",
						value1 = ${displayPageTemplateName});
				}
				else {
					AssertTextEquals(
						key_placeHolder = "No Display Page Selected",
						locator1 = "TextInput#ANY_PLACEHOLDER",
						value1 = ${displayPageTemplateName});
				}
			}
		}
	}

	@summary = "Default summary"
	macro viewSelectedTemplateCP(templateName = null) {
		Panel.expandPanel(panel = "Default Template");

		AssertTextEquals(
			inputFieldId = "ddmTemplateName",
			locator1 = "TextInput#INPUT_ID",
			value1 = ${templateName});
	}

	@summary = "Default summary"
	macro viewSpecificVersionHistoryCP(webContentTitle = null, webContentStatus = null) {
		var key_webContentTitle = ${webContentTitle};

		AssertTextEquals(
			locator1 = "WCEditWebContent#VIEW_HISTORY_VERSION_TITLE",
			value1 = ${webContentTitle});

		AssertTextEquals(
			locator1 = "WCEditWebContent#VIEW_HISTORY_VERSION_STATUS",
			value1 = ${webContentStatus});
	}

	@summary = "Default summary"
	macro viewStatus(webContentTitle = null, webContentContent = null, webContentStatus = null) {
		AssertTextEquals(
			key_status = ${webContentStatus},
			locator1 = "WCEditWebContent#WORKFLOW_STATUS",
			value1 = ${webContentStatus});

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = ${webContentTitle});

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "Content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = ${webContentContent});

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro viewStructureAndTemplateLocalization(structureLocalizationName = null, panel = null, templateLocalizationName = null) {
		if (isSet(structureLocalizationName)) {
			AssertTextEquals.assertPartialText(
				locator1 = "WCEditWebContent#SELECTED_STRUCTURE",
				value1 = ${structureLocalizationName});
		}

		if (isSet(templateLocalizationName)) {
			Panel.expandPanel(panel = ${panel});

			AssertTextEquals(
				inputFieldId = "ddmTemplateName",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${templateLocalizationName});
		}
	}

	@summary = "Default summary"
	macro viewStructureViaAddMenuCP(structureName = null) {
		LexiconEntry.gotoAdd();

		AssertTextEquals(
			key_menuItem = ${structureName},
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = ${structureName});
	}

	@summary = "Default summary"
	macro viewStructureWithWorkflowPendingCP(webContentTitle = null) {
		WebContentNavigator.gotoViewStatus(
			webContentStatus = "PENDING",
			webContentTitle = ${webContentTitle});

		AssertElementPresent(
			key_status = "Pending",
			locator1 = "WCEditWebContent#WORKFLOW_STATUS");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = ${webContentTitle});
	}

	@summary = "Default summary"
	macro viewTagFromInfoPanel(webContentTitle = null) {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Check(
			key_webContentTitle = ${webContentTitle},
			locator1 = "WC#ENTRY_LIST_CHECKBOX");

		Click(locator1 = "Icon#INFO");

		AssertElementPresent(
			key_tagName = ${tagName},
			locator1 = "WC#SIDEBAR_TAG");
	}

	@summary = "Default summary"
	macro viewTitle(webContentTitle = null, webContentTitleEscapeCharacter = null, onLive = null) {
		if (isSet(webContentTitleEscapeCharacter)) {
			var key_webContentTitle = ${webContentTitleEscapeCharacter};
		}
		else {
			var key_webContentTitle = ${webContentTitle};
		}

		if (${onLive} == "true") {
			AssertTextEquals.assertPartialText(
				locator1 = "WC#ENTRY_LIST_TITLE_ON_LIVE",
				value1 = ${webContentTitle});
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "WC#ENTRY_LIST_TITLE",
				value1 = ${webContentTitle});
		}
	}

	@summary = "Default summary"
	macro viewUserEditCP(userFirstLast = null, webContentTitle = null) {
		AssertTextEquals.assertPartialText(
			key_webContentTitle = ${webContentTitle},
			locator1 = "WC#ENTRY_LIST_LAST_MODIFIED",
			value1 = ${userFirstLast});

		WebContent.viewVersion(
			version = "1.1",
			webContentTitle = ${webContentTitle});
	}

	@summary = "Default summary"
	macro viewVersion(webContentTitle = null, version = null) {
		var key_panel = "Basic Information";

		WebContentNavigator.gotoEditCP(webContentTitle = ${webContentTitle});

		if ((IsElementPresent(locator1 = "Panel#PANEL_COLLAPSED")) && (IsVisible(locator1 = "Panel#PANEL_COLLAPSED"))) {
			AssertClick(
				locator1 = "Panel#PANEL_COLLAPSED",
				value1 = ${key_panel});
		}

		AssertElementPresent(locator1 = "Panel#PANEL_EXPANDED");

		AssertTextEquals.assertPartialText(
			locator1 = "WCEditWebContent#VERSION",
			value1 = ${version});
	}

	@summary = "Default summary"
	macro viewVideoPreview(webContentTitle = null, service = null, liveSite = null) {
		if (isSet(webContentTitle)) {
			WebContentNavigator.gotoPreviewEntryCP(
				liveSite = ${liveSite},
				webContentTitle = ${webContentTitle});

			SelectFrame(locator1 = "IFrame#MODAL_BODY");
		}

		AssertVisible(
			key_service = ${service},
			locator1 = "WCPreview#BODY_FIELD_VIDEO");
	}

	@summary = "Default summary"
	macro viewWCViewableByPermissions() {
		PortletEntry.inputTitle(title = "Web Content Title");

		Panel.expandPanel(panel = "Permissions");

		AssertSelectedLabel(
			locator1 = "Select#PERMISSIONS",
			value1 = "Site Members");
	}

	@summary = "Default summary"
	macro viewWithStructureCP(webContentLocaleFieldLabel = null, webContentTitleEscapeCharacter = null, webContentUpload = null, description = null, webContentImageDescription = null, webContentLinkToPage = null, webContentText = null, webContentGrid = null, webContentImage = null, row = null, webContentSelectFromList = null, webContentSingleSelection = null, skipGotoEditCp = null, webContentColor = null, webContentDate = null, webContentWebContent = null, webContentNumeric = null, webContentBoolean = null, webContentTitle = null, webContentRichText = null, webContentTitleTranslated = null, location = null, webContentMultipleSelection = null, fieldType = null, translated = null) {
		if (!(isSet(predefinedValue))) {
			if (${skipGotoEditCp} != "true") {
				LexiconEntry.changeDisplayStyle(displayStyle = "list");

				WebContentNavigator.gotoEditCP(
					webContentTitle = ${webContentTitle},
					webContentTitleEscapeCharacter = ${webContentTitleEscapeCharacter});

				AssertVisible(locator1 = "WCEditWebContent#SIDEBAR");
			}

			if (isSet(webContentLocaleFieldLabel)) {
				if (isSet(translated)) {
					PortletEntry.changeLocale(
						locale = ${webContentLocaleFieldLabel},
						translated = ${translated});
				}
				else {
					PortletEntry.changeLocale(
						locale = ${webContentLocaleFieldLabel},
						translated = "true");
				}
			}

			if (isSet(webContentTitleTranslated)) {
				AssertTextEquals(
					locator1 = "TextInput#TITLE",
					value1 = ${webContentTitleTranslated});
			}
			else {
				AssertTextEquals(
					locator1 = "TextInput#TITLE",
					value1 = ${webContentTitle});
			}

			if (isSet(description)) {
				SelectFrame.selectFrameNoLoading(
					key_fieldLabel = "Description",
					locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

				AssertTextEquals(
					locator1 = "CKEditor#BODY",
					value1 = ${description});

				SelectFrameTop(value1 = "relative=top");
			}
		}

		if (${webContentBoolean} == "true") {
			var webContentBooleanFieldLabel = "Boolean";

			AssertChecked.assertCheckedNotVisible(
				checkboxName = ${webContentBooleanFieldLabel},
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
		else if (${webContentBoolean} == "false") {
			var webContentBooleanFieldLabel = "Boolean";

			AssertNotChecked.assertNotCheckedNotVisible(
				checkboxName = ${webContentBooleanFieldLabel},
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		if (isSet(webContentColor)) {
			if (!(isSet(webContentColorFieldLabel))) {
				var webContentColorFieldLabel = "Color";
			}

			AssertTextEquals.assertValue(
				key_fieldFieldLabel = ${webContentColorFieldLabel},
				locator1 = "TextInput#SELECTOR_INPUT",
				value1 = ${webContentColor});
		}

		if (isSet(webContentDate)) {
			if (!(isSet(webContentDateFieldLabel))) {
				var webContentDateFieldLabel = "Date";
			}

			if (${webContentDate} == "__/__/____") {
				AssertAttributeValue(
					key_fieldFieldLabel = ${webContentDateFieldLabel},
					locator1 = "WCEditWebContent#DATE_INPUT",
					value1 = "placeholder",
					value2 = ${webContentDate});

				AssertAttributeValue(
					key_fieldFieldLabel = ${webContentDateFieldLabel},
					locator1 = "WCEditWebContent#DATE_INPUT",
					value1 = "value",
					value2 = "");
			}
			else {
				AssertAttributeValue(
					key_fieldFieldLabel = ${webContentDateFieldLabel},
					locator1 = "WCEditWebContent#DATE_INPUT",
					value1 = "value",
					value2 = ${webContentDate});
			}
		}

		if (isSet(webContentGeolocation)) {
			if (!(isSet(webContentGeolocationFieldLabel))) {
				var webContentGeolocationFieldLabel = "Geolocation";
			}

			AssertElementPresent(
				key_fieldFieldLabel = ${webContentGeolocationFieldLabel},
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

			if (isSet(location)) {
				var lat = StringUtil.extractFirst(${location}, ",");
				var lng = StringUtil.extractLast(${location}, ",");

				Geolocation.assertMarkerPosition(
					lat = ${lat},
					lng = ${lng});
			}
		}

		if (isSet(webContentGrid)) {
			if (!(isSet(webContentGridFieldLabel))) {
				var webContentGridFieldLabel = "Grid";
			}

			var column = ${column} + 1;

			if (${webContentGrid} == "true") {
				AssertChecked.assertCheckedNotVisible(
					key_column = ${column},
					key_fieldFieldLabel = ${webContentGridFieldLabel},
					key_row = ${row},
					locator1 = "WCEditWebContent#GRID_OPTION");
			}
			else if (${webContentGrid} == "false") {
				AssertNotChecked.assertNotCheckedNotVisible(
					key_column = ${column},
					key_fieldFieldLabel = ${webContentGridFieldLabel},
					key_row = ${row},
					locator1 = "WCEditWebContent#GRID_OPTION");
			}
		}

		if (isSet(webContentImage)) {
			if (!(isSet(webContentImageFieldLabel))) {
				var webContentImageFieldLabel = "Image";
			}

			AssertTextEquals(
				key_fieldFieldLabel = ${webContentImageFieldLabel},
				locator1 = "TextInput#SELECTOR_INPUT",
				value1 = ${webContentImage});

			AssertElementPresent(
				key_fieldFieldLabel = ${webContentImageFieldLabel},
				key_image = "/documents/",
				locator1 = "WCEditWebContent#IMAGE_PICKER_PREVIEW");

			if (isSet(webContentImageDescription)) {
				AssertTextEquals(
					key_fieldFieldLabel = ${webContentImageFieldLabel},
					locator1 = "WCEditWebContent#IMAGE_DESCRIPTION",
					value1 = ${webContentImageDescription});
			}
		}

		if (isSet(webContentLinkToPage)) {
			if (!(isSet(webContentLinkToPageFieldLabel))) {
				var webContentLinkToPageFieldLabel = "Link to Page";
			}

			WaitForEditable(
				key_fieldFieldLabel = ${webContentLinkToPageFieldLabel},
				locator1 = "TextInput#SELECTOR_INPUT");

			var selectedPage = selenium.getElementValue("//label[normalize-space(text())='${webContentLinkToPageFieldLabel}']/following-sibling::div//div[contains(@class,'input-group')]//input[contains(@type,'text')]");

			if (contains(${selectedPage}, ${webContentLinkToPage})) {
				echo("The ${selectedPage} is shown in field.");
			}
			else {
				TestUtils.fail(message = "The ${selectedPage} is not shown in field.");
			}
		}

		if (isSet(webContentMultipleSelection)) {
			if (!(isSet(webContentMultipleSelectionFieldLabel))) {
				var webContentMultipleSelectionFieldLabel = "Multiple Selection";
			}

			AssertChecked.assertCheckedNotVisible(
				key_fieldFieldLabel = ${webContentMultipleSelectionFieldLabel},
				key_optionValue = ${webContentMultipleSelection},
				locator1 = "WCEditWebContent#SELECTION_OPTION");
		}

		if (isSet(webContentNumeric)) {
			if (!(isSet(webContentNumericFieldLabel))) {
				var webContentNumericFieldLabel = "Numeric";
			}

			AssertTextEquals.assertValue(
				key_fieldFieldLabel = ${webContentNumericFieldLabel},
				locator1 = "WCEditWebContent#TEXT_INPUT",
				value1 = ${webContentNumeric});
		}

		if (isSet(webContentRichText)) {
			if (!(isSet(webContentRichTextFieldLabel))) {
				var webContentRichTextFieldLabel = "Rich Text";
			}

			SelectFrame.selectFrameNoLoading(
				key_fieldLabel = ${webContentRichTextFieldLabel},
				locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

			AssertTextEquals(
				locator1 = "CKEditor#BODY",
				value1 = ${webContentRichText});

			SelectFrameTop();
		}

		if (isSet(webContentSelectFromList)) {
			if (!(isSet(webContentSelectFromListFieldLabel))) {
				var webContentSelectFromListFieldLabel = "Select from List";
			}

			AssertTextEquals(
				key_fieldFieldLabel = ${webContentSelectFromListFieldLabel},
				locator1 = "WCEditWebContent#SELECT_FIELD_TRIGGER",
				value1 = ${webContentSelectFromList});
		}

		if (isSet(webContentSeparator)) {
			if (!(isSet(webContentSeparatorFieldLabel))) {
				var webContentSeparatorFieldLabel = "Separator";
			}

			AssertVisible(
				key_fieldFieldLabel = ${webContentSeparatorFieldLabel},
				locator1 = "DDMField#SEPARATOR");
		}

		if (isSet(webContentSingleSelection)) {
			if (!(isSet(webContentSingleSelectionFieldLabel))) {
				var webContentSingleSelectionFieldLabel = "Single Selection";
			}

			AssertChecked.assertCheckedNotVisible(
				key_fieldFieldLabel = ${webContentSingleSelectionFieldLabel},
				key_optionValue = ${webContentSingleSelection},
				locator1 = "WCEditWebContent#SELECTION_OPTION");
		}

		if (isSet(webContentText)) {
			if (!(isSet(webContentTextFieldLabel))) {
				var webContentTextFieldLabel = "Text";
			}

			if (${fieldType} == "Multiple Lines") {
				WaitForElementPresent(
					key_fieldFieldLabel = ${webContentTextFieldLabel},
					locator1 = "DDMField#MULTIPLE_LINES");

				var actual = TestUtils.getElementTextContent(element = "//label[normalize-space(text())='${webContentTextFieldLabel}']//..//textarea");

				StringUtil.assertEquals(${webContentText}, ${actual});
			}
			else {
				AssertTextEquals.assertValue(
					key_fieldFieldLabel = ${webContentTextFieldLabel},
					locator1 = "WCEditWebContent#TEXT_INPUT",
					value1 = ${webContentText});
			}
		}

		if (isSet(webContentUpload)) {
			if (!(isSet(webContentUploadFieldLabel))) {
				var webContentUploadFieldLabel = "Upload";
			}

			AssertTextEquals(
				key_fieldFieldLabel = ${webContentUploadFieldLabel},
				locator1 = "TextInput#SELECTOR_INPUT",
				value1 = ${webContentUpload});
		}

		if (isSet(webContentWebContent)) {
			if (!(isSet(webContentWebContentFieldLabel))) {
				var webContentWebContentFieldLabel = "Web Content";
			}

			AssertTextEquals(
				key_fieldFieldLabel = ${webContentWebContentFieldLabel},
				locator1 = "TextInput#SELECTOR_INPUT",
				value1 = ${webContentWebContent});
		}
	}

	@summary = "Default summary"
	macro viewWithWorkflowCP(webContentTitle = null, webContentContent = null) {
		WebContentNavigator.gotoViewStatus(
			webContentStatus = "PENDING",
			webContentTitle = ${webContentTitle});

		AssertTextEquals(
			key_status = "Pending",
			locator1 = "AssetWorkflow#WORKFLOW_STATUS",
			value1 = "Pending");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = ${webContentTitle});

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "Content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = ${webContentContent});

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro viewWithWorkflowPGViaAP(webContentTitle = null) {
		AssertTextNotPresent(value1 = ${webContentTitle});
	}

}