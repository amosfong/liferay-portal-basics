definition {

	@summary = "Default summary"
	macro _addFields(templateFieldNames = null) {
		if (isSet(templateFieldNames)) {
			Navigator.gotoSidebarTab(tabName = "Elements");

			for (var fieldName : list ${templateFieldNames}) {
				var key_panelTitle = "Fields";
				var key_variableName = ${fieldName};

				AssertClick(
					locator1 = "DDMEditTemplate#WEB_CONTENT_SCRIPT_VARIABLE",
					value1 = ${fieldName});
			}
		}
	}

	@summary = "Default summary"
	macro _addGeneralVariables(generalVariables = null) {
		if (isSet(generalVariables)) {
			Navigator.gotoSidebarTab(tabName = "Elements");

			for (var generalVariable : list ${generalVariables}) {
				var key_panelTitle = "General Variables";
				var key_variableName = ${generalVariable};

				AssertClick(
					locator1 = "DDMEditTemplate#WEB_CONTENT_SCRIPT_VARIABLE",
					value1 = ${generalVariable});
			}
		}
	}

	@summary = "Default summary"
	macro _inputDescription(templateDescription = null) {
		if (isSet(templateDescription)) {
			Navigator.gotoSidebarTab(tabName = "Properties");

			PortletEntry.inputDescription(description = ${templateDescription});
		}
	}

	@summary = "Default summary"
	macro _inputStructure(structureName = null) {
		if (isSet(structureName)) {
			Navigator.gotoSidebarTab(tabName = "Properties");

			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				buttonId = "selectDDMStructure",
				locator1 = "Button#BUTTON_ID");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			var key_tableEntry = ${structureName};

			AssertElementPresent(locator1 = "LexiconTable#TABLE_ENTRY_TITLE");

			var browserType = PropsUtil.get("browser.type");

			if (${browserType} == "safari") {
				Click.javaScriptClick(locator1 = "LexiconTable#TABLE_ENTRY_TITLE");
			}
			else {
				AssertClick.assertTextClickAt(
					locator1 = "LexiconTable#TABLE_ENTRY_TITLE",
					value1 = ${structureName});
			}

			SelectFrameTop();
		}
	}

	@summary = "Default summary"
	macro _inputTemplateFile(templateFile = null) {
		if (isSet(templateFile)) {
			Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");

			var filePath = TestCase.getDependenciesDirPath(fileName = ${templateFile});

			UploadFile(
				inputFieldId = "importScript",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${filePath});

			Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");
		}
	}

	@summary = "Default summary"
	macro addCP(templateScript = null, templateName = null, structureName = null, templateDescription = null, generalVariables = null, templateFile = null, templateFieldNames = null, imageSourceURL = null) {
		LexiconEntry.gotoAdd();

		WaitForVisible(locator1 = "Sidebar#PANEL_OPEN");

		WebContentTemplates.inputTemplateAddScreenFields(
			generalVariables = ${generalVariables},
			imageSourceURL = ${imageSourceURL},
			structureName = ${structureName},
			templateDescription = ${templateDescription},
			templateFieldNames = ${templateFieldNames},
			templateFile = ${templateFile},
			templateName = ${templateName},
			templateScript = ${templateScript});

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro addNullCP() {
		LexiconEntry.gotoAdd();

		WaitForVisible(locator1 = "Sidebar#PANEL_OPEN");

		AssertElementNotPresent(locator1 = "TextInput#REQUIRED_ALERT");

		Button.clickSave();

		AssertElementPresent(locator1 = "TextInput#REQUIRED_ALERT");

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro addRoleViewPermissions(templateName = null, roles = null) {
		WebContentTemplates.gotoTemplateEllipsisItem(
			item = "Permissions",
			templateName = ${templateName});

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "Add",
			roleList = ${roles});

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro copyCP(templateCopyName = null, templateName = null, description = null) {
		WebContentTemplates.gotoTemplateEllipsisItem(
			item = "Make a Copy",
			templateName = ${templateName});

		if (isSet(templateCopyName)) {
			PortletEntry.inputName(name = ${templateCopyName});
		}

		if (isSet(description)) {
			PortletEntry.inputDescription(description = ${description});
		}

		Click(locator1 = "Button#COPY");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro deleteCP(templateName = null, webContentHasReference = null) {
		var key_ddlTemplateName = ${templateName};

		Click(
			key_card = ${templateName},
			locator1 = "Card#CARD_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		if (${webContentHasReference} == "true") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "The template cannot be deleted because it is required by one or more template links.");
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	@summary = "Default summary"
	macro gotoTemplateEllipsisItem(item = null, templateName = null) {
		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		if (${item} == "Permissions") {
			WaitForLiferayEvent.initializeLiferayEventLog();
		}

		LexiconCard.clickEllipsisItem(
			card = ${templateName},
			item = ${item});
	}

	@summary = "Default summary"
	macro inputScript(templateScript = null) {
		if (isSet(templateScript)) {
			Type.typeCodeMirrorEditorNoError(
				locator1 = "DDMEditTemplate#CODE_MIRROR_EDITOR",
				value1 = ${templateScript});
		}
	}

	@summary = "Default summary"
	macro inputTemplateAddScreenFields(templateScript = null, templateName = null, structureName = null, templateDescription = null, generalVariables = null, templateFile = null, templateFieldNames = null, imageSourceURL = null) {
		if (isSet(templateName)) {
			PortletEntry.inputName(name = ${templateName});
		}

		if (isSet(structureName)) {
			WebContentTemplates._inputStructure(structureName = ${structureName});
		}

		WebContentTemplates._inputDescription(templateDescription = ${templateDescription});

		if (isSet(imageSourceURL)) {
			Navigator.gotoSidebarTab(tabName = "Properties");

			WebContent.addFeaturedImageFromURL(imageSourceURL = ${imageSourceURL});
		}

		WebContentTemplates.inputScript(templateScript = ${templateScript});

		WebContentTemplates._addFields(templateFieldNames = ${templateFieldNames});

		WebContentTemplates._addGeneralVariables(generalVariables = ${generalVariables});

		WebContentTemplates._inputTemplateFile(templateFile = ${templateFile});
	}

	@summary = "Default summary"
	macro localizeTemplateName(locale2 = null, templateName = null, localization2Name = null, locale = null, localization1Name = null) {
		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		var key_ddlTemplateName = ${templateName};

		WebContentNavigator.gotoViewTemplate(templateName = ${templateName});

		WaitForVisible(locator1 = "Sidebar#PANEL_OPEN");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = ${templateName});

		PortletEntry.changeLocale(locale = ${locale});

		Type.clickAtType(
			locator1 = "TextInput#NAME",
			value1 = ${localization1Name});

		if (isSet(locale2)) {
			PortletEntry.changeLocale(locale = ${locale2});

			Type.clickAtType(
				locator1 = "TextInput#NAME",
				value1 = ${localization2Name});
		}
	}

	@summary = "Default summary"
	macro modifyTemplate(templateScript = null, templatePreviousName = null, templateName = null, templateDescription = null, templateFile = null, templateFieldNames = null, imageSourceURL = null) {
		WebContentTemplates.gotoTemplateEllipsisItem(
			item = "Edit",
			templateName = ${templatePreviousName});

		WaitForVisible(locator1 = "Sidebar#PANEL_OPEN");

		WebContentTemplates.inputTemplateAddScreenFields(
			imageSourceURL = ${imageSourceURL},
			templateDescription = ${templateDescription},
			templateFieldNames = ${templateFieldNames},
			templateFile = ${templateFile},
			templateName = ${templateName},
			templateScript = ${templateScript});

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro openWebContentTemplatesAdmin(siteURLKey = null) {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_journal_web_portlet_JournalPortlet&_com_liferay_journal_web_portlet_JournalPortlet_mvcPath=%2Fview_ddm_templates.jsp");
	}

	@summary = "Default summary"
	macro tearDownCP() {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Templates");

		Search.searchCP(searchTerm = 2);

		while (IsElementNotPresent(locator1 = "Message#EMPTY_INFO")) {
			PortletEntry.selectAll();

			ClickNoError(
				key_text = "trash",
				locator1 = "ManagementBar#ANY_ICON");

			AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

			Alert.viewSuccessMessage();
		}

		Search.searchCP(searchTerm = "Template");

		while (IsElementNotPresent(locator1 = "Message#EMPTY_INFO")) {
			PortletEntry.selectAll();

			ClickNoError(
				key_text = "trash",
				locator1 = "ManagementBar#ANY_ICON");

			AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

			Alert.viewSuccessMessage();
		}

		Portlet.viewEmptyMessage(message = "There are no results.");
	}

	@summary = "Default summary"
	macro viewCardsEntryCP(templateName = null, templateSmallImage = null) {
		LexiconCard.viewCardTitle(card = ${templateName});

		if (isSet(templateSmallImage)) {
			AssertVisible(
				locator1 = "DDMSelectTemplate#TEMPLATE_CARDS_SMALL_IMAGE",
				value1 = ${templateSmallImage});
		}
	}

	@summary = "Default summary"
	macro viewCardsEntryCP2(templateName = null, templateSmallImage = null) {
		LexiconCard.viewCardTitle(card = ${templateName});

		if (isSet(templateSmallImage)) {
			WaitForElementPresent(
				locator1 = "DDMSelectTemplate#TEMPLATE_CARDS_SMALL_IMAGE_2",
				value1 = ${templateSmallImage});

			AssertVisible(
				locator1 = "DDMSelectTemplate#TEMPLATE_CARDS_SMALL_IMAGE_2",
				value1 = ${templateSmallImage});
		}
	}

	@summary = "Default summary"
	macro viewCP(templateScript = null, templateName = null, structureName = null, templateDescription = null, userEditPermission = null) {
		var key_ddlStructureName = ${structureName};
		var key_ddlTemplateDescription = ${templateDescription};
		var key_ddlTemplateName = ${templateName};

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		AssertVisible(
			key_tableEntry = ${templateName},
			locator1 = "LexiconTable#TABLE_ENTRY");

		if (isSet(templateDescription)) {
			AssertTextEquals(
				key_columnName = "description",
				key_tableEntry = ${templateName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO",
				value1 = ${templateDescription});
		}

		if (isSet(structureName)) {
			AssertTextEquals(
				locator1 = "DDMSelectTemplate#TEMPLATE_TABLE_MODE",
				value1 = ${structureName});
		}

		if (${userEditPermission} != "noEditPermission") {
			WebContentNavigator.gotoViewTemplate(templateName = ${templateName});

			WaitForVisible(locator1 = "Sidebar#PANEL_OPEN");

			AssertTextEquals(
				locator1 = "TextInput#NAME",
				value1 = ${templateName});

			Navigator.gotoSidebarTab(tabName = "Properties");

			if (isSet(templateDescription)) {
				AssertTextEquals(
					locator1 = "TextArea#DESCRIPTION",
					value1 = ${templateDescription});
			}

			if (isSet(structureName)) {
				AssertTextEquals(
					key_text = "Structure",
					locator1 = "TextInput#ANY",
					value1 = ${structureName});
			}

			if (isSet(templateScript)) {
				AssertTextEquals.assertPartialText(
					locator1 = "DDMEditTemplate#CODE_MIRROR_EDITOR_CONTENT",
					value1 = ${templateScript});
			}
		}
	}

	@summary = "Default summary"
	macro viewTableEntryCP(templateName = null, templateDescription = null, templateSmallImage = null) {
		var key_ddlTemplateName = ${templateName};

		AssertVisible(
			key_tableEntry = ${templateName},
			locator1 = "LexiconTable#TABLE_ENTRY");

		if (isSet(templateSmallImage)) {
			AssertVisible(
				locator1 = "DDMSelectTemplate#TEMPLATE_TABLE_DESCRIPTION_SMALL_IMAGE",
				value1 = ${templateSmallImage});
		}
		else {
			AssertTextEquals(
				key_columnName = "description",
				key_tableEntry = ${templateName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO",
				value1 = ${templateDescription});
		}
	}

}