definition {

	@summary = "Default summary"
	macro add(embedImage = null, portletNameScoped = null, siteName = null, fieldLabelList = null, source = null, webContentTextSingleLine = null, webContentTextMultipleLines = null, webContentTitle = null, templateName = null, imageFileName = null, webContentContent = null) {
		WebContentDisplayPortletNavigator.gotoAdd(
			portletNameScoped = ${portletNameScoped},
			structureName = ${structureName});

		if (isSet(structureName)) {
			for (var fieldLabel : list ${fieldLabelList}) {
				if (${fieldLabel} == "Text Box") {
					WebContent.addWithStructureCP(
						fieldType = "Multiple Lines",
						webContentText = ${webContentTextMultipleLines},
						webContentTextFieldLabel = "Text Box");
				}
				else {
					WebContent.addWithStructureCP(webContentText = ${webContentTextSingleLine});
				}
			}
		}
		else {
			var structureName = "Basic Web Content";
		}

		if (isSet(templateName)) {
			if (IsTextNotEqual(inputFieldId = "ddmTemplateName", locator1 = "TextInput#INPUT_ID", value1 = ${templateName})) {
				WebContent.selectTemplateCP(
					structureName = ${structureName},
					templateName = ${templateName});
			}
		}

		WebContent.addCP(
			embedImage = ${embedImage},
			imageFileName = ${imageFileName},
			siteName = ${siteName},
			source = ${source},
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		PortletEntry.publish();
	}

	@summary = "Default summary"
	macro addDraft(webContentTitle = null, webContentContent = null) {
		WebContentDisplayPortletNavigator.gotoAdd();

		WebContent.addDraft(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});
	}

	@summary = "Default summary"
	macro addLocalized(webContentTitle = null, portletNameTranslation = null, localizedBasicWebContent = null, webContentContent = null) {
		WebContentDisplayPortletNavigator.gotoAdd(
			portletNameTranslation = ${portletNameTranslation},
			structureName = ${localizedBasicWebContent});

		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		Click(locator1 = "Button#PUBLISH_LOCALIZED");

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro addTag(tagNameList = null) {
		Panel.expandPanel(panel = "Categorization");

		for (var tagName : list ${tagNameList}) {
			Type.typeNotVisibleNoMouseOverNoError(
				locator1 = "AssetCategorization#TAGS_FIELD",
				value1 = ${tagName});

			if (IsElementPresent(key_tagName = ${tagName}, locator1 = "AssetCategorization#TAG_AUTOCOMPLETE_SPECIFIC")) {
				Click.mouseDownMouseUp(
					key_tagName = ${tagName},
					locator1 = "AssetCategorization#TAG_AUTOCOMPLETE_SPECIFIC");
			}
			else {
				KeyPress(
					locator1 = "AssetCategorization#TAGS_FIELD",
					value1 = ",");
			}

			AssertTextEquals(
				key_tagName = ${tagName},
				locator1 = "AssetCategorization#TAG",
				value1 = ${tagName});
		}

		PortletEntry.publish();

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro addWithWorkflow(webContentTitle = null, webContentContent = null, selectStructureName = null) {
		WebContentDisplayPortletNavigator.gotoAdd(structureName = ${selectStructureName});

		WebContent.addCP(
			webContentContent = ${webContentContent},
			webContentTitle = ${webContentTitle});

		Button.click(button = "Submit for Workflow");

		WaitForElementPresent(locator1 = "Message#ERROR_3");

		AssertTextEquals(
			locator1 = "Message#ERROR_3",
			value1 = "${webContentTitle} is not approved.");
	}

	@summary = "Default summary"
	macro configureScope(scopeSelection = null, portletName = null) {
		Portlet.gotoPortletOptions(
			portletName = ${portletName},
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Navigator.gotoNavItem(navItem = "Scope");

		Select(
			locator1 = "Select#SCOPE",
			value1 = "regexp:.*${scopeSelection}.*");

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro configureSetup(userToolNameList = null, metadataNameList = null, enableViewCountIncrement = null) {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(userToolNameList)) {
			for (var userToolName : list ${userToolNameList}) {
				Check.checkToggleSwitch(
					key_fieldName = ${userToolName},
					locator1 = "Portlet#CONFIGURATION_CHECKBOX");
			}
		}

		if (isSet(metadataNameList)) {
			for (var metadataName : list ${metadataNameList}) {
				Check.checkToggleSwitch(
					key_fieldName = ${metadataName},
					locator1 = "Portlet#CONFIGURATION_CHECKBOX");
			}
		}

		if (${enableViewCountIncrement} == "true") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "View Count Increment",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro edit(webContentContentEdit = null, webContentTitleEdit = null, webContentTextSingleLine = null) {
		WebContent.addCP(webContentTitle = ${webContentTitleEdit});

		if (isSet(webContentTextSingleLine)) {
			Type(
				key_fieldFieldLabel = "Text",
				locator1 = "WCEditWebContent#TEXT_INPUT",
				value1 = ${webContentTextSingleLine});
		}
		else {
			CKEditor.addContentInWebContent(
				content = ${webContentContentEdit},
				fieldLabel = "Content");
		}

		PortletEntry.publish();

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro editTemplate(templateScript = null, webContentTitle = null, templateName = null, editTemplateButton = null, structureName = null, webContentContent = null, menuItem = null) {
		if (${editTemplateButton} == "true") {
			WebContentDisplayPortlet.gotoEditTemplate(webContentTitle = ${webContentTitle});
		}
		else {
			WebContentDisplayPortletNavigator.gotoEdit(
				menuItem = ${menuItem},
				webContentTitle = ${webContentTitle});

			Panel.expandPanel(panel = "Default Template");

			AssertTextEquals.assertPartialText(
				locator1 = "WCEditWebContent#SELECTED_STRUCTURE",
				value1 = ${structureName});

			ClickNoError(locator1 = "WCEditWebContent#EDIT_TEMPLATE");

			AssertConfirm(value1 = "Editing the current template deletes all unsaved content.");
		}

		SelectFrameTop();

		Type.clickAtType(
			locator1 = "TextInput#NAME",
			value1 = "Template Edit");

		if (isSet(templateScript)) {
			WebContentTemplates.inputScript(templateScript = ${templateScript});
		}

		Button.clickSave();

		if (${editTemplateButton} == "true") {
			SelectFrame(value1 = "relative=top");
		}
		else {
			Click(locator1 = "Button#CLOSE_IFRAME");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#MODAL_IFRAME");

			Panel.expandPanel(panel = "Default Template");

			AssertTextEquals(
				inputFieldId = "ddmTemplateName",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${templateName});

			WaitForElementPresent(
				key_text = "Publish",
				locator1 = "Button#ANY_ENABLED");

			AssertClick(
				locator1 = "Button#PUBLISH",
				value1 = "Publish");

			SelectFrame(value1 = "relative=top");
		}

		if (isSet(templateScript)) {
			AssertTextEquals(
				index = 1,
				locator1 = "WCD#WEB_CONTENT_CONTENT",
				value1 = ${templateScript});
		}
		else {
			AssertTextEquals(
				index = 1,
				locator1 = "WCD#WEB_CONTENT_CONTENT",
				value1 = ${webContentContent});
		}
	}

	@summary = "Default summary"
	macro gotoEditTemplate(webContentTitle = null) {
		WebContentDisplayPortletNavigator.gotoArticleEllipsisMenu(webContentTitle = ${webContentTitle});

		MenuItem.click(menuItem = "Edit Template");
	}

	@summary = "Default summary"
	macro gotoPermissions(webContentTitle = null) {
		WebContentDisplayPortletNavigator.gotoArticleEllipsisMenu(webContentTitle = ${webContentTitle});

		MenuItem.click(menuItem = "Permissions");
	}

	@summary = "Default summary"
	macro gotoSelectWebContent(depotName = null, portletIndex = null) {
		if (!(isSet(portletName))) {
			var portletName = "Web Content Display";
		}

		Portlet.gotoPortletOptions(
			portletIndex = ${portletIndex},
			portletName = ${portletName},
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (IsElementPresent(key_text = "Change", locator1 = "Button#ANY")) {
			Click(
				key_text = "Change",
				locator1 = "Button#ANY");
		}
		else {
			Click(
				key_text = "Select",
				locator1 = "Button#ANY");
		}

		WaitForElementPresent(
			key_title = "Select Web Content",
			locator1 = "IFrame#MODAL_ANY");

		SelectFrame.selectSecondFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(depotName)) {
			Click(
				key_breadcrumbName = "Sites and Libraries",
				locator1 = "Breadcrumb#BREADCRUMB_ENTRY");

			Click(
				key_groupTab = "Asset Library",
				locator1 = "ItemSelector#NAVIGATION_GROUP_TAB");

			Click(
				key_card = ${depotName},
				locator1 = "Card#CARD_TITLE");
		}
	}

	@summary = "Default summary"
	macro removeWebContent(portletName = null) {
		Portlet.gotoPortletOptions(
			portletName = ${portletName},
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Button.clickRemove();

		AssertElementNotPresent(
			key_text = "Remove",
			locator1 = "Button#ANY");

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro saveConfiguration() {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro searchWebContent(depotName = null, searchTerm = null, errorMessage = null, webContentTitleList = null, webContentTitleNotPresentList = null, portletName = null) {
		WebContentDisplayPortlet.gotoSelectWebContent(
			depotName = ${depotName},
			portletName = ${portletName});

		if (isSet(webContentTitleNotPresentList)) {
			if (isSet(depotName)) {
				for (var webContentTitleNotPresent : list ${webContentTitleNotPresentList}) {
					AssertElementNotPresent(
						key_contentName = ${webContentTitleNotPresent},
						locator1 = "ItemSelector#SELECT_FILE_WEB_CONTENT");
				}

				AssertTextEquals.assertPartialText(
					locator1 = "Message#INFO",
					value1 = ${errorMessage});
			}
			else {
				Search.searchCP(searchTerm = ${searchTerm});

				LexiconEntry.changeDisplayStyle(displayStyle = "list");

				for (var webContentTitleNotPresent : list ${webContentTitleNotPresentList}) {
					AssertElementNotPresent(
						key_listEntry = ${webContentTitleNotPresent},
						locator1 = "LexiconList#LIST_ENTRY_TITLE");
				}
			}
		}
		else {
			Search.searchCP(searchTerm = ${searchTerm});

			LexiconEntry.changeDisplayStyle(displayStyle = "list");

			for (var webContentTitle : list ${webContentTitleList}) {
				AssertVisible(
					key_listEntry = ${webContentTitle},
					locator1 = "LexiconList#LIST_ENTRY_TITLE");
			}
		}
	}

	@summary = "Default summary"
	macro selectWebContent(depotName = null, searchTerm = null, webContentTitle = null, portletIndex = null, portletName = null) {
		WebContentDisplayPortlet.gotoSelectWebContent(
			depotName = ${depotName},
			portletIndex = ${portletIndex},
			portletName = ${portletName});

		if (isSet(depotName)) {
			Click(
				key_rowEntry = ${webContentTitle},
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			AssertVisible(
				key_card = "${webContentTitle} (${depotName})",
				locator1 = "Card#CARD_TITLE");
		}
		else {
			if (isSet(searchTerm)) {
				Search.searchCP(searchTerm = ${searchTerm});
			}

			LexiconEntry.changeDisplayStyle(displayStyle = "list");

			Click(
				key_listEntry = ${webContentTitle},
				locator1 = "LexiconList#LIST_ENTRY_TITLE");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			AssertVisible(
				key_card = ${webContentTitle},
				locator1 = "Card#CARD_TITLE");
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro undoMoveToRecycleBin() {
		AssertClick(
			locator1 = "Link#UNDO",
			value1 = "Undo");
	}

	@summary = "Default summary"
	macro viewAllSettingsEnabled(webContentContentLocalized = null, webContentTitleLocalized = null, relatedAssetTitle = null, locale = null) {
		Click(locator1 = "WCD#WEB_CONTENT_TRANSLATION_DROPDOWN");

		Click(
			key_locale = ${locale},
			locator1 = "WCD#WEB_CONTENT_TRANSLATION_DROPDOWN_MENU_ITEM");

		AssertTextEquals(
			index = 1,
			locator1 = "WCD#WEB_CONTENT_TITLE",
			value1 = ${webContentTitleLocalized});

		AssertTextEquals.assertPartialText(
			index = 1,
			locator1 = "WCD#WEB_CONTENT_CONTENT",
			value1 = ${webContentContentLocalized});

		AssertElementPresent(
			key_text = "print",
			locator1 = "Icon#ANY");

		AssertTextEquals.assertPartialText(
			locator1 = "Button#SUBSCRIBE",
			value1 = "Subscribe");

		AssertTextEquals(
			key_relatedAssetTitle = ${relatedAssetTitle},
			locator1 = "AssetRelatedAssets#ASSET_TITLE",
			value1 = ${relatedAssetTitle});

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "Hello!");

		SelectFrame(value1 = "relative=top");

		AssertClick(
			locator1 = "Button#REPLY",
			value1 = "Reply");

		AssertElementPresent(
			key_ratingResult = "Rate this as good",
			locator1 = "Ratings#THUMB");

		AssertElementPresent(
			key_ratingResult = "Rate this as bad",
			locator1 = "Ratings#THUMB");
	}

	@summary = "Default summary"
	macro viewCannotEditWC(webContentTitle = null) {
		if (IsElementPresent(key_webContentTitle = ${webContentTitle}, locator1 = "WCD#ARTICLE_ELLIPSIS_ICON")) {
			WebContentDisplayPortletNavigator.gotoArticleEllipsisMenu(webContentTitle = ${webContentTitle});

			MenuItem.viewNotPresent(menuItem = "Edit Web Content");
		}
		else {
			AssertElementNotPresent(
				key_webContentTitle = ${webContentTitle},
				locator1 = "WCD#ARTICLE_ELLIPSIS_ICON");
		}
	}

	@summary = "Default summary"
	macro viewConfigureScope(scopeSelection = null) {
		AssertElementPresent(
			key_portletName = "Web Content Display (${scopeSelection})",
			locator1 = "Portlet#TITLE");

		Portlet.gotoPortletOptions(
			portletName = "Web Content Display (${scopeSelection})",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Navigator.gotoNavItem(navItem = "Scope");

		AssertSelectedLabel(
			locator1 = "Select#SCOPE",
			value1 = ${scopeSelection});
	}

	@summary = "Default summary"
	macro viewContent(videoShortcutTitle = null, displayText = null, webContentTitle = null, imageFileName = null, webContentContent = null, audioFileName = null, pageName = null, url = null) {
		if (isSet(audioFileName)) {
			AssertElementPresent(
				key_audioFileName = ${audioFileName},
				key_webContentTitle = ${webContentTitle},
				locator1 = "WCD#WEB_CONTENT_AUDIO");
		}
		else if (isSet(imageFileName)) {
			AssertElementPresent(
				key_imageFileName = ${imageFileName},
				key_webContentTitle = ${webContentTitle},
				locator1 = "WCD#WEB_CONTENT_IMAGE");
		}
		else if (isSet(videoShortcutTitle)) {
			AssertTextEquals(
				index = 1,
				locator1 = "WCD#WEB_CONTENT_TITLE",
				value1 = ${webContentTitle});

			WaitForElementPresent(locator1 = "YoutubePortlet#VIDEO_IFRAME");

			SelectFrame(locator1 = "IFrame#IFRAME");

			AssertElementPresent(
				key_videoShortcutTitle = ${videoShortcutTitle},
				locator1 = "WCD#WEB_CONTENT_VIDEO");

			SelectFrame(value1 = "relative=top");
		}
		else if (isSet(displayText)) {
			WaitForElementPresent(
				key_displayText = ${displayText},
				key_webContentTitle = ${webContentTitle},
				locator1 = "WCD#WEB_CONTENT_LINK");

			Click.clickNoMouseOverNoWaitForVisible(
				key_displayText = ${displayText},
				key_webContentTitle = ${webContentTitle},
				locator1 = "WCD#WEB_CONTENT_LINK");

			if (isSet(pageName)) {
				ControlMenu.viewHeaderTitle(headerTitle = ${pageName});
			}
			else {
				AssertLocation.assertPartialLocation(value1 = ${url});
			}
		}
		else {
			if (!(isSet(index))) {
				var index = 1;
			}

			if (isSet(webContentTitle)) {
				AssertTextEquals(
					index = ${index},
					locator1 = "WCD#WEB_CONTENT_TITLE",
					value1 = ${webContentTitle});
			}

			AssertTextEquals.assertPartialText(
				index = ${index},
				locator1 = "WCD#WEB_CONTENT_CONTENT",
				value1 = ${webContentContent});
		}
	}

	@summary = "Default summary"
	macro viewContentNotVisibleToGuest() {
		AssertTextNotPresent(
			locator1 = "Message#ERROR",
			value1 = "The selected web content no longer exists.");

		AssertElementNotPresent(
			key_portletName = "Web Content Display",
			locator1 = "Portlet#BODY");
	}

	@summary = "Default summary"
	macro viewContentPageBreak(webContentContent = null) {
		Click(
			key_pageNumber = 2,
			locator1 = "Pagination#ANY_PAGE");

		AssertTextEquals.assertPartialText(
			index = 1,
			locator1 = "WCD#WEB_CONTENT_CONTENT",
			value1 = ${webContentContent});

		Click(locator1 = "Pagination#PREVIOUS_LINK");
	}

	@summary = "Default summary"
	macro viewEnabledFileTypes(fileTypeList = null) {
		for (var fileType : list ${fileTypeList}) {
			AssertTextEquals.assertPartialText(
				key_fileType = ${fileType},
				locator1 = "WCD#DOCUMENT_CONVERSION_TYPE",
				value1 = ${fileType});
		}
	}

	@summary = "Default summary"
	macro viewMenuItem(webContentTitle = null, menuItemList = null) {
		WebContentDisplayPortletNavigator.gotoArticleEllipsisMenu(webContentTitle = ${webContentTitle});

		for (var menuItem : list ${menuItemList}) {
			MenuItem.viewPresent(menuItem = ${menuItem});
		}
	}

	@summary = "Default summary"
	macro viewMessage(recycleBinWebContentTitle = null, expiredWebContentTitle = null, draftWebContentTitle = null) {
		if (isSet(recycleBinWebContentTitle)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_3",
				value1 = "The web content article ${recycleBinWebContentTitle} was moved to the Recycle Bin");
		}
		else if (isSet(draftWebContentTitle)) {
			AssertTextEquals(
				locator1 = "Message#ERROR_3",
				value1 = "${draftWebContentTitle} is not approved.");
		}
		else if (isSet(expiredWebContentTitle)) {
			AssertTextEquals(
				locator1 = "Message#ERROR_3",
				value1 = "${expiredWebContentTitle} is expired.");
		}
		else if (isSet(deletedWebContentTitle)) {
			Alert.viewWarningSpecific(warningMessage = "The selected web content no longer exists.");

			Alert.viewWarningSpecific(warningMessage = "Do you want to Select Another web content?");
		}
		else {
			Alert.viewInfoMessageSpecific(infoMessage = "This application is not visible to users yet");

			Alert.viewInfoMessageSpecific(infoMessage = "Select web content to make it visible");
		}
	}

	@summary = "Default summary"
	macro viewRelatedAssets(relatedAssetTitleList = null) {
		for (var relatedAssetTitle : list ${relatedAssetTitleList}) {
			AssertTextEquals(
				key_relatedAssetTitle = ${relatedAssetTitle},
				locator1 = "AssetRelatedAssets#ASSET_TITLE",
				value1 = ${relatedAssetTitle});
		}
	}

	@summary = "Default summary"
	macro viewWorkflow(webContentTitle = null, webContentContent = null) {
		AssertTextEquals(
			locator1 = "Message#ERROR_3",
			value1 = "${webContentTitle} is not approved.");

		AssertClick(
			locator1 = "Message#WARNING_SPECIFIC_LINK_1",
			value1 = "${webContentTitle} is not approved.");

		AssertTextEquals(
			key_status = "Pending",
			locator1 = "WCEditWebContent#WORKFLOW_STATUS",
			value1 = "Pending");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = ${webContentTitle});

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "Content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = ${webContentContent});

		SelectFrameTop();
	}

}