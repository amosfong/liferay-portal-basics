definition {

	@summary = "Default summary"
	macro setClassNameId(contentType = null) {
		Variables.assertDefined(parameterList = ${contentType});

		if (${contentType} == "Order") {
			var value = "com.liferay.commerce.model.CommerceOrder";
		}
		else if (${contentType} == "Product") {
			var value = "com.liferay.commerce.product.model.CPDefinition";
		}
		else if (${contentType} == "Web Content Article") {
			var value = "com.liferay.journal.model.JournalArticle";
		}
		else if (${contentType} == "Document") {
			var value = "com.liferay.portal.kernel.repository.model.FileEntry";
		}
		else if (${contentType} == "Blogs Entry") {
			var value = "com.liferay.blogs.model.BlogsEntry";
		}
		else if (${contentType} == "Category") {
			var value = "com.liferay.asset.kernel.model.AssetCategory";
		}
		else if (${contentType} == "Knowledge Base Article") {
			var value = "com.liferay.knowledge.base.model.KBArticle";
		}
		else {
			fail("'value' is either invalid or not yet set.");
		}

		var classNameId = JSONClassname._getClassNameId(value = ${value});

		return ${classNameId};
	}

	@summary = "Default summary"
	macro setClassTypeId(structureName = null, groupId = null, classNameId = null) {
		Variables.assertDefined(parameterList = "${classNameId},${groupId},${structureName}");

		var classTypeId = JSONDDMstructureAPI._getStructureId(
			classNameId = ${classNameId},
			groupId = ${groupId},
			structureName = ${structureName});

		return ${classTypeId};
	}

	@summary = "Default summary"
	macro setDescriptionMap(description = null) {
		if (isSet(description)) {
			var descriptionMap = '''{"en_US":"${description}"}''';
		}
		else {
			var descriptionMap = "{}";
		}

		return ${descriptionMap};
	}

	@summary = "Default summary"
	macro setDisplayPageTemplatePlid(displayPageTemplateEntryName = null, groupId = null) {
		Variables.assertDefined(parameterList = "${groupId},${displayPageTemplateEntryName}");

		var displayPageTemplatePlid = JSONLayoutpagetemplateAPI._getDisplayPageTemplatePlidByName(
			displayPageTemplateEntryName = ${displayPageTemplateEntryName},
			groupId = ${groupId});

		return ${displayPageTemplatePlid};
	}

	@summary = "Default summary"
	macro setGroupId(grandParentGroupName = null, parentGroupName = null, groupKey = null) {
		Variables.assertDefined(parameterList = ${groupKey});

		if (!(isSet(site))) {
			var site = "true";
		}

		var groupId = JSONGroupAPI._getGroupIdByGroupKey(
			grandParentGroupName = ${grandParentGroupName},
			groupKey = ${groupKey},
			parentGroupName = ${parentGroupName},
			site = ${site});

		return ${groupId};
	}

	@summary = "Default summary"
	macro setGroupIdByName(groupName = null) {
		Variables.assertDefined(parameterList = ${groupName});

		if (!(isSet(site))) {
			var site = "true";
		}

		var groupId = JSONGroupAPI._getGroupIdByName(
			groupName = ${groupName},
			site = ${site});

		return ${groupId};
	}

	@summary = "Default summary"
	macro setLayoutPageTemplateCollectionId(layoutPageTemplateType = null, layoutPageTemplateCollectionName = null, groupId = null) {
		Variables.assertDefined(parameterList = "${groupId},${layoutPageTemplateCollectionName}");

		if (${layoutPageTemplateType} == "Display Page Template") {
			var type = 1;
		}
		else {
			var type = 0;
		}

		var layoutPageTemplateCollectionId = JSONLayoutpagetemplateAPI._getLayoutPageTemplateCollectionIdByName(
			groupId = ${groupId},
			layoutPageTemplateCollectionName = ${layoutPageTemplateCollectionName},
			type = ${type});

		return ${layoutPageTemplateCollectionId};
	}

	@summary = "Default summary"
	macro setLayoutPageTemplateEntryId(groupId = null, layoutPageTemplateEntryName = null) {
		Variables.assertDefined(parameterList = "${groupId},${layoutPageTemplateEntryName},${type}");

		if (${type} == "Content Page Template") {
			var type = 0;
		}
		else if (${type} == "Display Page Template") {
			var type = 1;
		}
		else if (${type} == "Master Page Template") {
			var type = 3;
		}
		else if (${type} == "Widget Page Template") {
			var type = 2;
		}

		var layoutPageTemplateEntryId = JSONLayoutpagetemplateAPI._getLayoutPageTemplateEntryIdByName(
			groupId = ${groupId},
			layoutPageTemplateEntryName = ${layoutPageTemplateEntryName},
			type = ${type});

		return ${layoutPageTemplateEntryId};
	}

	@summary = "Default summary"
	macro setMasterLayoutPlid(groupId = null, masterLayoutEntryName = null) {
		Variables.assertDefined(parameterList = "${groupId},${masterLayoutEntryName}");

		var masterLayoutPlid = JSONLayoutpagetemplateAPI._getMasterLayoutPlidByName(
			groupId = ${groupId},
			masterLayoutEntryName = ${masterLayoutEntryName});

		return ${masterLayoutPlid};
	}

	@summary = "Default summary"
	macro setNameMap(name = null) {
		Variables.assertDefined(parameterList = ${name});

		var nameMap = '''{"en_US":"${name}"}''';

		return ${nameMap};
	}

	@summary = "Default summary"
	macro setServiceContext(assetCategoryIds = null, addGuestPermissions = null, assetTagNames = null, workflowAction = null) {
		if (!(isSet(serviceContext))) {
			var serviceContext = JSONServiceContextUtil.setServiceContext(
				addGuestPermissions = ${addGuestPermissions},
				assetCategoryIds = ${assetCategoryIds},
				assetTagNames = ${assetTagNames},
				workflowAction = ${workflowAction});
		}

		return ${serviceContext};
	}

	@summary = "Default summary"
	macro setStatus(statusKey = null) {
		Variables.assertDefined(parameterList = ${statusKey});

		if (${statusKey} == "APPROVED") {
			var status = 0;
		}

		if (${statusKey} == "DRAFT") {
			var status = 2;
		}

		return ${status};
	}

}