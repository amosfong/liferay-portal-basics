definition {

	@summary = "Default summary"
	macro _addAccountRole(name = null, descriptionMap = null, type = null, titleMap = null) {
		Variables.assertDefined(parameterList = "${name},${titleMap},${descriptionMap},${type}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/role/add-role \
				-u ${userLoginInfo} \
				-d externalReferenceCode='' \
				-d className=com.liferay.account.model.AccountRole \
				-d classPK=0 \
				-d name=${name} \
				-d titleMap=${titleMap} \
				-d descriptionMap=${descriptionMap} \
				-d type=${type} \
				-d subtype=
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _addRole(name = null, specificURL = null, descriptionMap = null, type = null, titleMap = null) {
		Variables.assertDefined(parameterList = "${name},${titleMap},${descriptionMap},${type}");

		if (isSet(specificURL)) {
			var portalURL = ${specificURL};
		}
		else {
			var portalURL = JSONCompany.getPortalURL();
		}

		var userLoginInfo = JSONUtil2.formatJSONUser(domain = ${specificURL});

		var curl = '''
			${portalURL}/api/jsonws/role/add-role \
				-u ${userLoginInfo} \
				-d externalReferenceCode='' \
				-d className=com.liferay.portal.kernel.model.Role \
				-d classPK=0 \
				-d name=${name} \
				-d titleMap=${titleMap} \
				-d descriptionMap=${descriptionMap} \
				-d type=${type} \
				-d subtype=
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _assignDepotRoleToUser(roleId = null, groupId = null, userId = null) {
		Variables.assertDefined(parameterList = "${groupId},${roleId},${userId}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/usergrouprole/add-user-group-roles \
				-u ${userLoginInfo} \
				-d userId=${userId} \
				-d groupId=${groupId} \
				-d roleIds=[${roleId}]
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _assignRoleToGroup(roleId = null, groupId = null) {
		Variables.assertDefined(parameterList = "${groupId},${roleId}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/add-role-groups \
				-u ${userLoginInfo} \
				-d roleId=${roleId} \
				-d groupIds=${groupId}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _assignRoleToUser(roleId = null, userId = null) {
		Variables.assertDefined(parameterList = "${roleId},${userId}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/user/add-role-users \
				-u ${userLoginInfo} \
				-d roleId=${roleId} \
				-d userIds=${userId}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _assignSiteRoleToUser(roleId = null, groupId = null, userId = null) {
		Variables.assertDefined(parameterList = "${groupId},${roleId},${userId}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/usergrouprole/add-user-group-roles \
				-u ${userLoginInfo} \
				-d userId=${userId} \
				-d groupId=${groupId} \
				-d roleIds=[${roleId}]
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _deleteRoleById(roleId = null) {
		Variables.assertDefined(parameterList = ${roleId});

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/role/delete-role \
				-u ${userLoginInfo} \
				-d roleId=${roleId}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _getRoleIdByName(name = null, specificURL = null) {
		Variables.assertDefined(parameterList = ${name});

		if (isSet(specificURL)) {
			var portalURL = ${specificURL};
			var portalInstanceName = JSONCompany.parsePortalInstanceURL(portalURL = ${specificURL});
		}
		else {
			var portalURL = JSONCompany.getPortalURL();
		}

		var companyId = JSONCompany.getCompanyIdNoSelenium(portalInstanceName = ${portalInstanceName});
		var userLoginInfo = JSONUtil2.formatJSONUser(domain = ${specificURL});

		var curl = '''
			${portalURL}/api/jsonws/role/get-role \
				-u ${userLoginInfo} \
				-d companyId=${companyId} \
				-d name=${name}
		''';

		var roleId = JSONCurlUtil.post(${curl}, "$['roleId']");

		return ${roleId};
	}

	@summary = "Default summary"
	macro _searchRolesIds(roleName = null) {
		Variables.assertDefined(parameterList = ${roleName});

		var companyId = JSONCompany.getCompanyId();
		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/role/search \
				-u ${userLoginInfo} \
				-d companyId=${companyId} \
				-d keywords=${roleName} \
				-d types= \
				-d -params= \
				-d "start=-1" \
				-d "end=-1"
				-d -orderByComparator=
		''';

		var rolesIds = JSONCurlUtil.post(${curl}, "$..['roleId']");

		return ${rolesIds};
	}

}