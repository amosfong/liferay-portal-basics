definition {

	@summary = "Default summary"
	macro _assignGroupRoleToUser(roleId = null, groupId = null, userId = null) {
		Variables.assertDefined(parameterList = "${groupId},${roleId},${userId}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/usergrouprole/add-user-group-roles \
				-u ${userLoginInfo} \
				-d roleId=${roleId} \
				-d groupId=${groupId} \
				-d userIds=${userId}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _assignGroupRoleToUserGroup(userGroupId = null, roleId = null, groupId = null) {
		Variables.assertDefined(parameterList = "${groupId},${roleId},${userGroupId}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/usergroupgrouprole/add-user-group-group-roles \
				-u ${userLoginInfo} \
				-d roleId=${roleId} \
				-d groupId=${groupId} \
				-d userGroupIds=${userGroupId}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _assignOrganizationToGroup(organizationId = null, groupId = null) {
		Variables.assertDefined(parameterList = "${groupId},${organizationId}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/user/add-group-organizations \
				-u ${userLoginInfo} \
				-d groupId=${groupId} \
				-d organizationIds=${organizationId}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _assignUserGroupToGroup(userGroupId = null, groupId = null) {
		Variables.assertDefined(parameterList = "${groupId},${userGroupId}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/usergroup/add-group-user-groups/group-id/${groupId}/user-group-ids/${userGroupId} \
				-u ${userLoginInfo}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _assignUserToGroup(groupId = null, userId = null) {
		Variables.assertDefined(parameterList = "${groupId},${userId}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/user/add-group-users \
				-u ${userLoginInfo} \
				-d groupId=${groupId} \
				-d userIds=${userId}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _deleteGroup(groupId = null) {
		Variables.assertDefined(parameterList = ${groupId});

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/delete-group \
				-u ${userLoginInfo} \
				-d groupId=${groupId}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _getDepotEntryGroupRelIdByGroupName(groupName = null, site = null) {
		Variables.assertDefined(parameterList = ${groupName});

		var companyId = JSONCompany.getCompanyId();
		var portalURL = JSONCompany.getPortalURL();
		var groupId = JSONGroupAPI._getGroupIdByName(
			groupName = ${groupName},
			site = ${site});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/depot.depotentrygrouprel/get-depot-entry-group-rels \
				-u ${userLoginInfo} \
				-d groupId=${groupId} \
				-d "start=-1" \
				-d "end=-1"
		''';

		var depotEntryGroupRelId = JSONCurlUtil.post(${curl}, "$.[?(@['groupId'] == '${groupId}')]['depotEntryGroupRelId']");

		if (${depotEntryGroupRelId} == "") {
			fail("FAIL. Cannot find group.");
		}

		return ${depotEntryGroupRelId};
	}

	@summary = "Default summary"
	macro _getDepotIdByName(noSelenium = null, depotName = null) {
		Variables.assertDefined(parameterList = ${depotName});

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		if (${noSelenium} == "true") {
			var companyId = JSONCompany.getCompanyIdNoSelenium(portalURL = ${portalURL});
		}
		else {
			var companyId = JSONCompany.getCompanyId(portalURL = ${portalURL});
		}

		if (!(isSet(defaultLocale))) {
			var defaultLocale = "en_US";
		}
		else {
			var defaultLocale = ${defaultLocale};
		}

		var locale = '''default-locale=\"${defaultLocale}\"''';
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups/company-id/${companyId}/parent-group-id/0/site/false \
				-u ${userLoginInfo}
		''';

		var depotId = JSONCurlUtil.get(${curl}, "$.[?(@['nameCurrentValue'] == '${depotName}' && @['name'] contains '${locale}')]['classPK']");

		if (${depotId} == "") {
			fail("FAIL. Cannot find group.");
		}

		return ${depotId};
	}

	@summary = "Default summary"
	macro _getGrandParentGroupIdByName(groupName = null) {
		Variables.assertDefined(parameterList = ${groupName});

		var companyId = JSONCompany.getCompanyId();
		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(site))) {
			var site = "true";
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups \
				-u ${userLoginInfo} \
				-d companyId=${companyId} \
				-d parentGroupId=0 \
				-d site=${site}
		''';

		var groupId = JSONCurlUtil.post(${curl}, "$.[?(@['nameCurrentValue'] == '${groupName}')]['groupId']");

		if (${groupId} == "") {
			fail("FAIL. Cannot find group.");
		}

		return ${groupId};
	}

	@summary = "Default summary"
	macro _getGroupIdByGroupKey(site = null, grandParentGroupName = null, parentGroupName = null, groupKey = null) {
		Variables.assertDefined(parameterList = "${groupKey},${site}");

		var companyId = JSONCompany.getCompanyId();
		var parentGroupId = JSONGroupSetter.setParentGroupId(
			grandParentGroupName = ${grandParentGroupName},
			parentGroupName = ${parentGroupName});
		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups/company-id/${companyId}/parent-group-id/${parentGroupId}/site/${site} \
				-u ${userLoginInfo}
		''';

		var groupId = JSONCurlUtil.get(${curl}, "$.[?(@['groupKey'] == '${groupKey}')]['groupId']");

		if (${groupId} == "") {
			fail("FAIL. Cannot find group.");
		}

		return ${groupId};
	}

	@summary = "Default summary"
	macro _getGroupIdByName(groupName = null, site = null, grandParentGroupName = null, specificURL = null, parentGroupName = null) {
		Variables.assertDefined(parameterList = "${groupName},${site}");

		if (isSet(specificURL)) {
			var portalURL = ${specificURL};
			var portalInstanceName = JSONCompany.parsePortalInstanceURL(portalURL = ${specificURL});
		}
		else if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		if (isSet(noSelenium)) {
			var companyId = JSONCompany.getCompanyIdNoSelenium(
				portalInstanceName = ${portalInstanceName},
				portalURL = ${portalURL},
				specificURL = ${specificURL});
		}
		else {
			var companyId = JSONCompany.getCompanyId(
				portalInstanceName = ${portalInstanceName},
				portalURL = ${portalURL});
		}

		var parentGroupId = JSONGroupSetter.setParentGroupId(
			grandParentGroupName = ${grandParentGroupName},
			parentGroupName = ${parentGroupName},
			portalInstanceName = ${portalInstanceName},
			portalURL = ${portalURL});
		var userLoginInfo = JSONUtil2.formatJSONUser(domain = ${specificURL});

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups/company-id/${companyId}/parent-group-id/${parentGroupId}/site/${site} \
				-u ${userLoginInfo}
		''';

		var groupId = JSONCurlUtil.get(${curl}, "$.[?(@['nameCurrentValue'] == '${groupName}')]['groupId']");

		if (${groupId} == "") {
			fail("FAIL. Cannot find group.");
		}

		echo("## * GroupId: ${groupId}");

		return ${groupId};
	}

	@summary = "Default summary"
	macro _getGroupIdByNameNoError(groupName = null, site = null, grandParentGroupName = null, parentGroupName = null) {
		Variables.assertDefined(parameterList = "${groupName},${site}");

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		var companyId = JSONCompany.getCompanyId(portalURL = ${portalURL});
		var parentGroupId = JSONGroupSetter.setParentGroupId(
			grandParentGroupName = ${grandParentGroupName},
			parentGroupName = ${parentGroupName});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups/company-id/${companyId}/parent-group-id/${parentGroupId}/site/${site} \
				-u ${userLoginInfo}
		''';

		var groupId = JSONCurlUtil.get(${curl}, "$.[?(@['nameCurrentValue'] == '${groupName}')]['groupId']");

		return ${groupId};
	}

	@summary = "Default summary"
	macro _getGroupIdByNameNoSelenium(groupName = null, site = null, grandParentGroupName = null, parentGroupName = null) {
		Variables.assertDefined(parameterList = "${groupName},${site}");

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		var companyId = JSONCompany.getCompanyIdNoSelenium(portalURL = ${portalURL});
		var parentGroupId = JSONGroupSetter.setParentGroupId(
			grandParentGroupName = ${grandParentGroupName},
			parentGroupName = ${parentGroupName});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups/company-id/${companyId}/parent-group-id/${parentGroupId}/site/${site} \
				-u ${userLoginInfo}
		''';

		var groupId = JSONCurlUtil.get(${curl}, "$.[?(@['nameCurrentValue'] == '${groupName}')]['groupId']");

		if (${groupId} == "") {
			fail("FAIL. Cannot find group.");
		}

		echo("## * GroupId: ${groupId}");

		return ${groupId};
	}

	@summary = "Default summary"
	macro _getGroupIdByNameViaOtherUser(grandParentGroupName = null, parentGroupName = null, groupName = null, site = null, portalInstanceName = null) {
		Variables.assertDefined(parameterList = "${groupName},${site}");

		if (isSet(portalInstanceName)) {
			if (!(isSet(port))) {
				var port = 8080;
			}

			var portalURL = "http://${portalInstanceName}:${port}";
		}
		else {
			var portalURL = JSONCompany.getPortalURL();
		}

		if (!(isSet(creatorEmailAddress))) {
			var creatorEmailAddress = "test@liferay.com";
		}

		if (!(isSet(creatorPassword))) {
			var creatorPassword = PropsUtil.get("default.admin.password");
		}

		var companyId = JSONCompany.getCompanyId(
			creatorEmailAddress = ${creatorEmailAddress},
			creatorPassword = ${creatorPassword},
			portalInstanceName = ${portalInstanceName},
			portalURL = ${portalURL});
		var parentGroupId = JSONGroupSetter.setParentGroupId(
			grandParentGroupName = ${grandParentGroupName},
			parentGroupName = ${parentGroupName},
			portalInstanceName = ${portalInstanceName},
			portalURL = ${portalURL});

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups/company-id/${companyId}/parent-group-id/${parentGroupId}/site/${site} \
				-u ${creatorEmailAddress}:${creatorPassword}
		''';

		var groupId = JSONCurlUtil.get(${curl}, "$.[?(@['nameCurrentValue'] == '${groupName}')]['groupId']");

		if (${groupId} == "") {
			fail("FAIL. Cannot find group.");
		}

		echo("## * GroupId: ${groupId}");

		return ${groupId};
	}

	@summary = "Default summary"
	macro _getGroupKeyByName(groupName = null, site = null, grandParentGroupName = null, parentGroupName = null) {
		Variables.assertDefined(parameterList = "${groupName},${site}");

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		var companyId = JSONCompany.getCompanyId(portalURL = ${portalURL});
		var parentGroupId = JSONGroupSetter.setParentGroupId(
			grandParentGroupName = ${grandParentGroupName},
			parentGroupName = ${parentGroupName});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups/company-id/${companyId}/parent-group-id/${parentGroupId}/site/${site} \
				-u ${userLoginInfo}
		''';

		var groupKey = JSONCurlUtil.get(${curl}, "$.[?(@['nameCurrentValue'] == '${groupName}')]['groupKey']");

		if (${groupKey} == "") {
			fail("FAIL. Cannot find group.");
		}

		echo("## * GroupKey: ${groupKey}");

		return ${groupKey};
	}

	@summary = "Default summary"
	macro _getGroupName(groupNam = null, groupId = null) {
		Variables.assertDefined(parameterList = ${groupId});

		var companyId = JSONCompany.getCompanyId();
		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/get-group/group-id/${groupId} \
				-u ${userLoginInfo}
		''';

		var groupName = JSONCurlUtil.get(${curl}, "$['nameCurrentValue']");

		return ${groupNam};
	}

	@summary = "Default summary"
	macro _getNameCurrentValues() {
		var companyId = JSONCompany.getCompanyId();
		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(site))) {
			var site = "true";
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups \
				-u ${userLoginInfo} \
				-d companyId=${companyId} \
				-d parentGroupId=0 \
				-d site=${site}
		''';

		var nameCurrentValues = JSONCurlUtil.post(${curl}, "$..nameCurrentValue");

		return ${nameCurrentValues};
	}

	@summary = "Default summary"
	macro _getParentGroupIdByName(groupName = null, portalInstanceName = null, grandParentGroupName = null) {
		Variables.assertDefined(parameterList = ${groupName});

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		var companyId = JSONCompany.getCompanyId(
			portalInstanceName = ${portalInstanceName},
			portalURL = ${portalURL});
		var grandParentGroupId = JSONGroupSetter.setGrandParentGroupId(
			grandParentGroupName = ${grandParentGroupName},
			portalInstanceName = ${portalInstanceName},
			portalURL = ${portalURL});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups/company-id/${companyId}/parent-group-id/${grandParentGroupId}/site/true \
				-u ${userLoginInfo}
		''';

		var groupId = JSONCurlUtil.get(${curl}, "$.[?(@['nameCurrentValue'] == '${groupName}')]['groupId']");

		if (${groupId} == "") {
			fail("FAIL. Cannot find group.");
		}

		return ${groupId};
	}

	@summary = "Default summary"
	macro _getSiteIdByGroupKey(groupName = null) {
		Variables.assertDefined(parameterList = ${groupName});

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		var companyId = JSONCompany.getCompanyId(portalURL = ${portalURL});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/get-group \
				-u ${userLoginInfo} \
				-d companyId=${companyId} \
				-d groupKey=${groupName}
		''';

		var groupId = JSONCurlUtil.post(${curl}, "$.[?(@['groupKey'] == '${groupName}')]['groupId']");

		if (${groupId} == "") {
			fail("FAIL. Cannot find group.");
		}

		return ${groupId};
	}

	@summary = "Default summary"
	macro _getSiteIdByGroupKeyNoSelenium(groupName = null, token = null) {
		Variables.assertDefined(parameterList = ${groupName});

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		var companyId = JSONCompany.getCompanyIdNoSelenium(
			portalURL = ${portalURL},
			token = ${token});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		if (${groupName} == "Global") {
			var groupName = ${companyId};
		}

		var curl = '''
			${portalURL}/api/jsonws/group/get-group \
				-u ${userLoginInfo} \
				-d companyId=${companyId} \
				-d groupKey=${groupName}
		''';

		if (isSet(token)) {
			var curl = StringUtil.add(${curl}, " -H 'Authorization: Bearer ${token}'", "");
		}

		var groupId = JSONCurlUtil.post(${curl}, "$.[?(@['groupKey'] == '${groupName}')]['groupId']");

		if (${groupId} == "") {
			fail("FAIL. Cannot find group.");
		}

		return ${groupId};
	}

}