definition {

	@summary = "Default summary"
	macro _addAssetCategoryIds(assetCategoryIds = null) {
		Variables.assertDefined(parameterList = "${json},${assetCategoryIds}");

		var json = JSONUtil2._addJSONArray(
			json = ${json},
			key = "assetCategoryIds");

		var json = JSONUtil2._addJSONArrayValues(
			json = ${json},
			key = "assetCategoryIds",
			values = ${assetCategoryIds});

		return ${json};
	}

	@summary = "Default summary"
	macro _addAssetTagNames(assetTagNames = null) {
		Variables.assertDefined(parameterList = "${json},${assetTagNames}");

		var json = JSONUtil2._addJSONArray(
			json = ${json},
			key = "assetTagNames");

		var json = JSONUtil2._addJSONArrayValues(
			json = ${json},
			key = "assetTagNames",
			values = ${assetTagNames});

		return ${json};
	}

	@summary = "Default summary"
	macro _addAttributes(attributes = null) {
		Variables.assertDefined(parameterList = "${json},${attributes}");

		var json = JSONUtil2._addJSONObject(
			json = ${json},
			key = "attributes",
			value = ${attributes});

		return ${json};
	}

	@summary = "Default summary"
	macro _addGroupId(groupName = null) {
		Variables.assertDefined(parameterList = "${groupName},${json}");

		if (!(isSet(site))) {
			var site = "true";
		}

		var groupId = JSONGroupAPI._getGroupIdByName(
			groupName = ${groupName},
			site = ${site});

		var json = JSONUtil2._addJSONObject(
			json = ${json},
			key = "scopeGroupId",
			value = ${groupId});

		return ${json};
	}

	@summary = "Default summary"
	macro _addGroupPermissions(addGroupPermissions = null) {
		Variables.assertDefined(parameterList = "${json},${addGroupPermissions}");

		if (!((${addGroupPermissions} == "true") || (${addGroupPermissions} == "false"))) {
			fail("Invalid addGroupPermissions: '${addGroupPermissions}' specified. Allowed values are 'true' or 'false'.");
		}

		var json = JSONUtil2._addJSONObject(
			json = ${json},
			key = "addGroupPermissions",
			value = ${addGroupPermissions});

		return ${json};
	}

	@summary = "Default summary"
	macro _addGuestPermissions(addGuestPermissions = null) {
		Variables.assertDefined(parameterList = "${json},${addGuestPermissions}");

		if (!((${addGuestPermissions} == "true") || (${addGuestPermissions} == "false"))) {
			fail("Invalid addGuestPermissions: '${addGuestPermissions}' specified. Allowed values are 'true' or 'false'.");
		}

		var json = JSONUtil2._addJSONObject(
			json = ${json},
			key = "addGuestPermissions",
			value = ${addGuestPermissions});

		return ${json};
	}

	@summary = "Default summary"
	macro _addWorkflowAction(workflowAction = null) {
		Variables.assertDefined(parameterList = "${json},${workflowAction}");

		if (${workflowAction} == "DRAFT") {
			var workflowActionNumber = 2;
		}
		else if (${workflowAction} == "PUBLISH") {
			var workflowActionNumber = 1;
		}
		else {
			fail("Invalid workflowAction: '${workflowAction}' specified. Allowed values are 'DRAFT' or 'PUBLISH'.");
		}

		var json = JSONUtil2._addJSONObject(
			json = ${json},
			key = "workflowAction",
			value = ${workflowActionNumber});

		return ${json};
	}

	@summary = "Default summary"
	macro setServiceContext(groupName = null, site = null, assetCategoryIds = null, addGroupPermissions = null, addGuestPermissions = null, assetTagNames = null, attributes = null, workflowAction = null) {
		var serviceContext = "{}";

		if (isSet(assetCategoryIds)) {
			var serviceContext = JSONServiceContextUtil._addAssetCategoryIds(
				assetCategoryIds = ${assetCategoryIds},
				json = ${serviceContext});
		}

		if (isSet(assetTagNames)) {
			var serviceContext = JSONServiceContextUtil._addAssetTagNames(
				assetTagNames = ${assetTagNames},
				json = ${serviceContext});
		}

		if (isSet(addGroupPermissions)) {
			var serviceContext = JSONServiceContextUtil._addGroupPermissions(
				addGroupPermissions = ${addGroupPermissions},
				json = ${serviceContext});
		}

		if (isSet(addGuestPermissions)) {
			var serviceContext = JSONServiceContextUtil._addGuestPermissions(
				addGuestPermissions = ${addGuestPermissions},
				json = ${serviceContext});
		}

		if (isSet(attributes)) {
			var serviceContext = JSONServiceContextUtil._addAttributes(
				attributes = ${attributes},
				json = ${serviceContext});
		}

		if (isSet(groupName)) {
			var serviceContext = JSONServiceContextUtil._addGroupId(
				groupName = ${groupName},
				json = ${serviceContext},
				site = ${site});
		}

		if (isSet(workflowAction)) {
			var serviceContext = JSONServiceContextUtil._addWorkflowAction(
				json = ${serviceContext},
				workflowAction = ${workflowAction});
		}

		return ${serviceContext};
	}

}