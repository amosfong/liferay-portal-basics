definition {

	@summary = "Default summary"
	macro _addJSONArray(key = null) {
		if (!(isSet(json)) || !(isSet(key))) {
			fail("Error, 'JSON' and 'key' must all be set");
		}

		// Check if object already exists

		var bool = JSONUtil2._isJSONArrayPresent(
			json = ${json},
			key = ${key});

		if (${bool} == "TRUE") {
			echo("JSON array  ${key}' already added, returning original JSON");
		}
		else {
			if (${json} == "{}") {
				var json = '''{"${key}" : []}''';
			}
			else {
				var json = StringUtil.regexReplaceFirst(${json}, "(.*)\}", "$1, \"${key}\": []}");
			}
		}

		return ${json};
	}

	@summary = "Default summary"
	macro _addJSONArrayValues(values = null, key = null) {
		if (!(isSet(json)) || !(isSet(key)) || !(isSet(values))) {
			fail("Error, 'JSON', 'key', and 'values' must all be set");
		}

		var bool = JSONUtil2._isJSONArrayPresent(
			json = ${json},
			key = ${key});

		if (${bool} == "FALSE") {
			fail("Error, '${key}' does not exist in the JSON");
		}

		for (var value : list ${values}) {
			var temp = RegexUtil.replace(${json}, "\"${key}\"\s*:\s*(\[.*?\])", 1);

			if (contains("\"${temp}\"", "\"${value}\"")) {
				fail("'${value}' already exists inside 'JSON'");
			}

			if (${temp} == "[]") {

				// If empty no need to add comma

				var json = StringUtil.regexReplaceFirst(${json}, "(\"${key}\"\s*:\s*)\[\]", "$1[\"${value}\"]");
			}
			else {
				var json = StringUtil.regexReplaceFirst(${json}, "(\"${key}\"\s*:\s*)(\[.*?)\]", "$1$2, \"${value}\"]");
			}
		}

		return ${json};
	}

	@summary = "Default summary"
	macro _addJSONObject(value = null, key = null) {
		if (!(isSet(json)) || !(isSet(key)) || !(isSet(value))) {
			fail("Error, 'JSON', 'key', and 'value' must all be set");
		}

		var bool = JSONUtil2._isJSONObjectPresent(
			json = ${json},
			key = ${key});

		if (${bool} == "TRUE") {
			fail("Error, '${key}' already exists in the JSON");
		}

		if (${json} == "{}") {
			var json = '''{"${key}" : ${value}}''';
		}
		else {
			var json = StringUtil.regexReplaceFirst(${json}, "(.*)\}", "$1, \"${key}\": ${value}}");
		}

		return ${json};
	}

	@summary = "Default summary"
	macro _convertLocalizedListToMap(listMap = null) {

		// Create list using '${listMap'

		var localizedMap = "{";

		for (var i : list ${listMap}) {
			var locale = StringUtil.extractFirst(${i}, ":");
			var translated = StringUtil.extractLast(${i}, ":");

			var localizedMap = '''${localizedMap}"${locale}":"${translated}",''';
		}

		// Replace last comma with }

		var localizedMap = RegexUtil.replace(${localizedMap}, "(.*)(?=,)", 1);

		var localizedMap = "${localizedMap}}";

		return ${localizedMap};
	}

	@summary = "Default summary"
	macro _exclusiveOrCheck(failMessage = null) {
		if ((isSet(a) && isSet(b)) || (!(isSet(b)) && !(isSet(a)))) {
			fail(${failMessage});
		}
	}

	@summary = "Default summary"
	macro _isJSONArrayPresent(json = null, key = null) {
		var temp = RegexUtil.replace(${json}, "\"(${key})\"\s*:\s*\[.*?\]", 1);

		if (${temp} == ${key}) {
			return "TRUE";
		}
		else {
			return "FALSE";
		}
	}

	@summary = "Default summary"
	macro _isJSONObjectPresent(json = null, key = null) {
		var temp = RegexUtil.replace(${json}, "\"(${key})\"\s*:\s*", 1);

		if (${temp} == ${key}) {
			return "TRUE";
		}
		else {
			return "FALSE";
		}
	}

	@summary = "Default summary"
	macro formatJSONAdminUser() {
		var adminUserEmail = JSONUtil2.getAdminUserEmail();
		var adminUserPassword = JSONUtil2.getAdminUserPassword();

		return "${adminUserEmail}:${adminUserPassword}";
	}

	@summary = "Default summary"
	macro formatJSONSuperAdminUser() {
		var superAdminUserEmail = JSONUtil2.getSuperAdminUserEmail();
		var superAdminUserPassword = JSONUtil2.getSuperAdminUserPassword();

		return "${superAdminUserEmail}:${superAdminUserPassword}";
	}

	@summary = "Default summary"
	macro formatJSONUser(domain = null) {
		var defaultUserEmail = JSONUtil2.getDefaultUserEmail(domain = ${domain});
		var defaultUserPassword = JSONUtil2.getDefaultUserPassword();

		return "${defaultUserEmail}:${defaultUserPassword}";
	}

	@summary = "Default summary"
	macro getAdminUserEmail() {
		var adminUserEmail = PropsUtil.get("default.admin.email");

		if (!(isSet(adminUserEmail)) || (${adminUserEmail} == "")) {
			var adminUserEmail = "test@liferay.com";
		}

		return ${adminUserEmail};
	}

	@summary = "Default summary"
	macro getAdminUserPassword() {
		var adminUserPassword = PropsUtil.get("default.admin.password");

		if (!(isSet(adminUserPassword)) || (${adminUserPassword} == "")) {
			var adminUserPassword = PropsUtil.get("default.admin.password");
		}

		return ${adminUserPassword};
	}

	@summary = "Default summary"
	macro getDefaultUserEmail(domain = null) {
		if (isSet(domain)) {
			var portalInstanceName = JSONCompany.parsePortalInstanceURL(portalURL = ${domain});

			var customDefaultUserEmail = "test@${portalInstanceName}";
		}
		else {
			var customDefaultUserEmail = PropsUtil.get("custom.default.user.email");
		}

		if (!(isSet(customDefaultUserEmail))) {
			var customDefaultUserEmail = "test@liferay.com";
		}

		return ${customDefaultUserEmail};
	}

	@summary = "Default summary"
	macro getDefaultUserFirstPassword() {
		var customDefaultUserFirstPassword = PropsUtil.get("custom.default.user.first.password");

		if (!(isSet(customDefaultUserFirstPassword))) {
			var customDefaultUserFirstPassword = PropsUtil.get("default.admin.password");
		}

		return ${customDefaultUserFirstPassword};
	}

	@summary = "Default summary"
	macro getDefaultUserPassword() {
		var customDefaultUserPassword = PropsUtil.get("custom.default.user.password");

		if (!(isSet(customDefaultUserPassword))) {
			var customDefaultUserPassword = PropsUtil.get("default.admin.password");
		}

		return ${customDefaultUserPassword};
	}

	@summary = "Default summary"
	macro getLXCEnvironment() {
		var lxcEnvironment = PropsUtil.get("lxc.environment");

		if (!(isSet(lxcEnvironment))) {
			var lxcEnvironment = "false";
		}

		return ${lxcEnvironment};
	}

	@summary = "Default summary"
	macro getSuperAdminUserEmail() {
		var customSuperAdminUserEmail = PropsUtil.get("custom.super.admin.user.email");

		if (!(isSet(customSuperAdminUserEmail))) {
			var customSuperAdminUserEmail = "test@liferay.com";
		}

		return ${customSuperAdminUserEmail};
	}

	@summary = "Default summary"
	macro getSuperAdminUserPassword() {
		var customSuperAdminUserPassword = PropsUtil.get("custom.super.admin.user.password");

		if (!(isSet(customSuperAdminUserPassword))) {
			var customSuperAdminUserPassword = PropsUtil.get("default.admin.password");
		}

		return ${customSuperAdminUserPassword};
	}

}