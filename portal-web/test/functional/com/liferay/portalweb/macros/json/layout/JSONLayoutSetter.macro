definition {

	@summary = "Default summary"
	macro setColumn() {
		if (!(isSet(column))) {
			var column = 1;
		}

		return ${column};
	}

	@summary = "Default summary"
	macro setFriendlyURL() {
		if (!(isSet(friendlyURL))) {
			var friendlyURL = "";
		}

		return ${friendlyURL};
	}

	@summary = "Default summary"
	macro setGroupId(groupName = null, portalURL = null, grandParentGroupName = null, parentGroupName = null) {
		if (!(isSet(site))) {
			var site = "true";
		}

		var groupId = JSONGroupAPI._getGroupIdByName(
			grandParentGroupName = ${grandParentGroupName},
			groupName = ${groupName},
			parentGroupName = ${parentGroupName},
			portalURL = ${portalURL},
			site = ${site});

		return ${groupId};
	}

	@summary = "Default summary"
	macro setLayoutId(groupId = null, privateLayout = null, layoutName = null) {
		Variables.assertDefined(parameterList = "${groupId},${layoutName},${privateLayout}");

		var layoutId = JSONLayoutAPI._getLayoutIdByName(
			groupId = ${groupId},
			layoutName = ${layoutName},
			privateLayout = ${privateLayout});

		return ${layoutId};
	}

	@summary = "Default summary"
	macro setParentLayoutId(parentLayoutName = null, groupId = null) {
		var privateLayout = JSONLayoutSetter.setPrivateLayout(privateLayout = ${privateLayout});

		if (isSet(parentLayoutName)) {
			Variables.assertDefined(parameterList = "${groupId},${parentLayoutName}");

			var parentLayoutId = JSONLayoutAPI._getLayoutIdByName(
				groupId = ${groupId},
				layoutName = ${parentLayoutName},
				privateLayout = ${privateLayout});
		}
		else {
			var parentLayoutId = 0;
		}

		return ${parentLayoutId};
	}

	@summary = "Default summary"
	macro setPrivateLayout() {
		if (!(isSet(privateLayout))) {
			var privateLayout = "false";
		}

		return ${privateLayout};
	}

	@summary = "Default summary"
	macro setServiceContext(assetCategoryIds = null, assetTagNames = null, workflowAction = null) {
		if (!(isSet(serviceContext))) {
			var serviceContext = JSONServiceContextUtil.setServiceContext(
				addGuestPermissions = "true",
				assetCategoryIds = ${assetCategoryIds},
				assetTagNames = ${assetTagNames},
				workflowAction = ${workflowAction});
		}

		return ${serviceContext};
	}

	@summary = "Default summary"
	macro setSite() {
		if (!(isSet(site))) {
			var site = "true";
		}

		return ${site};
	}

	@summary = "Default summary"
	macro setType() {
		if (!(isSet(type))) {
			var type = "portlet";
		}

		return ${type};
	}

	@summary = "Default summary"
	macro setTypeSettings(remoteAppEntryId = null, widgetName = null, groupId = null, column = null, embeddedLayoutURL = null, layoutTemplate = null, privateLayout = null, layoutName = null) {
		Variables.assertDefined(parameterList = "${groupId},${layoutName},${privateLayout}");

		var typeSettings = JSONLayoutAPI._getTypeSettingsByName(
			groupId = ${groupId},
			layoutName = ${layoutName},
			privateLayout = ${privateLayout});

		if (isSet(embeddedLayoutURL)) {
			var typeSettings = JSONLayoutUtil._embeddedLayoutURL(
				embeddedLayoutURL = ${embeddedLayoutURL},
				typeSettings = ${typeSettings});
		}

		if (isSet(layoutTemplate)) {
			var typeSettings = JSONLayoutUtil._updateLayoutTemplateId(
				layoutTemplate = ${layoutTemplate},
				typeSettings = ${typeSettings});
		}

		if (isSet(widgetName)) {
			var typeSettings = JSONLayoutUtil._addWidgetToTypeSettings(
				column = ${column},
				remoteAppEntryId = ${remoteAppEntryId},
				typeSettings = ${typeSettings},
				widgetName = ${widgetName});
		}

		return ${typeSettings};
	}

}