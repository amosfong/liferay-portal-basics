definition {

	@summary = "Default summary"
	macro _addAttachmentToWikiPage(fileName = null, mimeType = null, title = null, nodeId = null) {
		Variables.assertDefined(parameterList = "${nodeId},${title},${mimeType},${fileName}");

		var portalURL = JSONCompany.getPortalURL();
		var baseDir = PropsUtil.get("test.base.dir.name");
		var dependenciesDir = PropsUtil.get("test.dependencies.dir.name");

		var filePath = "${baseDir}${dependenciesDir}/${fileName}";
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/wiki.wikipage/add-page-attachment \
				-u ${userLoginInfo} \
				-F nodeId=${nodeId} \
				-F fileName=${fileName} \
				-F mimeType=${mimeType} \
				-F title=${title} \
				-F file=@${filePath}
		''';

		echo("## Adding a 'File' with the following info using JSONWS:");

		echo("## * Title: ${title}");

		echo("## * File Name: ${fileName}");

		var messageId = JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _addWikiChildPage(parentResourcePrimKey = null, headline = null, content = null) {
		Variables.assertDefined(parameterList = "${parentResourcePrimKey},${headline}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		if (isSet(viewableBy)) {
			var viewableBy = ${viewableBy};
		}
		else {
			var viewableBy = "Anyone";
		}

		if (isSet(encodingFormat)) {
			var encodingFormat = ${encodingFormat};
		}
		else {
			var encodingFormat = "creole";
		}

		if (isSet(tagName)) {
			var tagName = '''"${tagName}"''';
		}
		else {
			var tagName = "";
		}

		if (isSet(assetCategoryIds)) {
			var assetCategoryIds = ${assetCategoryIds};
		}
		else {
			var assetCategoryIds = 0;
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/wiki-pages/${parentResourcePrimKey}/wiki-pages \
				-H 'Content-Type: application/json' \
				-u ${userLoginInfo} \
				-d '{
					"content": "${content}",
					"creator": {},
					"encodingFormat": "${encodingFormat}",
					"headline": "${headline}",
					"keywords": [${tagName}],
					"parentWikiPageId": 0,
					"taxonomyCategoryIds": [${assetCategoryIds}],
					"viewableBy": "${viewableBy}"
				}'
		''';

		var messageId = JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _addWikiNode(name = null, serviceContext = null) {
		Variables.assertDefined(parameterList = ${name});

		var portalURL = JSONCompany.getPortalURL();

		if (isSet(description)) {
			var description = ${description};
		}
		else {
			var description = "";
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/wiki.wikinode/add-node \
				-u ${userLoginInfo} \
				-d name=${name} \
				-d description=${description} \
				-d serviceContext=${serviceContext}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _addWikiPage(nodeId = null, headline = null, content = null) {
		Variables.assertDefined(parameterList = "${nodeId},${headline}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		if (isSet(viewableBy)) {
			var viewableBy = ${viewableBy};
		}
		else {
			var viewableBy = "Anyone";
		}

		if (isSet(encodingFormat)) {
			var encodingFormat = ${encodingFormat};
		}
		else {
			var encodingFormat = "creole";
		}

		if (isSet(tagName)) {
			var tagName = '''"${tagName}"''';
		}
		else {
			var tagName = "";
		}

		if (isSet(assetCategoryIds)) {
			var assetCategoryIds = ${assetCategoryIds};
		}
		else {
			var assetCategoryIds = 0;
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/wiki-nodes/${nodeId}/wiki-pages \
				-H 'Content-Type: application/json' \
				-u ${userLoginInfo} \
				-d '{
					"content": "${content}",
					"creator": {},
					"encodingFormat": "${encodingFormat}",
					"headline": "${headline}",
					"keywords": [${tagName}],
					"taxonomyCategoryIds": [${assetCategoryIds}],
					"viewableBy": "${viewableBy}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl});

		return ${response};
	}

	@summary = "Default summary"
	macro _deleteWikiPageById(wikiPageId = null) {
		Variables.assertDefined(parameterList = ${wikiPageId});

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/wiki-pages/${wikiPageId} \
				-H 'Content-Type: application/json' \
				-u ${userLoginInfo} \
		''';

		var response = JSONCurlUtil.delete(${curl});

		return ${response};
	}

	@summary = "Default summary"
	macro _getNodeIdByName(groupId = null, name = null) {
		Variables.assertDefined(parameterList = "${groupId},${name}");

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/wiki.wikinode/get-nodes/group-id/${groupId} \
				-u ${userLoginInfo}
		''';

		var nodeId = JSONCurlUtil.get(${curl}, "$.[?(@['name'] == '${name}')]['nodeId']");

		if (${nodeId} == "") {
			fail("FAIL. Cannot find node.");
		}

		echo("## * NodeId: ${nodeId}");

		return ${nodeId};
	}

	@summary = "Default summary"
	macro _getPageIdByName(title = null, nodeId = null) {
		Variables.assertDefined(parameterList = "${nodeId},${title}");

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/wiki.wikipage/get-page \
				-u ${userLoginInfo} \
				-d nodeId=${nodeId} \
				-d title=${title}
		''';

		var pageId = JSONCurlUtil.post(${curl}, "$.[?(@['title'] == '${title}')]['pageId']");

		if (${pageId} == "") {
			fail("FAIL. Cannot find wiki page.");
		}

		echo("## * PageId: ${pageId}");

		return ${pageId};
	}

	@summary = "Default summary"
	macro _getPageResourcePrimKey(title = null, nodeId = null) {
		Variables.assertDefined(parameterList = "${nodeId},${title}");

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/wiki.wikipage/get-page \
				-u ${userLoginInfo} \
				-d nodeId=${nodeId} \
				-d title=${title}
		''';

		var resourcePrimKey = JSONCurlUtil.post(${curl}, "$.[?(@['title'] == '${title}')]['resourcePrimKey']");

		if (${resourcePrimKey} == "[]") {
			fail("FAIL. Cannot find wiki page resourcePrimKey.");
		}

		echo("## * resourcePrimKey: ${resourcePrimKey}");

		return ${resourcePrimKey};
	}

	@summary = "Default summary"
	macro _getWikiPageById(wikiPageId = null) {
		Variables.assertDefined(parameterList = ${wikiPageId});

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/wiki-pages/${wikiPageId} \
				-u ${userLoginInfo}
		''';

		var wikiPage = JSONCurlUtil.get(${curl});

		return ${wikiPage};
	}

	@summary = "Default summary"
	macro _movePageToTrash(title = null, nodeId = null) {
		Variables.assertDefined(parameterList = "${title},${nodeId}");

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/wiki.wikipage/move-page-to-trash \
				-u ${userLoginInfo} \
				-d nodeId=${nodeId} \
				-d title=${title}
		''';

		var messageId = JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _updateWikiPage(headline = null, resourcePrimKey = null, content = null) {
		Variables.assertDefined(parameterList = ${resourcePrimKey});

		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		if (isSet(viewableBy)) {
			var viewableBy = ${viewableBy};
		}
		else {
			var viewableBy = "Anyone";
		}

		if (isSet(encodingFormat)) {
			var encodingFormat = ${encodingFormat};
		}
		else {
			var encodingFormat = "creole";
		}

		if (isSet(tagName)) {
			var tagName = '''"${tagName}"''';
		}
		else {
			var tagName = "";
		}

		if (isSet(assetCategoryIds)) {
			var assetCategoryIds = ${assetCategoryIds};
		}
		else {
			var assetCategoryIds = 0;
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/wiki-pages/${resourcePrimKey} \
				-H 'Content-Type: application/json' \
				-u ${userLoginInfo} \
				-d '{
					"content": "${content}",
					"creator": {},
					"encodingFormat": "${encodingFormat}",
					"headline": "${headline}",
					"keywords": [${tagName}],
					"taxonomyCategoryIds": [${assetCategoryIds}],
					"viewableBy": "${viewableBy}",
					"wikiNodeId": 0
				}'
		''';

		var messageId = JSONCurlUtil.put(${curl});
	}

}