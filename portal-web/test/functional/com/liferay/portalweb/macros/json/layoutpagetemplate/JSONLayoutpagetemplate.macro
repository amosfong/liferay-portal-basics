definition {

	@summary = "Default summary"
	macro addDisplayPageTemplateEntry(depotName = null, displayPageTemplateEntryName = null, grandParentGroupName = null, masterLayoutEntryName = null, workflowAction = null, parentGroupName = null, groupName = null, site = null, assetCategoryIds = null, assetTagNames = null, subType = null, contentType = null) {
		Variables.assertDefined(parameterList = "${contentType},${displayPageTemplateEntryName}");

		if (!(isSet(groupId))) {
			var groupId = JSONLayoutpagetemplateSetter.setGroupId(
				grandParentGroupName = ${grandParentGroupName},
				groupKey = ${groupName},
				parentGroupName = ${parentGroupName},
				site = ${site});
		}

		var classNameId = JSONLayoutpagetemplateSetter.setClassNameId(contentType = ${contentType});

		if ((${subType} == "Basic Document") || (${contentType} == "Blogs Entry") || (${contentType} == "Category") || (${contentType} == "Order") || (${contentType} == "Product") || (${contentType} == "Knowledge Base Article")) {
			var classTypeId = 0;
		}
		else {
			if (${subType} == "Basic Web Content") {
				var globalGroupId = JSONGroupAPI._getGroupIdByName(
					groupName = "Global",
					site = "true");

				var classTypeId = JSONLayoutpagetemplateSetter.setClassTypeId(
					classNameId = ${classNameId},
					groupId = ${globalGroupId},
					structureName = ${subType});
			}
			else if (${subType} == "Google Drive Shortcut") {
				var globalGroupId = JSONGroupAPI._getGroupIdByName(
					groupName = "Global",
					site = "true");

				var classTypeId = JSONDLfileentrytype._getFileEntryTypeId(
					fileEntryTypeName = ${subType},
					groupId = ${globalGroupId});
			}
			else {
				if (isSet(depotName)) {
					var depotId = JSONLayoutpagetemplateSetter.setGroupId(
						groupKey = ${depotName},
						site = "false");

					if (isSet(depotStructure)) {
						var classTypeId = JSONLayoutpagetemplateSetter.setClassTypeId(
							classNameId = ${classNameId},
							groupId = ${depotId},
							structureName = ${subType});
					}
					else if (isSet(depotDocumentType)) {
						var classTypeId = JSONDLfileentrytype._getFileEntryTypeId(
							fileEntryTypeName = ${subType},
							groupId = ${depotId});
					}
				}
				else if (isSet(globalStructure)) {
					var globalGroupId = JSONGroupAPI._getGroupIdByName(
						groupName = "Global",
						site = "true");

					var classTypeId = JSONLayoutpagetemplateSetter.setClassTypeId(
						classNameId = ${classNameId},
						groupId = ${globalGroupId},
						structureName = ${subType});
				}
				else if (isSet(globalDocumentType)) {
					var globalGroupId = JSONGroupAPI._getGroupIdByName(
						groupName = "Global",
						site = "true");

					var classTypeId = JSONDLfileentrytype._getFileEntryTypeId(
						fileEntryTypeName = ${subType},
						groupId = ${globalGroupId});
				}
				else {
					var classTypeId = JSONLayoutpagetemplateSetter.setClassTypeId(
						classNameId = ${classNameId},
						groupId = ${groupId},
						structureName = ${subType});
				}
			}
		}

		if (isSet(masterLayoutEntryName)) {
			var masterLayoutPlid = JSONLayoutpagetemplateSetter.setMasterLayoutPlid(
				groupId = ${groupId},
				masterLayoutEntryName = ${masterLayoutEntryName});
		}
		else {
			var masterLayoutPlid = 0;
		}

		if (!(isSet(statusKey))) {
			var statusKey = "DRAFT";
		}

		var status = JSONLayoutpagetemplateSetter.setStatus(statusKey = ${statusKey});
		var serviceContext = JSONLayoutpagetemplateSetter.setServiceContext(
			addGuestPermissions = "true",
			assetCategoryIds = ${assetCategoryIds},
			assetTagNames = ${assetTagNames},
			serviceContext = ${serviceContext},
			workflowAction = ${workflowAction});

		JSONLayoutpagetemplateAPI._addDisplayPageTemplateEntry(
			classNameId = ${classNameId},
			classTypeId = ${classTypeId},
			displayPageTemplateEntryName = ${displayPageTemplateEntryName},
			groupId = ${groupId},
			masterLayoutPlid = ${masterLayoutPlid},
			serviceContext = ${serviceContext},
			status = ${status});
	}

	@summary = "Default summary"
	macro addGlobalPageTemplateEntry(pageTemplateEntryName = null, pageTemplateEntryActive = null, assetCategoryIds = null, pageTemplateEntryDescription = null, assetTagNames = null, workflowAction = null) {
		Variables.assertDefined(parameterList = "${pageTemplateEntryActive},${pageTemplateEntryName}");

		var nameMap = JSONLayoutpagetemplateSetter.setNameMap(name = ${pageTemplateEntryName});
		var descriptionMap = JSONLayoutpagetemplateSetter.setDescriptionMap(description = ${pageTemplateEntryDescription});
		var serviceContext = JSONLayoutpagetemplateSetter.setServiceContext(
			addGuestPermissions = "false",
			assetCategoryIds = ${assetCategoryIds},
			assetTagNames = ${assetTagNames},
			serviceContext = ${serviceContext},
			workflowAction = ${workflowAction});

		JSONLayoutpagetemplateAPI._addGlobalPageTemplateEntry(
			active = ${pageTemplateEntryActive},
			descriptionMap = ${descriptionMap},
			nameMap = ${nameMap},
			serviceContext = ${serviceContext});
	}

	@summary = "Default summary"
	macro addLayoutPageTemplateCollection(layoutPageTemplateType = null, grandParentGroupName = null, workflowAction = null, parentGroupName = null, groupName = null, site = null, assetCategoryIds = null, layoutPageTemplateCollectionName = null, assetTagNames = null) {
		Variables.assertDefined(parameterList = ${layoutPageTemplateCollectionName});

		if (!(isSet(groupId))) {
			var groupId = JSONLayoutpagetemplateSetter.setGroupId(
				grandParentGroupName = ${grandParentGroupName},
				groupKey = ${groupName},
				parentGroupName = ${parentGroupName},
				site = ${site});
		}

		if (isSet(description)) {
			var description = ${description};
		}
		else {
			var description = "";
		}

		if (${layoutPageTemplateType} == "Display Page Template") {
			var type = 1;
		}
		else {
			var type = 0;
		}

		var serviceContext = JSONLayoutpagetemplateSetter.setServiceContext(
			addGuestPermissions = "true",
			assetCategoryIds = ${assetCategoryIds},
			assetTagNames = ${assetTagNames},
			serviceContext = ${serviceContext},
			workflowAction = ${workflowAction});

		JSONLayoutpagetemplateAPI._addLayoutPageTemplateCollection(
			description = ${description},
			groupId = ${groupId},
			layoutPageTemplateCollectionName = ${layoutPageTemplateCollectionName},
			serviceContext = ${serviceContext},
			type = ${type});
	}

	@summary = "Default summary"
	macro addLayoutPageTemplateEntry(layoutPageTemplateType = null, grandParentGroupName = null, masterLayoutEntryName = null, workflowAction = null, parentGroupName = null, groupName = null, site = null, assetCategoryIds = null, layoutPageTemplateCollectionName = null, assetTagNames = null, layoutPageTemplateStatus = null, layoutPageTemplateEntryName = null) {
		Variables.assertDefined(parameterList = "${groupName},${layoutPageTemplateEntryName},${layoutPageTemplateType},${layoutPageTemplateStatus}");

		var groupId = JSONLayoutpagetemplateSetter.setGroupId(
			grandParentGroupName = ${grandParentGroupName},
			groupKey = ${groupName},
			parentGroupName = ${parentGroupName},
			site = ${site});

		if (isSet(layoutPageTemplateCollectionName)) {
			var layoutPageTemplateCollectionId = JSONLayoutpagetemplateSetter.setLayoutPageTemplateCollectionId(
				groupId = ${groupId},
				layoutPageTemplateCollectionName = ${layoutPageTemplateCollectionName},
				layoutPageTemplateType = ${layoutPageTemplateType});
		}
		else {
			var layoutPageTemplateCollectionId = 0;
		}

		if (isSet(masterLayoutEntryName)) {
			var masterLayoutPlid = JSONLayoutpagetemplateSetter.setMasterLayoutPlid(
				groupId = ${groupId},
				masterLayoutEntryName = ${masterLayoutEntryName});
		}
		else {
			var masterLayoutPlid = 0;
		}

		var serviceContext = JSONLayoutpagetemplateSetter.setServiceContext(
			addGuestPermissions = "true",
			assetCategoryIds = ${assetCategoryIds},
			assetTagNames = ${assetTagNames},
			serviceContext = ${serviceContext},
			workflowAction = ${workflowAction});
		var type = JSONLayoutpagetemplateUtil._getType(layoutPageTemplateType = ${layoutPageTemplateType});
		var status = JSONLayoutpagetemplateUtil._getStatus(layoutPageTemplateStatus = ${layoutPageTemplateStatus});

		JSONLayoutpagetemplateAPI._addLayoutPageTemplateEntry(
			groupId = ${groupId},
			layoutPageTemplateCollectionId = ${layoutPageTemplateCollectionId},
			layoutPageTemplateEntryName = ${layoutPageTemplateEntryName},
			masterLayoutPlid = ${masterLayoutPlid},
			serviceContext = ${serviceContext},
			status = ${status},
			type = ${type});
	}

	@summary = "Default summary"
	macro addMasterPageTemplateEntry(groupName = null, site = null, assetCategoryIds = null, grandParentGroupName = null, assetTagNames = null, masterPageTemplateEntryName = null, workflowAction = null, parentGroupName = null) {
		Variables.assertDefined(parameterList = "${groupName},${masterPageTemplateEntryName}");

		var groupId = JSONLayoutpagetemplateSetter.setGroupId(
			grandParentGroupName = ${grandParentGroupName},
			groupKey = ${groupName},
			parentGroupName = ${parentGroupName},
			site = ${site});
		var serviceContext = JSONLayoutpagetemplateSetter.setServiceContext(
			addGuestPermissions = "true",
			assetCategoryIds = ${assetCategoryIds},
			assetTagNames = ${assetTagNames},
			serviceContext = ${serviceContext},
			workflowAction = ${workflowAction});

		if (!(isSet(masterPageTemplateStatus))) {
			var masterPageTemplateStatus = "Draft";
		}

		var status = JSONLayoutpagetemplateUtil._getStatus(layoutPageTemplateStatus = ${masterPageTemplateStatus});

		JSONLayoutpagetemplateAPI._addMasterPageTemplateEntry(
			groupId = ${groupId},
			masterPageTemplateEntryName = ${masterPageTemplateEntryName},
			serviceContext = ${serviceContext},
			status = ${status});
	}

	@summary = "Default summary"
	macro deleteLayoutPageTemplateEntry(groupName = null, site = null, layoutPageTemplateEntryName = null, type = null) {
		Variables.assertDefined(parameterList = "${groupName},${layoutPageTemplateEntryName},${type}");

		var groupId = JSONLayoutpagetemplateSetter.setGroupIdByName(
			groupName = ${groupName},
			site = ${site});

		var layoutPageTemplateEntryId = JSONLayoutpagetemplateSetter.setLayoutPageTemplateEntryId(
			groupId = ${groupId},
			layoutPageTemplateEntryName = ${layoutPageTemplateEntryName},
			type = ${type});

		JSONLayoutpagetemplateAPI._deleteLayoutPageTemplateEntry(layoutPageTemplateEntryId = ${layoutPageTemplateEntryId});
	}

	@summary = "Default summary"
	macro getLayoutPrototypeId(groupName = null, site = null, layoutPageTemplateType = null, layoutPageTemplateEntryName = null) {
		Variables.assertDefined(parameterList = "${groupName},${layoutPageTemplateEntryName},${layoutPageTemplateType}");

		var groupId = JSONLayoutpagetemplateSetter.setGroupIdByName(
			groupName = ${groupName},
			site = ${site});
		var type = JSONLayoutpagetemplateUtil._getType(layoutPageTemplateType = ${layoutPageTemplateType});

		var layoutPrototypeId = JSONLayoutpagetemplateAPI._getLayoutPrototypeId(
			groupId = ${groupId},
			layoutPageTemplateEntryName = ${layoutPageTemplateEntryName},
			type = ${type});

		return ${layoutPrototypeId};
	}

	@summary = "Default summary"
	macro publishLayout(displayPageTemplateEntryName = null, groupName = null, site = null, privateLayout = null) {
		Variables.assertDefined(parameterList = "${displayPageTemplateEntryName},${groupName}");

		var groupId = JSONLayoutpagetemplateSetter.setGroupId(
			groupKey = ${groupName},
			site = ${site});

		var plid = JSONLayoutpagetemplateSetter.setDisplayPageTemplatePlid(
			displayPageTemplateEntryName = ${displayPageTemplateEntryName},
			groupId = ${groupId});

		JSONLayoutAPI._publishLayoutByPlid(plid = ${plid});
	}

	@summary = "Default summary"
	macro setLayoutPageTemplateEntryAsDefault(groupName = null, site = null, layoutPageTemplateEntryName = null, type = null) {
		Variables.assertDefined(parameterList = "${groupName},${layoutPageTemplateEntryName},${type}");

		var groupId = JSONLayoutpagetemplateSetter.setGroupId(
			groupKey = ${groupName},
			site = ${site});

		var layoutPageTemplateEntryId = JSONLayoutpagetemplateSetter.setLayoutPageTemplateEntryId(
			groupId = ${groupId},
			layoutPageTemplateEntryName = ${layoutPageTemplateEntryName},
			type = ${type});

		JSONLayoutpagetemplateAPI._setLayoutPageTemplateEntryAsDefault(layoutPageTemplateEntryId = ${layoutPageTemplateEntryId});
	}

	@summary = "Default summary"
	macro setLayoutPageTemplateEntryAsNonDefault(groupName = null, site = null, layoutPageTemplateEntryName = null, type = null) {
		Variables.assertDefined(parameterList = "${groupName},${layoutPageTemplateEntryName},${type}");

		var groupId = JSONLayoutpagetemplateSetter.setGroupId(
			groupKey = ${groupName},
			site = ${site});

		var layoutPageTemplateEntryId = JSONLayoutpagetemplateSetter.setLayoutPageTemplateEntryId(
			groupId = ${groupId},
			layoutPageTemplateEntryName = ${layoutPageTemplateEntryName},
			type = ${type});

		JSONLayoutpagetemplateAPI._setLayoutPageTemplateEntryAsNonDefault(layoutPageTemplateEntryId = ${layoutPageTemplateEntryId});
	}

}