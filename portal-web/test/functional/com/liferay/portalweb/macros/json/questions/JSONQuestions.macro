definition {

	@summary = "Default summary"
	macro addAnswer(groupName = null, replyBody = null, threadSubject = null, titleField = null, categoryName = null) {
		Variables.assertDefined(parameterList = "${categoryName},${groupName},${titleField}");

		var messageId = JSONQuestions.getQuestionIdByName(
			categoryName = ${categoryName},
			groupName = ${groupName},
			titleField = ${titleField});
		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = PropsUtil.get("default.admin.password");
		}

		var curl = '''
			${portalURL}/api/jsonws/mb.mbmessage/add-message \
				-u ${userEmailAddress}:${userPassword} \
				-d parentMessageId=${messageId} \
				-d subject=RE: ${threadSubject} \
				-d body=<p>${replyBody}</p> \
				-d format='creole' \
				-d inputStreamOVPs= \
				-d anonymous=false \
				-d priority=0 \
				-d allowPingbacks=false
		''';

		echo("## Adding an 'Answer' with the following info using JSONWS:");

		echo("## * Parent messageId: ${messageId}");

		echo("## * Subject: ${threadSubject}");

		echo("## * Body: ${replyBody}");

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro addQuestion(groupName = null, bodyField = null, userPassword = null, titleField = null, userEmailAddress = null, categoryName = null) {
		Variables.assertDefined(parameterList = "${categoryName},${groupName}");

		var categoryId = JSONMBMessage.getCategoryIdByName(
			categoryName = ${categoryName},
			groupName = ${groupName});

		JSONQuestionsAPI._addQuestion(
			bodyField = ${bodyField},
			categoryId = ${categoryId},
			titleField = ${titleField},
			userEmailAddress = ${userEmailAddress},
			userPassword = ${userPassword});
	}

	@summary = "Default summary"
	macro addQuestionWithTag(groupName = null, bodyField = null, userPassword = null, tagField = null, titleField = null, userEmailAddress = null, categoryName = null) {
		Variables.assertDefined(parameterList = "${categoryName},${groupName}");

		var categoryId = JSONMBMessage.getCategoryIdByName(
			categoryName = ${categoryName},
			groupName = ${groupName});

		JSONQuestionsAPI._addQuestionWithTag(
			bodyField = ${bodyField},
			categoryId = ${categoryId},
			tagField = ${tagField},
			titleField = ${titleField},
			userEmailAddress = ${userEmailAddress},
			userPassword = ${userPassword});
	}

	@summary = "Default summary"
	macro getAnswerTitle(groupName = null, titleField = null, replyTitle = null, categoryName = null) {
		var categoryId = JSONMBMessage.getCategoryIdByName(
			categoryName = ${categoryName},
			groupName = ${groupName});
		var threadId = JSONMBMessage.getThreadIdByName(
			categoryName = ${categoryName},
			groupName = ${groupName},
			threadSubject = ${titleField});
		var portalURL = JSONCompany.getPortalURL();
		var groupId = JSONGroupSetter.setGroupId(groupName = ${groupName});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/mb.mbmessage/get-thread-messages \
				-u ${userLoginInfo} \
				-d groupId=${groupId} \
				-d categoryId=${categoryId} \
				-d threadId=${threadId} \
				-d status=0 \
				-d "start=-1" \
				-d "end=-1"
		''';

		var commentTitle = JSONCurlUtil.post(${curl}, "$.[?(@['subject'] == 'RE: ${replyTitle}')]['subject']");

		echo("## ${commentTitle}");

		if (${commentTitle} == "RE: ${replyTitle}") {
			echo("This question has an answer.");
		}
		else {
			fail("FAIL!");
		}
	}

	@summary = "Default summary"
	macro getApprovedStatus(groupName = null, titleField = null, categoryName = null) {
		var questionId = JSONQuestions.getQuestionIdViaThreadId(
			categoryName = ${categoryName},
			groupName = ${groupName},
			titleField = ${titleField});
		var portalURL = JSONCompany.getPortalURL();
		var userPassword = PropsUtil.get("default.admin.password");

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/message-board-threads/${questionId} \
				-H 'Content-Type: application/json' \
				-u 'test@liferay.com:${userPassword}'
		''';

		var status = JSONCurlUtil.get(${curl}, "$.[?(@['headline'] == '${titleField}')]['status']");

		echo("## ${status}");

		if (${status} == "approved") {
			echo("This is a approved question.");
		}
		else {
			fail("FAIL!");
		}
	}

	@summary = "Default summary"
	macro getPendingStatus(groupName = null, titleField = null, categoryName = null) {
		var questionId = JSONQuestions.getQuestionIdViaThreadId(
			categoryName = ${categoryName},
			groupName = ${groupName},
			pending = 1,
			titleField = ${titleField});
		var portalURL = JSONCompany.getPortalURL();
		var userPassword = PropsUtil.get("default.admin.password");

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/message-board-threads/${questionId} \
				-H 'Content-Type: application/json' \
				-u 'test@liferay.com:${userPassword}'
		''';

		var status = JSONCurlUtil.get(${curl}, "$.[?(@['headline'] == '${titleField}')]['status']");

		echo("## ${status}");

		if (${status} == "pending") {
			echo("This is a pending question.");
		}
		else {
			fail("FAIL!");
		}
	}

	@summary = "Default summary"
	macro getQuestionIdByName(groupName = null, titleField = null, categoryName = null) {
		Variables.assertDefined(parameterList = "${categoryName},${groupName},${titleField}");

		var categoryId = JSONMBMessage.getCategoryIdByName(
			categoryName = ${categoryName},
			groupName = ${groupName});
		var portalURL = JSONCompany.getPortalURL();
		var groupId = JSONGroupSetter.setGroupId(groupName = ${groupName});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/mb.mbthread/get-threads \
				-u ${userLoginInfo} \
				-d groupId=${groupId} \
				-d categoryId=${categoryId} \
				-d status=0 \
				-d "start=-1" \
				-d "end=-1"
		''';

		var questionId = JSONCurlUtil.post(${curl}, "$.[?(@['title'] == '${titleField}')]['rootMessageId']");

		if (${questionId} == "") {
			fail("FAIL. Cannot find category.");
		}

		return ${questionId};
	}

	@summary = "Default summary"
	macro getQuestionIdViaThreadId(groupName = null, titleField = null, categoryName = null) {
		Variables.assertDefined(parameterList = "${categoryName},${groupName},${titleField}");

		var categoryId = JSONMBMessage.getCategoryIdByName(
			categoryName = ${categoryName},
			groupName = ${groupName});
		var portalURL = JSONCompany.getPortalURL();
		var groupId = JSONGroupSetter.setGroupId(groupName = ${groupName});

		if (isSet(pending)) {
			var status = 1;
		}
		else {
			var status = 0;
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/mb.mbthread/get-threads \
				-u ${userLoginInfo} \
				-d groupId=${groupId} \
				-d categoryId=${categoryId} \
				-d status=${status} \
				-d "start=-1" \
				-d "end=-1"
		''';

		var questionId = JSONCurlUtil.post(${curl}, "$.[?(@['title'] == '${titleField}')]['threadId']");

		if (${questionId} == "") {
			fail("FAIL. Cannot find category.");
		}

		return ${questionId};
	}

}