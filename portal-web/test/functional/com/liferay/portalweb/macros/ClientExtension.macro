definition {

	@summary = "Default summary"
	macro addPortletToWidgetPage(widgetPageName = null, portletName = null) {
		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = ${widgetPageName});

		Navigator.gotoPage(pageName = ${widgetPageName});

		Click(locator1 = "ControlMenu#ADD");

		Type(
			locator1 = "NavBar#APPLICATION_SEARCH_FIELD",
			value1 = ${portletName});

		Portlet._clickAddPortlet(portletName = ${portletName});

		WaitForElementPresent(locator1 = "Message#SUCCESS");
	}

	@summary = "Default summary"
	macro checkConfigFileCreatedProperly() {
		var configFileIsCreated = ClientExtension.configFileCreated();

		if (${configFileIsCreated} == "true") {
			echo("Config file created successfully.");
		}
		else {
			fail("FAIL! There's no config file created!");
		}
	}

	@summary = "Default summary"
	macro configFileCreated(staticExtensionType = null) {
		var liferayHome = PropsUtil.get("liferay.home.dir.name");

		var booleanValue = FileUtil.exists("${liferayHome}/osgi/configs/com.liferay.client.extension.type.configuration.CETConfiguration~${staticExtensionType}.config");

		return ${booleanValue};
	}

	@summary = "Default summary"
	macro createGlobalVariableClientExtensionType(type = null) {
		static var staticExtensionType = ${type};

		return ${staticExtensionType};
	}

	@summary = "Navigate to Client Extensions Admin with url navigation"
	macro openClientExtensionsAdmin(baseURL = null) {
		Navigator.openWithAppendToBaseURL(
			baseURL = ${baseURL},
			urlAppend = "group/control_panel/manage?p_p_id=com_liferay_client_extension_web_internal_portlet_ClientExtensionAdminPortlet");

		WaitForVisible(locator1 = "Button#PLUS");
	}

	@summary = "Default summary"
	macro tearDownConfig(staticExtensionType = null) {
		Variables.assertDefined(parameterList = ${staticExtensionType});

		ClientExtensionGeneral.goToRemoteAppsPortlet();

		while (IsElementNotPresent(locator1 = "ClientExtension#EMPTY_REMOTE_TABLE_MESSAGE")) {
			FileInstall.deleteConfigFile(configFile = "com.liferay.client.extension.type.configuration.CETConfiguration~${staticExtensionType}.config");

			Refresh();
		}

		ClientExtensionGeneral.viewEmptyRemoteTable();
	}

}