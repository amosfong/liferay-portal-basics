definition {

	@summary = "Default summary"
	macro assertThatTheExtraFieldsAreVisible(position = null,fieldsList = null) {
		for (var field : list ${fieldsList}) {
			AssertElementPresent(
				key_index = ${position},
				label = ${field},
				locator1 = "CustomerPortalSite#SETUP_FIELDS");
		}
	}

	@summary = "Default summary"
	macro assertThatTheExtraFieldsIsNotVisible(position = null,fieldsList = null) {
		for (var field : list ${fieldsList}) {
			AssertElementNotPresent(
				key_index = ${position},
				label = ${field},
				locator1 = "CustomerPortalSite#SETUP_FIELDS");
		}
	}

	@summary = "Default summary"
	macro clearInfoSetupLXCFields() {
		CP2Utils.typeSetupInfoFields(
			label = "projectId",
			value = "");

		CP2Utils.typeSetupInfoFields(
			label = "fullName",
			value = "");

		CP2Utils.typeSetupInfoFields(
			label = "email",
			value = "");

		CP2Utils.typeSetupInfoFields(
			label = "github",
			value = "");

		CP2Utils.typeSetupInfoFields(
			label = "incidentManagementFullName",
			value = "");

		CP2Utils.typeSetupInfoFields(
			label = "incidentManagementEmail",
			value = "");
	}

	@summary = "Default summary"
	macro typeAllSetupLXCInfoFields(github = null,incidentManagementEmail = null,fullName = null,region = null,incidentManagementFullName = null,projectId = null,email = null) {
		CP2Utils.typeSetupInfoFields(
			label = "projectId",
			value = ${projectId});

		Select(
			locator1 = "CP2Utils#SELECT_LOCATION",
			value1 = ${region});

		CP2Utils.typeSetupInfoFields(
			label = "fullName",
			value = ${fullName});

		CP2Utils.typeSetupInfoFields(
			label = "email",
			value = ${email});

		CP2Utils.typeSetupInfoFields(
			label = "github",
			value = ${github});

		CP2Utils.typeSetupInfoFields(
			label = "incidentManagementFullName",
			value = ${incidentManagementFullName});

		CP2Utils.typeSetupInfoFields(
			label = "incidentManagementEmail",
			value = ${incidentManagementEmail});
	}

	@summary = "Default summary"
	macro viewMessageErrorList(fieldsList = null) {
		for (var value : list ${fieldsList}) {
			AssertVisible(
				key_errorMessage = "This field is required.",
				locator1 = "CustomerPortalSite#SPECIFIC_ERROR_MESSAGE",
				value = ${value});
		}
	}

}