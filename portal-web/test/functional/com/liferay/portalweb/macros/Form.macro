definition {

	var formDescription = "Created Form Description";
	var formName = "Created Form Name";
	var rowNumber = 1;

	@summary = "Default summary"
	macro addFieldFromSidebarToFieldsGroup(key_fieldName = null, key_fieldLabel = null) {
		DragAndDrop.javaScriptDragAndDropToBottom(
			key_fieldLabel = ${key_fieldLabel},
			key_fieldName = ${key_fieldName},
			locator1 = "Sidebar#ADD_FIELD_NAME",
			locator2 = "FormFields#LABEL");
	}

	@summary = "Default summary"
	macro addFieldOutsideOfFieldsGroup(fieldName = null, index = null) {
		DragAndDrop.javaScriptDragAndDropToBottom(
			key_fieldName = ${fieldName},
			key_index = ${index},
			locator1 = "Sidebar#ADD_FIELD_NAME",
			locator2 = "Form#FIELD_ROW_TARGET");
	}

	@summary = "Default summary"
	macro addFieldSameRow(fieldColumnNumber = null, fieldRowNumber = null, formPageNumber = null, fieldType = null) {
		var key_fieldLabel = ${fieldType};

		if (isSet(formPageNumber)) {
			var key_formPageNumber = ${formPageNumber};
		}
		else {
			var key_formPageNumber = 0;
		}

		if (isSet(fieldColumnNumber)) {
			var key_fieldColumnNumber = ${fieldColumnNumber};
		}
		else {
			var key_fieldColumnNumber = 0;
		}

		if (isSet(fieldRowNumber)) {
			var key_fieldRowNumber = ${fieldRowNumber};
		}
		else {
			var key_fieldRowNumber = 0;
		}

		DragAndDrop.javaScriptDragAndDropToObject(
			locator1 = "FormViewBuilder#SIDEBAR_FIELD_LABEL",
			locator2 = "Form#ADD_FIELD_SPECIFIC_POSITION",
			value1 = ${fieldType});
	}

	@summary = "Default summary"
	macro addFieldToFieldsGroup(targetFieldLabel = null, sourceFieldName = null) {
		DragAndDrop.javaScriptDragAndDropToBottom(
			key_fieldLabel = ${targetFieldLabel},
			key_fieldName = ${sourceFieldName},
			locator1 = "Form#PAGE_FIELD_LABEL",
			locator2 = "FormFields#LABEL");
	}

	@summary = "Default summary"
	macro addPage(formAddNewPageNumber = null) {
		var key_formAddNewPageNumber = ${formAddNewPageNumber};

		ScrollBy(value1 = "0, 230");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_ADD_NEW_PAGE",
			value1 = "New Page");
	}

	@summary = "Default summary"
	macro addSuccessPage() {
		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		ScrollBy(value1 = "0, 230");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_ADD_SUCCESS_PAGE",
			value1 = "Add Success Page");
	}

	@summary = "Default summary"
	macro addSuccessPageForm() {
		Click(locator1 = "Form#SUCCESS_PAGE_ADD");

		AssertTextEquals(
			locator1 = "Form#SUCCESS_PAGE_TITLE_FIELD",
			value1 = "Thank you.");

		AssertTextEquals(
			locator1 = "Form#SUCCESS_PAGE_DESCRIPTION_FIELD",
			value1 = "Your information was successfully received. Thank you for filling out the form.");
	}

	@summary = "Default summary"
	macro addTextField(fieldPositionNumber = null, formPageNumber = null) {
		if (isSet(formPageNumber)) {
			Form.gotoAddField(
				fieldPositionNumber = ${fieldPositionNumber},
				fieldType = "Text",
				formPageNumber = ${formPageNumber});
		}
		else {
			Form.gotoAddField(
				fieldPositionNumber = ${fieldPositionNumber},
				fieldType = "Text");
		}
	}

	@summary = "Default summary"
	macro addTextFieldReference(fieldPositionNumber = null, key_fieldReferenceText = null, formPageNumber = null) {
		if (isSet(formPageNumber)) {
			Form.gotoAddField(
				fieldPositionNumber = ${fieldPositionNumber},
				fieldType = "Text",
				formPageNumber = ${formPageNumber});
		}
		else {
			Form.gotoAddField(
				fieldPositionNumber = ${fieldPositionNumber},
				fieldType = "Text");
		}

		Form.gotoAdvancedTab();

		Type(
			locator1 = "Form#FIELD_REFERENCE",
			value1 = ${key_fieldReferenceText});
	}

	@summary = "Default summary"
	macro addTranslation(localizedLanguage = null) {
		ScrollWebElementIntoView(locator1 = "Translation#ADD");

		Click(locator1 = "Translation#ADD");

		var key_localizedLanguage = ${localizedLanguage};

		AssertClick(
			locator1 = "Translation#ADD_MENULIST_LANGUAGE",
			value1 = ${localizedLanguage});
	}

	@summary = "Default summary"
	macro assertFieldPositionAtFormsGroupOnPublishedForm(key_rowNumber = null, key_text = null, key_formPageNumber = null) {
		AssertElementPresent(
			key_formPageNumber = ${key_formPageNumber},
			key_rowNumber = ${key_rowNumber},
			key_text = ${key_text},
			locator1 = "Form#FIELD_SPECIFIC_POSITION_PUBLISHED_FORM");
	}

	@summary = "Default summary"
	macro assertFormWasPublished() {
		AssertVisible(locator1 = "Form#PUBLISH_URL_ICON");
	}

	@summary = "Default summary"
	macro changeFieldTypeModalConfirmation(selectOption = null) {
		FormFields.changeFieldType(selectOption = ${selectOption});

		while (IsElementPresent(locator1 = "Form#VALIDATE_CHANGE_FIELD_TYPE_MODAL_MESSAGE")) {
			Click(locator1 = "Form#SIDEBAR_CHANGE_FIELD_TYPE_MODAL_BUTTON");
		}
	}

	@summary = "Default summary"
	macro closeSidebar() {
		Click(locator1 = "Sidebar#BACK");
	}

	@summary = "Default summary"
	macro configureEmailNotifications(subject = null, fromName = null, fromAddress = null, toAddress = null) {
		AssertClick(
			locator1 = "Form#SETTINGS_TAB_EMAIL_NOTIFICATIONS",
			value1 = "Notifications");

		FormFields.enableSwitch(fieldName = "sendEmailNotification");

		FormFields.editText(
			fieldName = "emailFromName",
			fieldValue = ${fromName});

		FormFields.editText(
			fieldName = "emailFromAddress",
			fieldValue = ${fromAddress});

		FormFields.editText(
			fieldName = "emailToAddress",
			fieldValue = ${toAddress});

		FormFields.editText(
			fieldName = "emailSubject",
			fieldValue = ${subject});

		Button.clickDone();
	}

	@summary = "Default summary"
	macro configureOneSubmissionPerUser() {
		AssertClick(
			locator1 = "Form#SETTINGS_TAB_SUBMISSIONS",
			value1 = "Submissions");

		Click.javaScriptClick(
			checkboxName = "Limit to One Submission per User",
			locator1 = "Checkbox#ANY_CHECKBOX");

		AssertChecked.assertCheckedNotVisible(
			checkboxName = "Limit to One Submission per User",
			locator1 = "Checkbox#ANY_CHECKBOX");

		Button.clickDone();
	}

	@summary = "Default summary"
	macro configureRedirectURL(url = null) {
		AssertClick(
			locator1 = "Form#SETTINGS_TAB_PERSONALIZATION",
			value1 = "Personalization");

		FormFields.editText(
			fieldName = "redirectURL",
			fieldValue = ${url});
	}

	@summary = "Default summary"
	macro configureRequireAuthentication() {
		FormFields.enableSwitch(fieldName = "Require User Authentication");

		Button.clickDone();
	}

	@summary = "Default summary"
	macro configureRequireCaptcha() {
		FormFields.enableSwitch(fieldName = "requireCaptcha");

		Button.clickDone();
	}

	@summary = "Default summary"
	macro configureSubmitLabel(submitLabel = null) {
		AssertClick(
			locator1 = "Form#SETTINGS_TAB_PERSONALIZATION",
			value1 = "Personalization");

		FormFields.editText(
			fieldName = "submitLabel",
			fieldValue = ${submitLabel});

		Button.clickDone();
	}

	@summary = "Default summary"
	macro configureWorkflow(workflowDefinition = null) {
		Click(locator1 = "Form#SETTINGS_TAB_WORKFLOW_CONFIGURATION_FIELD");

		var key_workflowDefinition = ${workflowDefinition};

		AssertClick(
			locator1 = "Form#SETTINGS_TAB_WORKFLOW_CONFIGURATION",
			value1 = ${workflowDefinition});

		Button.clickDone();
	}

	@summary = "Default summary"
	macro deleteCurrentLastPage(formDropDownNumber = null, formPageNumber = null) {
		var key_formDropDownNumber = ${formDropDownNumber};
		var key_formPageNumber = ${formPageNumber};

		//AssertElementPresent(locator1 = "FormPortlet#FORM_PAGE_ACTIVE");

		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_DELETE_CURRENT_PAGE_LAST",
			value1 = "Remove Page");

		AssertElementNotPresent(locator1 = "FormPortlet#FORM_PAGE");
	}

	@summary = "Default summary"
	macro deleteCurrentPage(formDropDownNumber = null, formPageNumber = null) {
		var key_formDropDownNumber = ${formDropDownNumber};
		var key_formPageNumber = ${formPageNumber};

		//AssertElementPresent(locator1 = "FormPortlet#FORM_PAGE_ACTIVE");

		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_DELETE_CURRENT_PAGE",
			value1 = "Remove Page");

		AssertElementNotPresent(locator1 = "FormPortlet#FORM_PAGE");
	}

	@summary = "Default summary"
	macro deleteFieldModalConfirmation(fieldName = null, fieldLabel = null) {
		FormsAdminNavigator.gotoDeleteField(fieldName = ${fieldName});

		while (IsElementPresent(locator1 = "Form#VALIDATE_DELETE_FIELD_MODAL_DELETE_MESSAGE")) {
			Click(locator1 = "Form#SIDEBAR_DELETE_FIELD_MODAL_DELETE_BUTTON");
		}

		Form.validateNoFieldLabel(fieldLabel = ${fieldLabel});
	}

	@summary = "Default summary"
	macro deleteSuccessPage(formPageNumber = null) {
		var key_formPageNumber = ${formPageNumber};

		//AssertElementPresent(locator1 = "FormPortlet#FORM_PAGE_ACTIVE");

		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_DELETE_SUCCESS_PAGE",
			value1 = "Remove Success Page");

		AssertElementNotPresent(locator1 = "FormPortlet#FORM_PAGE");
	}

	@summary = "Default summary"
	macro disableAutocompleteConfiguration() {
		FormFields.disableSwitch(fieldName = "Autocomplete");
	}

	@summary = "Default summary"
	macro duplicate(formName = null) {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Make a Copy",
			rowEntry = ${formName});
	}

	@summary = "Default summary"
	macro duplicateFieldsGroup(fieldName = null) {
		while (IsElementNotPresent(locator1 = "Form#SIDEBAR_MENUITEM_DUPLICATE_FIELD")) {
			Click(
				key_fieldName = ${fieldName},
				locator1 = "Form#FIELD_LABEL");
		}

		Click(locator1 = "FormViewBuilder#FIELD_ELLIPSIS");

		AssertClick(
			locator1 = "Form#SIDEBAR_MENUITEM_DUPLICATE_FIELD",
			value1 = "Duplicate");
	}

	@summary = "Default summary"
	macro editDescription(formDescription = null) {
		WaitForElementPresent(locator1 = "Form#DESCRIPTION_FIELD");

		Click(locator1 = "Form#DESCRIPTION_FIELD");

		Type(
			locator1 = "Form#DESCRIPTION_FIELD",
			value1 = ${formDescription});
	}

	@summary = "Default summary"
	macro editElementSetFieldLabel(fieldValue = null) {
		WaitForElementPresent(locator1 = "Form#SIDEBAR_CONTENT_OPEN");

		while ((IsTextNotEqual(key_fieldName = "label", locator1 = "FormFields#TEXT_FIELD", value1 = "")) && (maxIterations = "10")) {
			FormFields.editTextWithBackspace(fieldName = "label");
		}

		if (!(isSet(fieldName))) {
			var fieldName = StringUtil.replace(${fieldValue}, " ", "");
		}

		Form.editFieldLabelMetal(fieldValue = ${fieldValue});
	}

	@summary = "Default summary"
	macro editFieldDataProvider(dataProviderOutput = null, dataProvider = null) {
		FormFields.selectSelectOption(
			fieldName = "dataSourceType",
			selectOption = "From Data Provider");

		FormFields.selectSelectOption(
			fieldName = "Choose a Data Provider",
			selectOption = ${dataProvider});

		FormFields.selectSelectOption(
			fieldName = "Output Parameter",
			selectOption = ${dataProviderOutput});
	}

	@summary = "Default summary"
	macro editFieldLabelMetal(fieldValue = null) {
		FormFields.editText(
			fieldName = "label",
			fieldValue = ${fieldValue});

		var key_fieldName = ${fieldValue};

		AssertTextEquals(
			locator1 = "Form#FIELD_LABEL",
			value1 = ${fieldValue});
	}

	@summary = "Default summary"
	macro editFieldReferenceMetal(fieldValue = null) {
		FormFields.editText(
			fieldName = "fieldReference",
			fieldValue = ${fieldValue});

		var key_fieldName = ${fieldValue};

		AssertTextEquals(
			locator1 = "Form#FIELD_REFERENCE",
			value1 = ${fieldValue});
	}

	@summary = "Default summary"
	macro editImageDescription(descriptionContent = null) {
		var descriptionPosition = ${descriptionPosition};

		Type(
			locator1 = "Form#ADD_IMAGE_DESCRIPTION",
			value1 = ${descriptionContent});
	}

	@summary = "Default summary"
	macro editName(formTitle = null) {
		WaitForElementPresent(locator1 = "Form#NAME_FIELD");

		AssertVisible(locator1 = "Form#BUILDER_SIDEBAR_PANEL");

		AssertVisible(locator1 = "Form#NAME_FIELD");

		AssertVisible(locator1 = "Form#DESCRIPTION_FIELD");

		if (isSet(formTitle)) {
			var formName = ${formTitle};
		}

		Type(
			locator1 = "Form#NAME_FIELD",
			value1 = ${formName});
	}

	@summary = "Default summary"
	macro editNameLocalized(formName = null) {
		WaitForElementPresent(locator1 = "Form#NAME_FIELD");

		AssertVisible(locator1 = "Form#BUILDER_SIDEBAR_PANEL");

		AssertVisible(locator1 = "Form#NAME_FIELD");

		AssertVisible(locator1 = "Form#DESCRIPTION_FIELD");

		Type(
			locator1 = "Form#NAME_FIELD",
			value1 = ${formName});
	}

	@summary = "Default summary"
	macro editPageDescription(formPageDescriptionName = null) {
		ScrollWebElementIntoView(locator1 = "Form#PAGE_DESCRIPTION_FIELD");

		WaitForElementPresent(
			locator1 = "Form#PAGE_DESCRIPTION_FIELD",
			value1 = ${formPageDescriptionName});

		Type(
			locator1 = "Form#PAGE_DESCRIPTION_FIELD",
			value1 = ${formPageDescriptionName});
	}

	@summary = "Default summary"
	macro editPageTitle(formPageName = null, formTitleNumber = null) {
		var key_titleNumber = ${formTitleNumber};

		ScrollWebElementIntoView(locator1 = "Form#PAGE_TITLE_FIELD");

		WaitForElementPresent(
			locator1 = "Form#PAGE_TITLE_FIELD",
			value1 = ${formPageName});

		Type(
			locator1 = "Form#PAGE_TITLE_FIELD",
			value1 = ${formPageName});
	}

	@summary = "Default summary"
	macro editSuccessPage(successPageDescription = null, successPageTitle = null) {
		Type(
			locator1 = "Form#SUCCESS_PAGE_TITLE_FIELD",
			value1 = ${successPageTitle});

		Type(
			locator1 = "Form#SUCCESS_PAGE_DESCRIPTION_FIELD",
			value1 = ${successPageDescription});
	}

	@summary = "Default summary"
	macro editTextFieldDataProvider(dataProviderOutput = null, dataProvider = null) {
		FormFields.selectRadioOption(
			fieldName = "dataSourceType",
			radioOption = "From Data Provider");

		FormFields.selectSelectOption(
			fieldName = "Choose a Data Provider",
			selectOption = ${dataProvider});

		FormFields.selectSelectOption(
			fieldName = "Output Parameter",
			selectOption = ${dataProviderOutput});
	}

	@summary = "Default summary"
	macro enableAutocompleteConfiguration() {
		FormFields.enableSwitch(fieldName = "Autocomplete");
	}

	@summary = "Default summary"
	macro getPublishedFormPublicURL() {
		WaitForElementPresent(locator1 = "Form#PUBLISH_FORM_PUBLIC_URL");

		var publicURL = selenium.getElementValue("Form#PUBLISH_FORM_PUBLIC_URL");

		return ${publicURL};
	}

	@summary = "Default summary"
	macro gotoAddElementSet(fieldPositionNumber = null, formPageNumber = null, elementSetTitle = null) {
		WaitForElementPresent(locator1 = "Form#SIDEBAR_CONTENT_OPEN");

		Form.gotoElementSetsTab();

		if (isSet(fieldPositionNumber)) {
			var key_fieldPositionNumber = ${fieldPositionNumber};
		}
		else {
			var key_fieldPositionNumber = 0;
		}

		var key_fieldType = ${elementSetTitle};

		if (isSet(formPageNumber)) {
			var key_formPageNumber = ${formPageNumber};
		}
		else {
			var key_formPageNumber = 0;
		}

		DragAndDrop.javaScriptDragAndDropToObject(
			locator1 = "Form#ADD_FIELD_TYPE",
			locator2 = "Form#ADD_FIELD_POSITION",
			value1 = ${elementSetTitle});
	}

	@summary = "Default summary"
	macro gotoAddField(fieldPositionNumber = null, localeBasic = null, formPageNumber = null, localeFields = null, fieldType = null) {
		WaitForElementPresent(locator1 = "Form#SIDEBAR_CONTENT_OPEN");

		if (isSet(localeFields)) {
			Form.gotoFieldsTab(localeFields = ${localeFields});
		}
		else {
			Form.gotoFieldsTab();
		}

		if (isSet(fieldPositionNumber)) {
			var key_fieldPositionNumber = ${fieldPositionNumber};
		}
		else {
			var key_fieldPositionNumber = 0;
		}

		var key_fieldType = ${fieldType};

		if (isSet(formPageNumber)) {
			var key_formPageNumber = ${formPageNumber};
		}
		else {
			var key_formPageNumber = 0;
		}

		DragAndDrop.javaScriptDragAndDropToObject(
			locator1 = "Form#ADD_FIELD_NAME",
			locator2 = "Form#ADD_FIELD_POSITION",
			value1 = ${fieldType});

		if (isSet(localeBasic)) {
			Form.gotoBasicTab(key_localeBasic = ${localeBasic});
		}
		else if (IsElementNotPresent(key_tab = "Basic", locator1 = "NavTab#ACTIVE_TAB_LINK")) {
			Navigator.gotoNavTab(navTab = "Basic");
		}
	}

	@summary = "Default summary"
	macro gotoAdvancedTab(key_localeAdvanced = null) {
		if (isSet(key_localeAdvanced)) {
			AssertClick.assertPartialTextClickAt(
				locator1 = "Form#SIDEBAR_ADVANCED_TAB_LOCALE",
				value1 = ${key_localeAdvanced});
		}
		else {
			AssertClick.assertPartialTextClickAt(
				locator1 = "Form#SIDEBAR_ADVANCED_TAB",
				value1 = "Advanced");
		}
	}

	@summary = "Default summary"
	macro gotoAutocompleteTab() {
		AssertClick(
			locator1 = "Form#SIDEBAR_AUTOCOMPLETE_TAB",
			value1 = "Autocomplete");
	}

	@summary = "Default summary"
	macro gotoBasicTab(key_localeBasic = null) {
		if (isSet(key_localeBasic)) {
			AssertClick.assertPartialTextClickAt(
				locator1 = "Form#SIDEBAR_BASIC_TAB_LOCALE",
				value1 = ${key_localeBasic});
		}
		else {
			AssertClick.assertPartialTextClickAt(
				locator1 = "Form#SIDEBAR_BASIC_TAB",
				value1 = "Basic");
		}
	}

	@summary = "Default summary"
	macro gotoElementSetsTab() {
		AssertClick(
			locator1 = "Form#SIDEBAR_ELEMENT_SETS_TAB",
			value1 = "Element Sets");
	}

	@summary = "Default summary"
	macro gotoElementsTab(key_localeElements = null) {
		if (isSet(key_localeElements)) {
			AssertClick(
				locator1 = "Form#SIDEBAR_ELEMENTS_TAB_LOCALE",
				value1 = ${key_localeElements});
		}
		else {
			AssertClick(
				locator1 = "Form#SIDEBAR_ELEMENTS_TAB",
				value1 = "Elements");
		}
	}

	@summary = "Default summary"
	macro gotoFieldContainer(fieldName = null) {
		Click(
			key_fieldName = ${fieldName},
			locator1 = "Form#FIELD_LABEL");
	}

	@summary = "Default summary"
	macro gotoFieldsTab(localeFields = null) {
		var key_localeFields = ${localeFields};

		if (isSet(key_localeFields)) {
			AssertClick(
				locator1 = "Form#SIDEBAR_FIELDS_TAB_LOCALE",
				value1 = ${localeFields});
		}
		else {
			AssertClick(
				locator1 = "Form#SIDEBAR_FIELDS_TAB",
				value1 = "Fields");
		}
	}

	@summary = "Default summary"
	macro gotoFormPage(formPageName = null) {
		var key_formPageName = ${formPageName};

		Click(locator1 = "Form#FORM_PAGE");
	}

	@summary = "Default summary"
	macro gotoPageAltPagination(page = null) {
		var key_page = ${page};

		Click(locator1 = "Form#ALT_PAGINATION_PAGE");
	}

	@summary = "Default summary"
	macro gotoPropertiesTab() {
		if (isSet(key_localeAdvanced)) {
			AssertClick(
				locator1 = "Form#SIDEBAR_PROPERTIES_TAB",
				value1 = "Properties");
		}
		else {
			AssertClick(
				locator1 = "Form#SIDEBAR_PROPERTIES_TAB",
				value1 = "Properties");
		}
	}

	@summary = "Default summary"
	macro gotoSubmissionsTab() {
		Click(locator1 = "Form#SETTINGS_TAB_SUBMISSIONS");
	}

	@summary = "Default summary"
	macro modifyModuleDefinitionTimeout(timeout = null) {
		Form.openToJavaScriptLoader();

		Type(
			locator1 = "Form#MODULE_DEFINITION_TIMEOUT_JAVASCRIPT_LOADER",
			value1 = ${timeout});

		if (IsElementPresent(locator1 = "Button#UPDATE")) {
			PortletEntry.update();
		}
		else if (IsElementPresent(locator1 = "Button#SAVE")) {
			PortletEntry.save();
		}

		Navigator.openURL();
	}

	@summary = "Default summary"
	macro moveFieldToRow(fieldPositionNumber = null, fieldNameTarget = null, fieldLabel = null, formPageNumber = null) {
		if (isSet(formPageNumber)) {
			var key_formPageNumber = ${formPageNumber};
		}
		else {
			var key_formPageNumber = 0;
		}

		if (isSet(fieldPositionNumber)) {
			var key_fieldPositionNumber = ${fieldPositionNumber};
		}
		else {
			var key_fieldPositionNumber = 0;
		}

		DragAndDrop.javaScriptDragAndDropToUp(
			key_fieldLabel = ${fieldLabel},
			key_fieldName = ${fieldNameTarget},
			locator1 = "FormFields#LABEL",
			locator2 = "Form#ADD_FIELD_POSITION");
	}

	@summary = "Default summary"
	macro movePageDown(formPageName = null) {
		Click(
			key_formPageName = ${formPageName},
			locator1 = "Form#PAGE_MOVE_DOWN_ENABLED");
	}

	@summary = "Default summary"
	macro movePageUp(formPageName = null) {
		Click(
			key_formPageName = ${formPageName},
			locator1 = "Form#PAGE_MOVE_UP_ENABLED");
	}

	@summary = "Default summary"
	macro navigateFormPagesTopList(key_formPageName = null, key_formPageNumber = null) {
		var formPageNumber = ${key_formPageNumber};
		var formPageName = ${key_formPageName};

		Click(
			key_formPageName = ${formPageName},
			key_formPageNumber = ${formPageNumber},
			locator1 = "Form#FORM_PAGE_TOP_LIST");
	}

	@summary = "Default summary"
	macro openToJavaScriptLoader() {
		var baseURL = JSONCompany.getPortalURL();

		Open(value1 = "${baseURL}/group/control_panel/manage?p_p_id=com_liferay_configuration_admin_web_portlet_SystemSettingsPortlet&p_p_lifecycle=0&p_p_state=maximized&p_p_mode=view&_com_liferay_configuration_admin_web_portlet_SystemSettingsPortlet_factoryPid=com.liferay.frontend.js.loader.modules.extender.internal.configuration.Details&_com_liferay_configuration_admin_web_portlet_SystemSettingsPortlet_mvcRenderCommandName=%2Fconfiguration_admin%2Fedit_configuration&_com_liferay_configuration_admin_web_portlet_SystemSettingsPortlet_pid=com.liferay.frontend.js.loader.modules.extender.internal.configuration.Details");
	}

	@summary = "Default summary"
	macro pageReset(pageIndex = null) {
		Click(
			key_formPageNumber = ${pageIndex},
			locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		Click(
			key_saveButton = "Reset Page",
			locator1 = "Form#SAVE_FORM_BUTTON_LOCALIZED");
	}

	@summary = "Default summary"
	macro previewExistingSubmissionButton() {
		Click(locator1 = "Form#PREVIEW_EXISTING_SUBMISSIONS");
	}

	@summary = "Default summary"
	macro previewForm(fieldName = null, formName = null, fieldLabel = null, fieldValue = null) {
		Navigator.selectSpecificWindow(windowTitle = "Form - Forms");

		WaitForPageLoad();

		var key_formName = ${formName};

		AssertTextEquals(
			locator1 = "Form#PUBLISH_FORM_NAME_FIELD",
			value1 = ${formName});

		FormFields.viewTextLabel(
			fieldLabel = ${fieldLabel},
			fieldName = ${fieldName});

		FormFields.editText(
			fieldName = ${fieldName},
			fieldValue = ${fieldValue});

		FormFields.viewTextValue(
			fieldName = ${fieldName},
			fieldValue = ${fieldValue});

		AssertElementNotPresent(locator1 = "FormPortlet#SUBMIT_BUTTON");
	}

	@summary = "Default summary"
	macro publishForm() {
		WaitForElementPresent(locator1 = "Form#PUBLISH_FORM_BUTTON");

		AssertElementPresent(locator1 = "Form#NAME_FIELD");

		Click(locator1 = "Form#PUBLISH_FORM_BUTTON");

		Form.assertFormWasPublished();
	}

	@summary = "Default summary"
	macro reorderFields(fieldName = null, index = null) {
		DragAndDrop.javaScriptDragAndDropToObject(
			key_fieldName = ${fieldName},
			key_index = ${index},
			locator1 = "Form#PAGE_FIELD_LABEL",
			locator2 = "Form#FIELD_ROW_TARGET");
	}

	@summary = "Default summary"
	macro reorderFieldsFromFieldsGroup(key_rowNumber = null, key_fieldName = null, key_pageNumber = null) {
		DragAndDrop.javaScriptDragAndDropToObject(
			key_fieldName = ${key_fieldName},
			key_pageNumber = ${key_pageNumber},
			key_rowNumber = ${key_rowNumber},
			locator1 = "Form#PAGE_FIELD_LABEL",
			locator2 = "Form#FIELDS_GROUP_TARGET_POSITON");
	}

	@summary = "Default summary"
	macro save(localeSaveForm = null) {
		if (isSet(localeSaveForm)) {
			var key_localeSaveForm = ${localeSaveForm};

			WaitForElementPresent(
				locator1 = "Form#SAVE_FORM_BUTTON_LOCALE",
				value1 = ${key_localeSaveForm});

			AssertClick(
				locator1 = "Form#SAVE_FORM_BUTTON_LOCALE",
				value1 = ${key_localeSaveForm});
		}
		else {
			WaitForElementPresent(
				locator1 = "Form#SAVE_FORM_BUTTON",
				value1 = "Save");

			AssertClick(
				locator1 = "Form#SAVE_FORM_BUTTON",
				value1 = "Save");
		}

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro saveElementSet() {
		WaitForElementPresent(
			locator1 = "Form#SAVE_ELEMENT_SET_BUTTON",
			value1 = "Save");

		AssertClick(
			locator1 = "Form#SAVE_ELEMENT_SET_BUTTON",
			value1 = "Save");

		VerifyElementPresent(locator1 = "Message#SUCCESS_DISMISSIBLE");
	}

	@summary = "Default summary"
	macro saveLocalized(saveButton = null) {
		var key_saveButton = ${saveButton};

		WaitForElementPresent(
			locator1 = "Form#SAVE_FORM_BUTTON_LOCALIZED",
			value1 = ${saveButton});

		AssertClick(
			locator1 = "Form#SAVE_FORM_BUTTON_LOCALIZED",
			value1 = ${saveButton});

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro selectOptionSubmissions(checkboxOption = null) {
		Click(
			key_checkboxOption = ${checkboxOption},
			locator1 = "Form#CHECKBOX_SUBMISSIONS");

		AssertChecked.assertCheckedNotVisible(
			checkboxName = ${checkboxOption},
			locator1 = "Checkbox#ANY_CHECKBOX");
	}

	@summary = "Default summary"
	macro selectTranslation(localizedLanguage = null) {
		var key_localizedLanguage = ${localizedLanguage};

		ScrollWebElementIntoView(locator1 = "Translation#UNSELECTED_LOCALE_ICON");

		Click(locator1 = "Translation#UNSELECTED_LOCALE_ICON");
	}

	@summary = "Default summary"
	macro submitAgain(key_submitButton = null) {
		if (isSet(key_submitAgainButton)) {
			Click(
				key_submitAgainButton = ${key_submitButton},
				locator1 = "Form#SUBMIT_AGAIN_BUTTON");
		}
		else {
			Click(
				key_submitAgainButton = "Submit Again",
				locator1 = "Form#SUBMIT_AGAIN_BUTTON");
		}
	}

	@summary = "Default summary"
	macro submitFormPublish(fieldName = null, fieldLabel = null, fieldValue = null) {
		Form.viewFormPublish(
			fieldLabel = ${fieldLabel},
			fieldName = ${fieldName});

		FormFields.editText(
			fieldLabel = ${fieldLabel},
			fieldName = ${fieldName},
			fieldValue = ${fieldValue});

		AssertClick(
			locator1 = "Button#MAIN_CONTENT_SUBMIT",
			value1 = "Submit");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro switchPaginationMode() {
		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_SWITCH_PAGINATION_MODE",
			value1 = "Switch Pagination");
	}

	@summary = "Default summary"
	macro switchPaginationModeToBottom() {
		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_SWITCH_PAGINATION_MODE_TO_BOTTOM",
			value1 = "Switch Pagination to Bottom");
	}

	@summary = "Default summary"
	macro switchPaginationModeToTop() {
		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_SWITCH_PAGINATION_MODE_TO_TOP",
			value1 = "Switch Pagination to Top");
	}

	@summary = "Default summary"
	macro unpublishForm() {
		WaitForElementPresent(locator1 = "Form#UNPUBLISH_FORM_BUTTON");

		AssertElementPresent(locator1 = "Form#NAME_FIELD");

		Click(locator1 = "Form#UNPUBLISH_FORM_BUTTON");

		var key_successMessage = "Your request completed successfully.";

		AssertElementPresent(locator1 = "Form#UNPUBLISH_FORM_MESSAGE_SUCCESS");
	}

	@summary = "Default summary"
	macro validateNoFieldLabel(fieldLabel = null) {
		AssertElementNotPresent(
			locator1 = "Form#FIELD_LABEL",
			value1 = ${fieldLabel});
	}

	@summary = "Default summary"
	macro viewAltPagePagination(page = null) {
		var key_page = ${page};

		AssertElementPresent(locator1 = "Form#ALT_PAGINATION_PAGE");
	}

	@summary = "Default summary"
	macro viewAltSuccessPagePagination() {
		AssertElementPresent(locator1 = "Form#ALT_PAGINATION_SUCCESS_PAGE");
	}

	@summary = "Default summary"
	macro viewButtonPageDisabled(formPageName = null, pageMove = null) {
		AssertElementPresent(
			key_formPageName = ${formPageName},
			key_movePage = "Move Page ${pageMove}",
			locator1 = "Form#PAGE_MOVE_DISABLED");
	}

	@summary = "Default summary"
	macro viewButtonPageDownEnabled(formPageName = null) {
		AssertElementPresent(
			key_formPageName = ${formPageName},
			locator1 = "Form#PAGE_MOVE_DOWN_ENABLED");
	}

	@summary = "Default summary"
	macro viewButtonPageUpEnabled(formPageName = null) {
		AssertElementPresent(
			key_formPageName = ${formPageName},
			locator1 = "Form#PAGE_MOVE_UP_ENABLED");
	}

	@summary = "Default summary"
	macro viewCollapsedCollapseButton() {
		AssertElementPresent(locator1 = "Form#FIELDS_GROUP_COLLAPSED");
	}

	@summary = "Default summary"
	macro viewExpandedCollapseButton() {
		AssertElementPresent(locator1 = "Form#FIELDS_GROUP_EXPANDED");
	}

	@summary = "Default summary"
	macro viewFieldReference(fieldName = null, fieldReference = null) {
		var key_fieldName = ${fieldName};
		var key_fieldReference = ${fieldReference};

		Click(
			key_fieldName = ${fieldName},
			locator1 = "Form#FIELD_BODY");

		Form.gotoAdvancedTab();

		AssertTextEquals(
			locator1 = "Form#FIELD_REFERENCE",
			value1 = ${fieldReference});
	}

	@summary = "Default summary"
	macro viewFieldReferenceFromTextField(fieldName = null, key_fieldReference = null) {
		Click(
			key_fieldName = ${fieldName},
			locator1 = "Form#FIELD_BODY");

		Form.gotoAdvancedTab();

		AssertTextEquals(
			locator1 = "Form#FIELD_REFERENCE",
			value1 = ${key_fieldReference});
	}

	@summary = "Default summary"
	macro viewFieldsGroupCollapsedField(fieldLabel = null) {
		AssertElementPresent(
			key_fieldLabel = ${fieldLabel},
			locator1 = "Form#FIELDS_GROUP_COLLAPSED_FIELD");
	}

	@summary = "Default summary"
	macro viewFieldsGroupNotCollapsedField(fieldLabel = null) {
		AssertElementNotPresent(
			key_fieldLabel = ${fieldLabel},
			locator1 = "Form#FIELDS_GROUP_COLLAPSED_FIELD");
	}

	@summary = "Default summary"
	macro viewFormDescription(formDescription = null) {
		AssertTextEquals(
			locator1 = "Form#DESCRIPTION_FIELD",
			value1 = ${formDescription});
	}

	@summary = "Default summary"
	macro viewFormName(formName = null) {
		AssertTextEquals(
			locator1 = "Form#NAME_FIELD",
			value1 = ${formName});
	}

	@summary = "Default summary"
	macro viewFormNotPublished() {
		WaitForElementPresent(locator1 = "Form#PUBLISH_ICON");

		Click(locator1 = "Form#PUBLISH_ICON");

		var publishFormURL = Form.getPublishedFormPublicURL();

		Form.unpublishForm();

		Navigator.openSpecificURL(url = ${publishFormURL});

		AssertTextEquals(
			locator1 = "Message#ERROR_3_ALT",
			value1 = "This form is not available or it was not published.");
	}

	@summary = "Default summary"
	macro viewFormPlaceholderPage(pageIndex = null) {
		AssertElementPresent(
			key_pageNumber = ${pageIndex},
			locator1 = "Form#PAGE_DEFAULT_DESCRIPTION_BY_NUMBER");
	}

	@summary = "Default summary"
	macro viewFormPlaceholderText(fieldPlaceholderText = null) {
		AssertElementPresent(
			key_value = ${fieldPlaceholderText},
			locator1 = "Form#PLACEHOLDER_TEXT_FIELD");
	}

	@summary = "Default summary"
	macro viewFormPublish(fieldName = null, formName = null, fieldLabel = null) {
		FormsAdminNavigator.openPublishURL();

		var key_formName = ${formName};

		AssertTextEquals(
			locator1 = "Form#PUBLISH_FORM_NAME_FIELD",
			value1 = ${formName});

		FormFields.viewTextLabel(
			fieldLabel = ${fieldLabel},
			fieldName = ${fieldName});
	}

	@summary = "Default summary"
	macro viewFormTemporarilyNotAvailableMessage() {
		AssertElementPresent(locator1 = "Form#FORM_TEMPORARILY_NOT_AVAILABLE");
	}

	@summary = "Default summary"
	macro viewHiddenField(fieldLabel = null) {
		AssertElementPresent(
			key_fieldLabel = ${fieldLabel},
			locator1 = "Form#FIELD_HIDDEN_LABEL");
	}

	@summary = "Default summary"
	macro viewNoEntryCP() {
		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no forms.");
	}

	@summary = "Default summary"
	macro viewPageEmptyField(pageIndex = null) {
		AssertElementPresent(
			key_pageNumber = ${pageIndex},
			locator1 = "Form#PAGE_EMPTY_FORM_FIELD_BY_NUMBER");
	}

	@summary = "Default summary"
	macro viewPageName(formPageName = null, formTitleNumber = null) {
		AssertElementPresent(
			key_pageName = ${formTitleNumber},
			locator1 = "Form#PAGE_NAME",
			pageName = ${formPageName});
	}

	@summary = "Default summary"
	macro viewPageTitleDefault(pageIndex = null) {
		AssertElementPresent(
			key_pageNumber = ${pageIndex},
			locator1 = "Form#PAGE_DEFAULT_TITLE_BY_NUMBER");
	}

	@summary = "Default summary"
	macro viewPreviewExistingSubmission() {
		AssertElementPresent(locator1 = "Form#PREVIEW_EXISTING_SUBMISSIONS");
	}

	@summary = "Default summary"
	macro viewPublishFormSuccessMessage() {
		var key_alertMessage = "The form was published successfully! Access it with this URL";

		AssertVisible(locator1 = "Form#PUBLISH_UNPUBLISH_ICON_CLOSE");
	}

	@summary = "Default summary"
	macro viewRedirectedURL(friendlyURL = null) {
		WaitForElementPresent(
			key_navItem = "Home",
			locator1 = "NavBar#NAV_ITEM_LINK");

		AssertLocation(value1 = ${friendlyURL});
	}

	@summary = "Default summary"
	macro viewReorderPageAndVerifyField(fieldPositionNumber = null, fieldName = null, formPageNumber = null) {
		AssertElementPresent(
			key_fieldName = ${fieldName},
			key_fieldPositionNumber = ${fieldPositionNumber},
			key_formPageNumber = ${formPageNumber},
			locator1 = "Form#FIELD_BODY_IN_SPECIFIC_POSITION");
	}

	@summary = "Default summary"
	macro viewRequiredFieldIndicator() {
		AssertElementPresent(locator1 = "Form#FIELD_REQUIRED_INDICATOR");
	}

	@summary = "Default summary"
	macro viewRichTextPublished(text = null) {
		SelectFrameTop();

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "Rich Text",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			key_richText = ${text},
			locator1 = "Form#SOURCE_FORM_EDITOR_PUBLISHED",
			value1 = ${text});
	}

	@summary = "Default summary"
	macro viewSaveNotification() {
		AssertTextEquals.assertPartialText(
			locator1 = "Form#SAVE_NOTIFICATION",
			value1 = "Draft");
	}

	@summary = "Default summary"
	macro viewSelectFromListOptionOnPreview(optionValue = null, rowPosition = null) {
		AssertElementPresent(
			key_optionValue = ${optionValue},
			key_rowPosition = ${rowPosition},
			locator1 = "FormFields#SELECT_OPTIONS_FIELD_BY_ROW_PREVIEW");
	}

	@summary = "Default summary"
	macro viewSubmitAgainNotPresent() {
		AssertElementNotPresent(
			key_submitAgainButton = "Submit Again",
			locator1 = "Form#SUBMIT_AGAIN_BUTTON");
	}

	@summary = "Default summary"
	macro viewSubmitButtonText(key_buttonText = null) {
		AssertTextEquals(
			locator1 = "FormPortlet#SUBMIT_BUTTON",
			value1 = ${key_buttonText});
	}

	@summary = "Default summary"
	macro viewSubmitNotPresent() {
		AssertElementNotPresent(locator1 = "FormPortlet#SUBMIT_BUTTON");
	}

}