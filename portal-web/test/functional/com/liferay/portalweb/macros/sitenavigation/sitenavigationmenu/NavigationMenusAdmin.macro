definition {

	@summary = "Default summary"
	macro _addItemPage(pageNameList = null, privacy = null) {
		if (isSet(privacy)) {
			Click.clickAt(locator1 = "//div[contains(@class,'container-fluid-max-xl')]/button[contains(@class,'navbar-toggler')][@aria-expanded='false']");

			Navigator.gotoNavItem(navItem = ${privacy});
		}

		Portlet.expandTree();

		for (var pageName : list ${pageNameList}) {
			Check.checkNotVisible(
				key_nodeName = ${pageName},
				locator1 = "Treeview#NODE_CHECKBOX");
		}
	}

	@summary = "Default summary"
	macro _addItemSubmenu(submenuName = null) {
		PortletEntry.inputName(name = ${submenuName});
	}

	@summary = "Default summary"
	macro _addItemURL(urlName = null, url = null, target = null) {
		PortletEntry.inputName(name = ${urlName});

		Type(
			locator1 = "TextInput#URL",
			value1 = ${url});

		if (${target} == "Blank") {
			Check.checkToggleSwitch(
				checkboxName = "Open in a new tab.",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
		else if (${target} == "Self") {
			Uncheck.uncheckToggleSwitch(
				checkboxName = "Open in a new tab.",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
	}

	@summary = "Default summary"
	macro _editItemPage(name = null) {
		Check.checkToggleSwitch(locator1 = "SiteNavigationMenu#USE_CUSTOM_NAME_CHECKBOX");

		if (isSet(name)) {
			Type(
				locator1 = "TextInput#NAME",
				value1 = ${name});
		}
	}

	@summary = "Default summary"
	macro _editItemSubmenu(name = null) {
		if (isSet(name)) {
			Type(
				locator1 = "TextInput#NAME",
				value1 = ${name});
		}
	}

	@summary = "Default summary"
	macro _editItemURL(name = null, url = null) {
		if (isSet(name)) {
			Type(
				locator1 = "TextInput#NAME",
				value1 = ${name});
		}
		else if (isSet(url)) {
			Type(
				locator1 = "TextInput#URL",
				value1 = ${url});
		}
	}

	@summary = "Default summary"
	macro addChildItem(pageNameList = null, itemName = null, item = null, depotName = null, urlName = null, assetTitleList = null, submenuName = null, privacy = null, url = null, target = null) {
		MouseOver(
			key_itemName = ${itemName},
			locator1 = "SiteNavigationMenu#ITEM_ENTRY");

		LexiconCard.clickEllipsisItem(
			card = ${itemName},
			item = "Add Child");

		MenuItem.click(menuItem = ${item});

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(depotName)) {
			ItemSelector.changeWorkspaces(
				customImage = "false",
				workspacesType = "Asset Library");

			LexiconCard.clickCard(card = ${depotName});
		}

		if (${item} == "Page") {
			NavigationMenusAdmin._addItemPage(
				pageNameList = ${pageNameList},
				privacy = ${privacy});

			SelectFrameTop();

			Button.click(button = "Select");
		}

		if ((${item} == "Document") || (${item} == "Web Content Article") || (${item} == "Blogs Entry")) {
			WaitForElementPresent(locator1 = "Icon#CURRENT_DISPLAY_STYLE");

			if (IsElementPresent(key_displayStyle = "list", locator1 = "Icon#CURRENT_DISPLAY_STYLE_ACTIVE")) {
				ClickNoError(
					key_listEntry = ${assetTitle},
					locator1 = "LexiconList#LIST_ENTRY_TITLE");
			}
			else {
				ClickNoError(
					key_card = ${assetTitle},
					locator1 = "Card#CARD");
			}
		}

		if (${item} == "Category") {
			Portlet.expandTree();

			var i = 1;

			for (var assetTitle : list ${assetTitleList}) {
				AssertVisible(
					key_nodeName = ${assetTitle},
					locator1 = "Treeview#NODE_ITEM");

				Click(
					key_nodeName = ${assetTitle},
					locator1 = "Treeview#NODE_UNSELECTED");

				if (${i} == 1) {
					AssertTextEquals(
						locator1 = "Search#SEARCH_INFO",
						value1 = "${i} Item Selected");
				}
				else {
					AssertTextEquals(
						locator1 = "Search#SEARCH_INFO",
						value1 = "${i} Items Selected");
				}

				var i = ${i} + 1;
			}

			SelectFrame.selectFrameTop();

			Button.clickSelect();
		}

		if (${item} == "Submenu") {
			NavigationMenusAdmin._addItemSubmenu(submenuName = ${submenuName});

			Button.click(button = "Add");
		}

		if (${item} == "URL") {
			NavigationMenusAdmin._addItemURL(
				target = ${target},
				url = ${url},
				urlName = ${urlName});

			Button.click(button = "Add");
		}

		if (${item} == "Vocabulary") {
			var i = 1;

			for (var assetTitle : list ${assetTitleList}) {
				LexiconTable.checkTableCheckbox(tableEntry = ${assetTitle});

				var i = ${i} + 1;
			}

			SelectFrame.selectFrameTop();

			Button.clickSelect();
		}

		SelectFrame.selectFrameTop();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro addItem(pageNameList = null, item = null, depotName = null, urlName = null, assetTitleList = null, submenuName = null, privacy = null, url = null, target = null) {
		WaitForLiferayEvent.initializeLiferayEventLog();

		Button.clickAdd();

		MenuItem.click(menuItem = ${item});

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(depotName)) {
			ItemSelector.changeWorkspaces(
				customImage = "false",
				workspacesType = "Asset Library");

			LexiconCard.clickCard(card = ${depotName});
		}

		if (${item} == "Page") {
			NavigationMenusAdmin._addItemPage(
				pageNameList = ${pageNameList},
				privacy = ${privacy});

			SelectFrameTop();

			Button.click(button = "Select");
		}

		if ((${item} == "Document") || (${item} == "Web Content Article") || (${item} == "Blogs Entry")) {
			WaitForElementPresent(locator1 = "Icon#CURRENT_DISPLAY_STYLE");

			if (IsElementPresent(key_displayStyle = "list", locator1 = "Icon#CURRENT_DISPLAY_STYLE_ACTIVE")) {
				ClickNoError(
					key_listEntry = ${assetTitle},
					locator1 = "LexiconList#LIST_ENTRY_TITLE");
			}
			else {
				ClickNoError(
					key_card = ${assetTitle},
					locator1 = "Card#CARD");
			}
		}

		if (${item} == "Category") {
			Portlet.expandTree();

			var i = 1;

			for (var assetTitle : list ${assetTitleList}) {
				AssertVisible(
					key_nodeName = ${assetTitle},
					locator1 = "Treeview#NODE_ITEM");

				Click(
					key_nodeName = ${assetTitle},
					locator1 = "Treeview#NODE_UNSELECTED");

				if (${i} == 1) {
					AssertTextEquals(
						locator1 = "Search#SEARCH_INFO",
						value1 = "${i} Item Selected");
				}
				else {
					AssertTextEquals(
						locator1 = "Search#SEARCH_INFO",
						value1 = "${i} Items Selected");
				}

				var i = ${i} + 1;
			}

			SelectFrame.selectFrameTop();

			Button.clickSelect();
		}

		if (${item} == "Submenu") {
			NavigationMenusAdmin._addItemSubmenu(submenuName = ${submenuName});

			Button.click(button = "Add");
		}

		if (${item} == "URL") {
			NavigationMenusAdmin._addItemURL(
				target = ${target},
				url = ${url},
				urlName = ${urlName});

			Button.click(button = "Add");
		}

		if (${item} == "Vocabulary") {
			var i = 1;

			for (var assetTitle : list ${assetTitleList}) {
				LexiconTable.checkTableCheckbox(tableEntry = ${assetTitle});

				var i = ${i} + 1;
			}

			SelectFrame.selectFrameTop();

			Button.clickSelect();
		}

		SelectFrame.selectFrameTop();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro addMenu(menuName = null) {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = ${menuName});

		Modal.save();
	}

	@summary = "Default summary"
	macro addSiblingItem(pageNameList = null, item = null, depotName = null, urlName = null, privacy = null, url = null, target = null, itemName = null, assetTitleList = null, submenuName = null, relationship = null) {
		MouseOver(
			key_itemName = ${itemName},
			locator1 = "SiteNavigationMenu#ITEM_ENTRY");

		Click(
			key_itemName = ${itemName},
			key_relationship = ${relationship},
			locator1 = "SiteNavigationMenu#ITEM_ENTRY_ADD_ICON");

		MenuItem.click(menuItem = ${item});

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(depotName)) {
			ItemSelector.changeWorkspaces(
				customImage = "false",
				workspacesType = "Asset Library");

			LexiconCard.clickCard(card = ${depotName});
		}

		if (${item} == "Page") {
			NavigationMenusAdmin._addItemPage(
				pageNameList = ${pageNameList},
				privacy = ${privacy});

			SelectFrameTop();

			Button.click(button = "Select");
		}

		if ((${item} == "Document") || (${item} == "Web Content Article") || (${item} == "Blogs Entry")) {
			WaitForElementPresent(locator1 = "Icon#CURRENT_DISPLAY_STYLE");

			if (IsElementPresent(key_displayStyle = "list", locator1 = "Icon#CURRENT_DISPLAY_STYLE_ACTIVE")) {
				ClickNoError(
					key_listEntry = ${assetTitle},
					locator1 = "LexiconList#LIST_ENTRY_TITLE");
			}
			else {
				ClickNoError(
					key_card = ${assetTitle},
					locator1 = "Card#CARD");
			}
		}

		if (${item} == "Category") {
			Portlet.expandTree();

			var i = 1;

			for (var assetTitle : list ${assetTitleList}) {
				AssertVisible(
					key_nodeName = ${assetTitle},
					locator1 = "Treeview#NODE_ITEM");

				Click(
					key_nodeName = ${assetTitle},
					locator1 = "Treeview#NODE_UNSELECTED");

				if (${i} == 1) {
					AssertTextEquals(
						locator1 = "Search#SEARCH_INFO",
						value1 = "${i} Item Selected");
				}
				else {
					AssertTextEquals(
						locator1 = "Search#SEARCH_INFO",
						value1 = "${i} Items Selected");
				}

				var i = ${i} + 1;
			}

			SelectFrame.selectFrameTop();

			Button.clickSelect();
		}

		if (${item} == "Submenu") {
			NavigationMenusAdmin._addItemSubmenu(submenuName = ${submenuName});

			Button.click(button = "Add");
		}

		if (${item} == "URL") {
			NavigationMenusAdmin._addItemURL(
				target = ${target},
				url = ${url},
				urlName = ${urlName});

			Button.click(button = "Add");
		}

		if (${item} == "Vocabulary") {
			var i = 1;

			for (var assetTitle : list ${assetTitleList}) {
				LexiconTable.checkTableCheckbox(tableEntry = ${assetTitle});

				var i = ${i} + 1;
			}

			SelectFrame.selectFrameTop();

			Button.clickSelect();
		}

		SelectFrame.selectFrameTop();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro addTranslation(itemName = null, item = null, translation = null, locale = null) {
		NavigationMenusAdmin.openItemSidebar(itemName = ${itemName});

		if ((${item} != "Submenu") && (${item} != "URL")) {
			Check.checkToggleSwitch(locator1 = "SiteNavigationMenu#USE_CUSTOM_NAME_CHECKBOX");
		}

		PortletEntry.changeLocale(
			fieldName = "Name",
			locale = ${locale});

		PortletEntry.inputName(name = ${translation});

		Button.clickSave();
	}

	@summary = "Default summary"
	macro changeDisplayTemplate(displayTemplate = null) {
		Select(
			key_fieldLabel = "Display Template",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${displayTemplate});
	}

	@summary = "Default summary"
	macro configureMenuType(menuType = null, navigationMenu = null, oldPrimaryNavigationMenu = null) {
		if (${menuType} == "Primary Navigation") {
			LexiconEntry.gotoEntryMenuItemNoError(
				menuItem = ${menuType},
				rowEntry = ${navigationMenu});

			if (isSet(oldPrimaryNavigationMenu)) {
				AssertConfirm(value1 = "Do you want to replace ${navigationMenu} for ${oldPrimaryNavigationMenu} as primary navigation? This action will affect all the pages using primary navigation.");
			}
		}
		else {
			LexiconEntry.gotoEntryMenuItem(
				menuItem = ${menuType},
				rowEntry = ${navigationMenu});
		}

		AssertVisible(
			key_rowEntry = ${navigationMenu},
			key_rowText = ${menuType},
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_TEXT");
	}

	@summary = "Default summary"
	macro deleteAllCP() {
		PortletEntry.selectAll();

		Click(
			key_text = "trash",
			locator1 = "ManagementBar#ANY_ICON");

		AssertTextEquals(
			locator1 = "Modal#BODY",
			value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro deleteCP(navigationMenuName = null) {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Delete",
			rowEntry = ${navigationMenuName});

		AssertTextEquals(
			locator1 = "Modal#BODY",
			value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro deleteItem(itemName = null, actionName = null) {
		MouseOver.mouseOverNotVisible(
			key_card = ${itemName},
			locator1 = "Card#CARD_ELLIPSIS");

		LexiconCard.clickEllipsisItem(
			card = ${itemName},
			item = "Delete");

		if (IsElementPresent(locator1 = "Modal#HEADER")) {
			AssertTextEquals(
				locator1 = "Modal#HEADER",
				value1 = "Delete Item");

			AssertTextEquals.assertPartialText(
				locator1 = "Modal#BODY",
				value1 = "The item you want to delete has children that also can be removed.");

			Check.checkNotVisible(
				key_text = ${actionName},
				locator1 = "TextInput#ANY");

			Button.clickDelete();
		}
	}

	@summary = "Default summary"
	macro editItem(itemName = null, item = null, submenuName = null, name = null, assetTitle = null, showWarningMessage = null, warningMessage = null, customName = null, pageName = null, fieldValue = null, url = null, customField = null) {
		NavigationMenusAdmin.openItemSidebar(itemName = ${itemName});

		if (isSet(useCustomName)) {
			NavigationMenusAdmin._editItemPage();
		}

		if (${item} == "Page") {
			if (isSet(customName)) {
				NavigationMenusAdmin._editItemPage(name = ${customName});
			}

			if (isSet(pageName)) {
				Click(locator1 = "Button#CHOOSE");

				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				Portlet.expandTree();

				Click(
					key_nodeName = ${pageName},
					locator1 = "Treeview#NODE_UNSELECTED");

				SelectFrameTop();

				Button.click(button = "Select");
			}
		}
		else if (${item} == "Submenu") {
			NavigationMenusAdmin._editItemSubmenu(submenuName = ${submenuName});
		}
		else if (${item} == "URL") {
			NavigationMenusAdmin._editItemURL(
				name = ${name},
				url = ${url});
		}
		else if (${item} == "Category") {
			Click(
				ariaLabel = "Change Item",
				locator1 = "Button#ANY_WITH_ARIA_LABEL");

			SelectFrame(value1 = "relative=top");

			AssertTextEquals(
				locator1 = "Modal#HEADER",
				value1 = "Select Category");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Portlet.expandTree();

			AssertVisible(
				key_nodeName = ${assetTitle},
				locator1 = "Treeview#NODE_ITEM");

			Click(
				key_nodeName = ${assetTitle},
				locator1 = "Treeview#NODE_UNSELECTED");

			SelectFrame.selectFrameTop();

			InputField.viewText(
				fieldLabel = "Item",
				text = ${assetTitle});

			AssertTextEquals(
				key_itemName = ${itemName},
				locator1 = "SiteNavigationMenu#SIDEBAR_ITEM_NAME",
				value1 = ${itemName});
		}

		if (isSet(customField)) {
			Type(
				key_fieldLabel = ${customField},
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = ${fieldValue});
		}

		if (${showWarningMessage} == "true") {
			NavigationMenusAdmin.viewItemWarningMessage(warningMessage = ${warningMessage});
		}
		else if (${showWarningMessage} == "false") {
			NavigationMenusAdmin.viewItemWarningMessageNotPresent();
		}

		if (!(isSet(configureWithoutSave))) {
			PortletEntry.save();
		}
	}

	@summary = "Default summary"
	macro editMenu(navigationMenuName = null) {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = ${navigationMenuName});
	}

	@summary = "Default summary"
	macro markAsPrimaryNavigation(newMenuName = null, oldMenuName = null) {
		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Primary Navigation",
			rowEntry = ${newMenuName});

		AssertConfirm(value1 = "Do you want to replace ${newMenuName} for ${oldMenuName} as primary navigation? This action will affect all the pages using primary navigation.");
	}

	@summary = "Default summary"
	macro openItemSidebar(itemName = null) {
		Click(
			key_itemName = ${itemName},
			locator1 = "SiteNavigationMenu#ITEM_ENTRY");

		WaitForElementPresent(locator1 = "SiteNavigationMenu#SIDEBAR_OPEN");

		AssertTextEquals(
			key_itemName = ${itemName},
			locator1 = "SiteNavigationMenu#SIDEBAR_ITEM_NAME",
			value1 = ${itemName});
	}

	@summary = "Default summary"
	macro openNavigationMenusAdmin(siteURLKey = null) {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_site_navigation_admin_web_portlet_SiteNavigationAdminPortlet");
	}

	@summary = "Default summary"
	macro openPreviewMenu() {
		WaitForLiferayEvent.initializeLiferayEventLog();

		Button.click(button = "Preview");
	}

	@summary = "Default summary"
	macro toggleAutomaticallyAddNewPagesToMenu(toggleValue = null) {
		Click(locator1 = "SiteNavigationMenu#SIDEBAR_COG");

		if (${toggleValue} == "enable") {
			Check.checkNotVisible(
				checkboxName = "When creating a new page, display an option to add it to this navigation menu.",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
		else if (${toggleValue} == "disable") {
			Uncheck.uncheckNotVisible(
				checkboxName = "When creating a new page, display an option to add it to this navigation menu.",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
		else {
			fail("Set ${toggleValue} to enable or disable");
		}

		Button.clickSave();
	}

	@summary = "Default summary"
	macro viewDisplayTemplate(displayTemplate = null) {
		AssertSelectedLabel(
			key_fieldLabel = "Display Template",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${displayTemplate});
	}

	@summary = "Default summary"
	macro viewItem(itemName = null) {
		AssertElementPresent(
			key_itemName = ${itemName},
			locator1 = "SiteNavigationMenu#ITEM_ENTRY");
	}

	@summary = "Default summary"
	macro viewItemNested(groupName = null, site = null, parentItemNameList = null, siteNavigationMenuName = null, itemNameList = null) {
		var list1 = ListUtil.newListFromString(${itemNameList});
		var list2 = ListUtil.newListFromString(${parentItemNameList});
		var size = ListUtil.size(${list1});
		var i = 0;

		while (${i} != ${size}) {
			var itemName = ListUtil.get(${list1}, ${i});
			var parentItemName = ListUtil.get(${list2}, ${i});

			var parentItemId = JSONSitenavigationSetter.setSiteNavigationMenuItemId(
				groupName = ${groupName},
				site = ${site},
				siteNavigationMenuItemName = ${parentItemName},
				siteNavigationMenuName = ${siteNavigationMenuName});

			AssertElementPresent(
				key_itemName = ${itemName},
				key_parentItemId = ${parentItemId},
				locator1 = "SiteNavigationMenu#ITEM_ENTRY_NESTED");

			var i = ${i} + 1;

			var i = StringUtil.valueOf(${i});
		}
	}

	@summary = "Default summary"
	macro viewItemNotNested(itemNameList = null) {
		for (var itemName : list ${itemNameList}) {
			AssertElementPresent(
				key_itemName = ${itemName},
				key_parentItemId = 0,
				locator1 = "SiteNavigationMenu#ITEM_ENTRY_NESTED");
		}
	}

	@summary = "Default summary"
	macro viewItemNotPresent(itemNameList = null) {
		for (var itemName : list ${itemNameList}) {
			AssertElementNotPresent(
				key_itemName = ${itemName},
				locator1 = "SiteNavigationMenu#ITEM_ENTRY");
		}
	}

	@summary = "Default summary"
	macro viewItemOrder(itemName = null, index = null) {
		AssertTextEquals.assertPartialText(
			key_index = ${index},
			locator1 = "SiteNavigationMenu#ITEM_ENTRY_N",
			value1 = ${itemName});
	}

	@summary = "Default summary"
	macro viewItemStatus(itemName = null, itemStatus = null) {
		if (!(isSet(index))) {
			var index = 1;
		}

		AssertTextEquals(
			index = ${index},
			key_itemName = ${itemName},
			locator1 = "SiteNavigationMenu#ITEM_ENTRY_STATUS",
			value1 = ${itemStatus});
	}

	@summary = "Default summary"
	macro viewItemWarningIcon(itemName = null) {
		AssertVisible(
			key_card = ${itemName},
			key_icon = "warning",
			locator1 = "Card#CARD_STICKER");
	}

	@summary = "Default summary"
	macro viewItemWarningIconNotPresent(itemName = null) {
		AssertElementNotPresent(
			key_card = ${itemName},
			key_icon = "warning",
			locator1 = "Card#CARD_STICKER");
	}

	@summary = "Default summary"
	macro viewItemWarningMessage(itemName = null, warningMessage = null) {
		if (isSet(itemName)) {
			NavigationMenusAdmin.openItemSidebar(itemName = ${itemName});
		}

		if (${warningMessage} == "No Display Page") {
			AssertElementPresent(
				key_warningMessage = "No Display Page",
				locator1 = "Message#WARNING_SPECIFIC");

			AssertTextEquals(
				locator1 = "Message#SUBTITLE",
				value1 = "This item does not have a display page. Items without a display page do not have links and are hidden from menus.");
		}
		else if (${warningMessage} == "No categories inside") {
			AssertElementPresent(
				key_warningMessage = "No categories inside",
				locator1 = "Message#WARNING_SPECIFIC");

			AssertTextEquals(
				locator1 = "Message#SUBTITLE",
				value1 = "Vocabularies without categories are hidden from Navigation Menus.");
		}
	}

	@summary = "Default summary"
	macro viewItemWarningMessageNotPresent(itemName = null) {
		if (isSet(itemName)) {
			NavigationMenusAdmin.openItemSidebar(itemName = ${itemName});
		}

		AssertElementNotPresent(
			key_warningMessage = "No Display Page",
			locator1 = "Message#WARNING_SPECIFIC");

		AssertElementNotPresent(
			locator1 = "Message#SUBTITLE",
			value1 = "This item does not have a display page. Items without display page do not have links and are hidden from menus.");
	}

	@summary = "Default summary"
	macro viewMenuTitle(navigationMenu = null) {
		LexiconTable.viewTableEntryTitle(tableEntry = ${navigationMenu});
	}

	@summary = "Default summary"
	macro viewMenuType(rowEntry = null, menuType = null) {
		AssertTextEquals(
			key_markedAs = ${menuType},
			key_rowEntry = ${rowEntry},
			locator1 = "SiteNavigationMenu#MENU_MARKED_AS",
			value1 = ${menuType});
	}

}