definition {

	@summary = "Default summary"
	macro addCP(passwordPolicyName = null) {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = ${passwordPolicyName});

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro assignMembers(bulkAssign = null, passwordPolicyName = null, assigneeNames = null, assigneeType = null) {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Assign Members",
			rowEntry = ${passwordPolicyName});

		Navigator.gotoNavItem(navItem = ${assigneeType});

		LexiconEntry.gotoAdd();

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		var key_rowEntry = ${assigneeName};

		if (${bulkAssign} == "true") {
			for (var assigneeName : list ${assigneeNames}) {
				LexiconEntry.selectEntry(key_rowEntry = ${assigneeName});
			}
		}
		else {
			LexiconEntry.selectEntry(key_rowEntry = ${assigneeName});
		}

		SelectFrameTop();

		Button.clickAdd();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro bulkDeleteCP() {
		if (isSet(passwordPolicyName)) {
			for (var passwordPolicyName : list ${passwordPolicyName}) {
				LexiconEntry.selectEntry(rowEntry = ${passwordPolicyName});
			}
		}
		else {
			PortletEntry.selectAll();
		}

		ClickNoError(
			key_text = "trash",
			locator1 = "ManagementBar#ANY_ICON");

		AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro deleteCP(passwordPolicyName = null) {
		LexiconEntry.delete(rowEntry = ${passwordPolicyName});

		LexiconEntry.viewNoEntry(rowEntry = ${passwordPolicyName});
	}

	@summary = "Default summary"
	macro disableChangeable(passwordPolicyName = null, passwordPolicyPanel = null) {
		PasswordPoliciesNavigator.gotoPolicyPanel(
			passwordPolicyName = ${passwordPolicyName},
			passwordPolicyPanel = ${passwordPolicyPanel});

		Uncheck.uncheckToggleSwitch(
			key_toggleSwitchLabel = "Changeable",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro disableHistory(passwordPolicyName = null, passwordPolicyPanel = null) {
		PasswordPoliciesNavigator.gotoPolicyPanel(
			passwordPolicyName = ${passwordPolicyName},
			passwordPolicyPanel = ${passwordPolicyPanel});

		Uncheck.uncheckToggleSwitch(
			key_toggleSwitchLabel = "Enable History",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro disableLockout(passwordPolicyName = null, passwordPolicyPanel = null) {
		PasswordPoliciesNavigator.gotoPolicyPanel(
			passwordPolicyName = ${passwordPolicyName},
			passwordPolicyPanel = ${passwordPolicyPanel});

		Uncheck.uncheckToggleSwitch(
			key_toggleSwitchLabel = "Enable Lockout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro enableChangeable(resetTicketMaxAge = null, passwordPolicyName = null, passwordPolicyPanel = null, enableChangeRequired = null, minimumAge = null) {
		PasswordPoliciesNavigator.gotoPolicyPanel(
			passwordPolicyName = ${passwordPolicyName},
			passwordPolicyPanel = ${passwordPolicyPanel});

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Changeable",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		if (${enableChangeRequired} == "true") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Change Required",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Change Required",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		if (isSet(minimumAge)) {
			Select(
				key_selectFieldLabel = "Minimum Age",
				locator1 = "Select#ANY",
				value1 = ${minimumAge});
		}

		if (isSet(resetTicketMaxAge)) {
			Select(
				key_selectFieldLabel = "Reset Ticket Max Age",
				locator1 = "Select#ANY",
				value1 = ${resetTicketMaxAge});
		}

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro enableHistory(passwordPolicyName = null, passwordPolicyPanel = null, historyCount = null) {
		PasswordPoliciesNavigator.gotoPolicyPanel(
			passwordPolicyName = ${passwordPolicyName},
			passwordPolicyPanel = ${passwordPolicyPanel});

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Enable History",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		if (isSet(historyCount)) {
			Select(
				key_selectFieldLabel = "History Count",
				locator1 = "Select#ANY",
				value1 = ${historyCount});
		}

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro enableLockout(passwordPolicyName = null, lockoutDuration = null, resetFailureCount = null, maximumFailure = null) {
		PasswordPoliciesNavigator.gotoPolicy(passwordPolicyName = ${passwordPolicyName});

		Panel.expandPanel(panel = "Lockout");

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Enable Lockout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		if (isSet(maximumFailure)) {
			Type(
				key_text = "Maximum Failure",
				locator1 = "TextInput#ANY",
				value1 = ${maximumFailure});
		}

		if (isSet(resetFailureCount)) {
			Select(
				key_selectFieldLabel = "Reset Failure Count",
				locator1 = "Select#ANY",
				value1 = ${resetFailureCount});
		}

		if (isSet(lockoutDuration)) {
			Select(
				key_selectFieldLabel = "Lockout Duration",
				locator1 = "Select#ANY",
				value1 = ${lockoutDuration});
		}

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro enableSyntaxChecking(passwordPolicyName = null, minimumAlphaNumeric = null, minimumLength = null, minimumSymbols = null, regularExpression = null, allowDictionaryWords = null, minimumLowerCase = null, minimumNumbers = null, minimumUpperCase = null) {
		PasswordPoliciesNavigator.gotoPolicy(passwordPolicyName = ${passwordPolicyName});

		Panel.expandPanel(panel = "Password Syntax Checking");

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Enable Syntax Checking",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		if (${allowDictionaryWords} == "false") {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Allow Dictionary Words",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		if (isSet(minimumAlphaNumeric)) {
			Type(
				key_text = "Minimum Alpha Numeric",
				locator1 = "TextInput#ANY",
				value1 = ${minimumAlphaNumeric});
		}

		if (isSet(minimumLength)) {
			Type(
				key_text = "Minimum Length",
				locator1 = "TextInput#ANY",
				value1 = ${minimumLength});
		}

		if (isSet(minimumLowerCase)) {
			Type(
				key_text = "Minimum Lower Case",
				locator1 = "TextInput#ANY",
				value1 = ${minimumLowerCase});
		}

		if (isSet(minimumNumbers)) {
			Type(
				key_text = "Minimum Numbers",
				locator1 = "TextInput#ANY",
				value1 = ${minimumNumbers});
		}

		if (isSet(minimumSymbols)) {
			Type(
				key_text = "Minimum Symbols",
				locator1 = "TextInput#ANY",
				value1 = ${minimumSymbols});
		}

		if (isSet(minimumUpperCase)) {
			Type(
				key_text = "Minimum Upper Case",
				locator1 = "TextInput#ANY",
				value1 = ${minimumUpperCase});
		}

		if (isSet(regularExpression)) {
			Type(
				key_text = "regex",
				locator1 = "TextArea#ANY",
				value1 = ${regularExpression});
		}

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro openPasswordPoliciesAdmin(baseURL = null) {
		Navigator.openWithAppendToBaseURL(
			baseURL = ${baseURL},
			urlAppend = "group/control_panel/manage?p_p_id=com_liferay_password_policies_admin_web_portlet_PasswordPoliciesAdminPortlet");
	}

	@summary = "Default summary"
	macro removeAssignee(assigneeNames = null, bulkRemove = null) {
		if (${bulkRemove} == "true") {
			for (var assigneeName : list ${assigneeNames}) {
				LexiconEntry.selectEntry(key_rowEntry = ${assigneeName});
			}
		}
		else {
			LexiconEntry.selectEntry(key_rowEntry = ${assigneeName});
		}

		ClickNoError(
			key_text = "trash",
			locator1 = "ManagementBar#ANY_ICON");

		AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro tearDownCP() {
		var passwordPolicyName = "Default Password Policy";

		PasswordPolicies.openPasswordPoliciesAdmin();

		var key_passwordPolicyName = ${passwordPolicyName};

		LexiconEntry.openEntryMenu(rowEntry = ${passwordPolicyName});

		MenuItem.click(menuItem = "Edit");

		PasswordPolicies.enableChangeable(
			minimumAge = "None",
			passwordPolicyName = "Default Password Policy",
			passwordPolicyPanel = "Password Changes");

		Uncheck.uncheckToggleSwitch(
			key_toggleSwitchLabel = "Enable Syntax Checking",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Uncheck.uncheckToggleSwitch(
			key_toggleSwitchLabel = "Enable History",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Uncheck.uncheckToggleSwitch(
			key_toggleSwitchLabel = "Enable Expiration",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Uncheck.uncheckToggleSwitch(
			key_toggleSwitchLabel = "Enable Lockout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro togglePasswordExpiration(passwordPolicyName = null, minimumAge = null, graceLimit = null, warningTime = null, enablePasswordExpiration = null) {
		PasswordPoliciesNavigator.gotoPolicyPanel(
			passwordPolicyName = ${passwordPolicyName},
			passwordPolicyPanel = "Password Expiration");

		if (${enablePasswordExpiration} == "true") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Enable Expiration",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Enable Expiration",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		if (isSet(minimumAge)) {
			Select(
				key_selectFieldLabel = "Maximum Age",
				locator1 = "Select#ANY",
				value1 = ${minimumAge});
		}

		if (isSet(warningTime)) {
			Select(
				key_selectFieldLabel = "Warning Time",
				locator1 = "Select#ANY",
				value1 = ${warningTime});
		}

		if (isSet(graceLimit)) {
			Type(
				key_text = "Grace Limit",
				locator1 = "TextInput#ANY",
				value1 = ${graceLimit});
		}

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro viewAssignees(passwordPolicyName = null, assigneeName = null, assigneeType = null) {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Assign Members",
			rowEntry = ${passwordPolicyName});

		Navigator.gotoNavItem(navItem = ${assigneeType});

		if (isSet(assigneeNames)) {
			for (var assigneeNames : list ${assigneeNames}) {
				LexiconEntry.viewEntryName(rowEntry = ${assigneeNames});
			}
		}
		else {
			LexiconEntry.viewEntryName(rowEntry = ${assigneeName});
		}
	}

	@summary = "Default summary"
	macro viewPasswordPolicyLockout(lockoutToggle = null, maximumFailure = null) {
		var key_panel = "Lockout";

		if (IsElementPresent(locator1 = "Panel#PANEL_COLLAPSED")) {
			Panel.expandPanel(panel = "Lockout");
		}

		if (${lockoutToggle} == "disabled") {
			AssertNotChecked.assertNotCheckedNotVisible(
				key_toggleSwitchLabel = "Enable Lockout",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else {
			AssertChecked.assertCheckedNotVisible(
				key_toggleSwitchLabel = "Enable Lockout",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

			if (isSet(maximumFailure)) {
				AssertTextEquals(
					key_text = "Maximum Failure",
					locator1 = "TextInput#ANY",
					value1 = ${maximumFailure});
			}
			else {
				AssertTextEquals(
					key_text = "Maximum Failure",
					locator1 = "TextInput#ANY",
					value1 = 3);
			}
		}
	}

}