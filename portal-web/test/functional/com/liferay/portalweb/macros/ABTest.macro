definition {

	@summary = "Default summary"
	macro accessABTestInAC(itemName = null) {
		var key_itemName = ${itemName};

		Click(locator1 = "ABTest#OPEN_ITEM");
	}

	@summary = "Default summary"
	macro assertDXPABTestEmptyState() {
		AssertVisible(
			key_title = "No active tests were found for the selected experience.",
			locator1 = "Header#H4_TITLE");

		AssertVisible(
			key_message = "Create a new A/B test to optimize your page or experience.",
			locator1 = "ABTest#SIDEBAR_MESSAGE");

		AssertElementPresent(
			key_text = "Create Test",
			locator1 = "Button#ANY");
	}

	@summary = "Default summary"
	macro assertTerminateTest() {
		AssertTextEquals.assertPartialText(
			locator1 = "Modal#MODAL_CONTENT",
			value1 = "Are you sure you want to terminate this test?");

		Click(locator1 = "ACSettings#CONFIRMATION_BUTTON");

		Alert.viewSuccessMessageText(successMessage = "Success:Your request completed successfully.");
	}

	@summary = "Default summary"
	macro checkAnalyticsCloudInfo(abTestTitle) {
		if (IsElementPresent(key_text = "Review and Run Test", locator1 = "Button#ANY")) {
			ABTest.runTest();
		}

		ABTest.viewDataInAnalyticsCloud();

		SelectWindow(value1 = "name=undefined");

		if (IsElementPresent(locator1 = "AnalyticsCloudConnection#ANALYTICS_CLOUD_USER_LOGIN_FIELD")) {
			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = PropsUtil.get("default.admin.password"));
		}

		AssertTextEquals(
			abTestTitle = ${abTestTitle},
			locator1 = "ABTest#AB_TEST_TITLE_AC_SIDE",
			value1 = ${abTestTitle});

		Close(locator1 = "title=Tests - Analytics Cloud");
	}

	@summary = "Default summary"
	macro checkVariantAnalyticsCloud(variantNames) {
		var index = 1;

		if (IsElementPresent(key_text = "Review and Run Test", locator1 = "Button#ANY")) {
			ABTest.runTest();
		}

		ABTest.viewDataInAnalyticsCloud();

		SelectWindow(value1 = "name=undefined");

		if (IsElementPresent(locator1 = "AnalyticsCloudConnection#ANALYTICS_CLOUD_USER_LOGIN_FIELD")) {
			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = PropsUtil.get("default.admin.password"));
		}

		for (var variantNames : list ${variantNames}) {
			var index = ${index} + 1;

			AssertElementPresent(
				key_index = ${index},
				locator1 = "ABTest#REVIEW_VARIANTS_ANALYTICS_CLOUD",
				name = ${variantNames});
		}

		Close(locator1 = "title=Tests - Analytics Cloud");
	}

	@summary = "Default summary"
	macro createABTest(goal, testTitle) {
		if (IsElementPresent(locator1 = "ABTest#CLOSED_ADMIN_PANEL")) {
			Click(locator1 = "ABTest#AB_TEST_BUTTON");
		}

		if (IsElementPresent(key_text = "Create Test", locator1 = "Button#ANY")) {
			Button.click(button = "Create Test");
		}
		else {
			Button.click(button = "Create New Test");
		}

		ABTest.fillInput(
			key_testTitle = ${testTitle},
			labelValue = "Test Name");

		ABTest.selectGoal(key_goal = ${goal});

		Click(locator1 = "Modal#SAVE_BUTTON");
	}

	@summary = "Default summary"
	macro createVariant(variantName) {
		Button.click(button = "Create Variant");

		ABTest.fillInput(
			key_testTitle = ${variantName},
			labelValue = "Name");

		Click(
			key_name = "Save",
			locator1 = "Button#GENERAL_BUTTON_MODAL_FOOTER");

		WaitForElementNotPresent(locator1 = "Modal#MODAL_CONTENT");
	}

	@summary = "Default summary"
	macro deleteABTest() {
		if (IsElementNotPresent(locator1 = "Modal#MODAL_CONTENT")) {
			if (IsElementPresent(locator1 = "ABTest#KEBAB_AB_TEST")) {
				Click(locator1 = "ABTest#KEBAB_AB_TEST");

				MenuItem.clickNoError(menuItem = "Delete");
			}
			else {
				Click(locator1 = "Button#TRASH_ENABLED");
			}
		}

		Click(locator1 = "ACSettings#CONFIRMATION_BUTTON");

		Alert.viewSuccessMessageText(successMessage = "Success:Your request completed successfully.");
	}

	@summary = "Default summary"
	macro deleteVariant(key_index = null) {
		if (!(isSet(key_index))) {
			var key_index = 1;
		}

		Click(locator1 = "ABTest#VARIANT_DROPDOWN");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertTextEquals.assertPartialText(
			locator1 = "Modal#BODY",
			value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro editVariant(variantName) {
		Click(
			key_variantName = ${variantName},
			locator1 = "ABTest#EDIT_VARIANT_BUTTON");
	}

	@summary = "Default summary"
	macro editVariantName(key_index = null) {
		if (!(isSet(key_index))) {
			var key_index = 1;
		}

		Click(locator1 = "ABTest#VARIANT_DROPDOWN");

		MenuItem.clickNoError(menuItem = "Edit");
	}

	@summary = "Default summary"
	macro fillInput(labelValue, key_testTitle) {
		Click(
			key_fieldLabel = ${labelValue},
			locator1 = "Modal#INPUT_WITH_LABEL");

		Type(
			key_fieldLabel = ${labelValue},
			locator1 = "Modal#INPUT_WITH_LABEL",
			value1 = ${key_testTitle});
	}

	@summary = "Default summary"
	macro getVariantImprovementNumberInDXP(variantName) {
		var key_variantName = ${variantName};
		var improvementNumber = selenium.getText("ABTest#IMPROVEMENT_NUMBER");

		return ${improvementNumber};
	}

	@summary = "Default summary"
	macro openABTestInAC() {
		ABTest.viewDataInAnalyticsCloud();

		SelectWindow(value1 = "name=undefined");

		if (IsElementPresent(locator1 = "AnalyticsCloudConnection#ANALYTICS_CLOUD_USER_LOGIN_FIELD")) {
			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = PropsUtil.get("default.admin.password"));

			Close.closeWindow();

			ABTest.viewDataInAnalyticsCloud();

			SelectWindow(locator1 = "name=undefined");
		}
	}

	@summary = "Default summary"
	macro openABTestPanel() {
		if (IsNotVisible(locator1 = "ABTest#AB_TEST_SIDE_BAR")) {
			Click(locator1 = "ABTest#AB_TEST_BUTTON");
		}

		while (IsNotVisible(locator1 = "ABTest#AB_TEST_SIDE_BAR")) {
			WaitForElementPresent(locator1 = "ABTest#AB_TEST_SIDE_BAR");
		}
	}

	@summary = "Default summary"
	macro openEditABTest() {
		Click(locator1 = "ABTest#KEBAB_AB_TEST");

		MenuItem.clickNoError(menuItem = "Edit");
	}

	@summary = "Default summary"
	macro publishVariant(variantName) {
		Click(
			key_variantName = ${variantName},
			locator1 = "ABTest#PUBLISH_VARIANT");

		Click(
			key_text = "Publish",
			locator1 = "Button#ANY");

		Alert.viewSuccessMessageText(successMessage = "Success:${variantName} was published successfully.");
	}

	@summary = "Default summary"
	macro runTest() {
		Button.click(button = "Review and Run Test");

		Click(
			key_name = "Run",
			locator1 = "Button#GENERAL_BUTTON_MODAL_FOOTER");

		Click(
			key_name = "OK",
			locator1 = "Button#GENERAL_BUTTON_MODAL_FOOTER");
	}

	@summary = "Default summary"
	macro saveVariant() {
		Click(
			key_text = "Save Variant",
			locator1 = "Button#ANY");
	}

	@summary = "Default summary"
	macro selectElementID() {
		if (!(isSet(key_index))) {
			var key_index = 1;
		}

		Click(
			key_text = "Select Clickable Element",
			locator1 = "Button#ANY_SECONDARY");

		Click(locator1 = "ABTest#SELECT_CLICKABLE_ELEMENT");

		Button.click(button = "Set Element as Click Target");

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "ABTest#TARGET_LABEL",
			value1 = "Target");
	}

	@summary = "Default summary"
	macro selectGoal(key_goal = null) {
		Select(
			locator1 = "Modal#SELECT_WITH_LABEL",
			selectLabel = "Select Goal",
			value1 = ${key_goal});
	}

	@summary = "Default summary"
	macro statusABTestInDXP(status) {
		AssertElementPresent(
			key_status = ${status},
			locator1 = "ImportExport#IMPORT_EXPORT_STATUS");
	}

	@summary = "Default summary"
	macro switchVariant(variantName = null) {
		ABTest.openABTestPanel();

		Click(
			key_variantName = ${variantName},
			locator1 = "ABTest#VARIANT_TITLE");
	}

	@summary = "Default summary"
	macro takeElementID() {
		if (!(isSet(key_index))) {
			var key_index = 1;
		}

		Click(
			key_text = "Select Clickable Element",
			locator1 = "Button#ANY_SECONDARY");

		Click(locator1 = "ABTest#SELECT_CLICKABLE_ELEMENT");

		var idelement = selenium.getAttribute("//div[contains(@class,'text-truncate')]@title");

		var idelement = StringUtil.substring(${idelement}, 1, 19);

		Click(locator1 = "ABTest#X_BUTTON_TARGET_ID_ELEMENT");

		return ${idelement};
	}

	@summary = "Default summary"
	macro terminateTest() {
		if (IsElementPresent(key_text = "Terminate Test", locator1 = "Button#ANY")) {
			Button.clickNoError(button = "Terminate Test");
		}
		else {
			Refresh();

			Button.clickNoError(button = "Terminate Test");
		}

		WaitForElementPresent(locator1 = "Modal#MODAL_CONTENT");

		Click(locator1 = "ACSettings#CONFIRMATION_BUTTON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro viewDataInAnalyticsCloud() {
		AssertElementPresent(locator1 = "ABTest#VIEW_DATA_ANALYTICS_CLOUD_BUTTON");

		Click(locator1 = "ABTest#VIEW_DATA_ANALYTICS_CLOUD_BUTTON");
	}

	@summary = "Default summary"
	macro viewInfoItems() {
		var index = 0;

		for (var values : list ${values}) {
			var index = ${index} + 1;

			AssertElementPresent(
				key_index = ${index},
				key_value = ${values},
				locator1 = "ABTest#VIEW_INFO_ITEMS",
				value1 = ${values});
		}
	}

	@summary = "Default summary"
	macro viewVariantImprovementNumberInDXP(improvementNumber, variantName) {
		var key_variantName = ${variantName};

		AssertTextEquals(
			locator1 = "ABTest#IMPROVEMENT_NUMBER",
			value1 = ${improvementNumber});
	}

	@summary = "Default summary"
	macro writeId(elementId) {
		Click(locator1 = "ABTest#ELEMENT_ID_INPUT");

		Type(
			locator1 = "ABTest#ELEMENT_ID_INPUT",
			value1 = ${elementId});
	}

}