definition {

	@summary = "Clears segment search filter"
	macro clearSegmentSearchFilter() {
		Type.sendKeys(
			locator1 = "ACSettings#SEARCH_BAR",
			value1 = "keys=CONTROL,a");

		KeyPress(
			locator1 = "ACSettings#SEARCH_BAR",
			value1 = "\BACK_SPACE");
	}

	@summary = "Selects the segment in page filter"
	macro clickFilterSegment(segmentName) {
		Click(
			key_nameList = ${segmentName},
			locator1 = "ACUtils#PAGE_SEGMENT_FILTER");
	}

	@summary = "Removes the segment in page filter"
	macro removeSegmentFilter() {
		Click(locator1 = "ACPagePath#REMOVE_SEGMENT_FILTER");
	}

	@summary = "Default summary"
	macro searchSegmentFilterBar(searchItem = null, cardTitle = null) {
		Type(
			locator1 = "ACPagePath#SEARCH_SEGMENT_FILTER_BAR",
			value1 = ${searchItem});

		KeyPress(
			locator1 = "ACPagePath#SEARCH_SEGMENT_FILTER_BAR",
			value1 = "\ENTER");
	}

	@summary = "Asserts the total of page path"
	macro viewPagePathTotal(pageTotal) {
		var key_pageTotal = ${pageTotal};

		AssertTextEquals(
			locator1 = "ACPagePath#PAGE_PATH_TOTAL",
			value1 = ${pageTotal});
	}

	@summary = "Asserts the dropdown segment filter"
	macro viewSegmentDropdown(nameList) {
		for (var name : list ${nameList}) {
			var key_nameList = ${name};

			WaitForPageLoad();

			ACUtils.waitForLoading();

			while ((IsElementNotPresent(locator1 = "ACUtils#PAGE_SEGMENT_FILTER")) && (maxIterations = "50")) {
				ACPagePath.searchSegmentFilterBar(searchItem = ${name});

				ACPagePath.clearSegmentSearchFilter();
			}

			AssertTextEquals(
				locator1 = "ACUtils#PAGE_SEGMENT_FILTER",
				value1 = ${name});
		}
	}

}