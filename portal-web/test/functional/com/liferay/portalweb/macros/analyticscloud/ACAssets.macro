definition {

	@summary = "Default summary"
	macro addCustomAssetReport(reportName = null, metric = null, assetName = null) {
		ACNavigation.openItem(itemName = ${assetName});

		Button.click(button = "Add Report");

		Type(
			key_text = "Report Name",
			locator1 = "TextInput#ANY",
			value1 = ${reportName});

		Select(
			key_fieldLabel = "Metric",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${metric});

		WaitForVisible(
			key_text = "Save",
			locator1 = "Button#ANY_ENABLED");

		Button.clickSave();
	}

	@summary = "Default summary"
	macro goToTechnologyTabInactive(tabName = null, cardTitle = null) {
		Click(
			key_cardTitle = ${cardTitle},
			key_tabName = ${tabName},
			locator1 = "ACAssets#TECHNOLOGY_TAB_INACTIVE");
	}

	@summary = "Default summary"
	macro interactWithCustomAssets(submissionNumber = null, downloadNumber = null, formOptionNameList = null, viewPageNumber = null, siteName = null, pageName = null) {
		if (isSet(formOptionNameList)) {
			for (var formOptionName : list ${formOptionNameList}) {
				Click(
					key_formOptionName = ${formOptionName},
					locator1 = "ACAssets#CUSTOM_ASSETS_FORM_OPTION");
			}
		}

		if (isSet(submissionNumber)) {
			for (var n : list ${submissionNumber}) {
				Click(locator1 = "ACCustomEvents#INPUT_BUTTON");

				GoBack();

				ACUtils.waitForSendingRequest();
			}
		}

		if (isSet(downloadNumber)) {
			for (var n : list ${downloadNumber}) {
				Click(locator1 = "ACAssets#CUSTOM_ASSETS_DOWNLOAD");

				GoBack();

				ACUtils.waitForSendingRequest();
			}
		}
		else {
			for (var n : list ${viewPageNumber}) {
				ACUtils.navigateToSitePage(
					actionType = "View WC",
					pageName = ${pageName},
					siteName = ${siteName});
			}
		}
	}

	@summary = "Default summary"
	macro removeCustomAssetReport(reportName = null) {
		Click(
			key_cardTitle = ${reportName},
			locator1 = "ACCards#TRASH_ICON");
	}

	@summary = "Default summary"
	macro viewAssetAppearsOnMetric(canonicalURLSuffix = null, canonicalURL, cardTitle, index = null, metricTitle, pageName) {
		var key_index = ${index};
		var key_metricTitle = ${metricTitle};

		ACUtils.waitForLoading();

		var visitorsBehaviorMetricValue = selenium.getText("ACCards#METRIC_VALUE_BY_METRIC_TITLE");

		ScrollWebElementIntoView(
			key_cardTitle = ${cardTitle},
			locator1 = "ACCards#CARD_TITLE");

		AssertTextEquals.assertPartialText(
			locator1 = "ACAssets#APPEARS_ON_PAGE_NAME",
			value1 = ${pageName});

		var portalURL = JSONCompany.getPortalURL();

		AssertTextEquals.assertPartialText(
			locator1 = "ACAssets#APPEARS_ON_CANONICAL_URL",
			value1 = ${canonicalURL});

		if (isSet(canonicalURLSuffix)) {
			AssertTextEquals.assertPartialText(
				locator1 = "ACAssets#APPEARS_ON_CANONICAL_URL",
				value1 = ${canonicalURLSuffix});
		}

		if (!(isSet(index))) {
			var key_index = 1;
		}

		AssertTextEquals(
			locator1 = "ACAssets#APPEARS_ON_PAGE_METRIC",
			value1 = ${visitorsBehaviorMetricValue});
	}

	@summary = "Default summary"
	macro viewAssetsInfo(index = null, assetName = null, value = null) {
		AssertTextEquals(
			index = ${index},
			key_assetName = ${assetName},
			locator1 = "ACAssets#ASSETS_INFO",
			value1 = ${value});
	}

	@summary = "Default summary"
	macro viewTechnologyBrowsersMetric(percentageMetricValue = null, browserMetricValue = null, cssValue = null, cardTitle = null) {
		var key_cardTitle = ${cardTitle};

		AssertTextEquals(
			locator1 = "ACAssets#BROWSERS_METRIC_VALUE",
			value1 = ${browserMetricValue});

		AssertTextEquals(
			locator1 = "ACAssets#BROWSERS_PERCENTAGE_METRIC_VALUE",
			value1 = ${percentageMetricValue});

		AssertCssValue(
			locator1 = "ACAssets#BROWSERS_PIE_CHART",
			locator2 = "fill",
			value1 = ${cssValue});
	}

	@summary = "Default summary"
	macro viewTechnologyDeviceViewsAndPercentage(actionValue = null, percentageValue = null, cardTitle = null, deviceName = null) {
		var key_cardTitle = ${cardTitle};

		ScrollWebElementIntoView(locator1 = "ACAssets#TECHNOLOGY_BAR_CHART");

		ACUtils.waitForScrollDown();

		MouseOver(locator1 = "ACAssets#TECHNOLOGY_BAR_CHART");

		AssertTextEquals(
			locator1 = "ACAssets#TECHNOLOGY_DEVICE_CHART_TOOLTIP_DEVICE_HEADER",
			value1 = ${deviceName});

		AssertTextEquals(
			locator1 = "ACAssets#TECHNOLOGY_DEVICE_CHART_TOOLTIP_VIEWS_HEADER",
			value1 = ${actionValue});

		AssertTextEquals(
			locator1 = "ACAssets#TECHNOLOGY_DEVICE_CHART_TOOLTIP_PERCENTAGE_HEADER",
			value1 = ${percentageValue});
	}

	@summary = "Default summary"
	macro viewViewsByTechnologyTabActive(tabName = null, cardTitle = null) {
		AssertVisible(
			key_cardTitle = ${cardTitle},
			key_tabName = ${tabName},
			locator1 = "ACAssets#TECHNOLOGY_TAB_ACTIVE");
	}

	@summary = "Default summary"
	macro viewVisitorsBehaviorMetric(startMonth = null, startDay = null, endDay = null, metricValue = null, startYear = null, metricTitle = null, endMonth = null, endYear = null, timeFilter = null) {
		var key_metricTitle = ${metricTitle};
		var key_metricValue = ${metricValue};

		while ((IsElementNotPresent(locator1 = "ACAssets#METRIC_VALUE")) && (maxIterations = "50")) {
			TestUtils.hardRefresh();

			if (${timeFilter} != "Custom Range") {
				ACTimeFilter.clickTimeFilterButton();

				if (${timeFilter} == "Last 24 hours") {
					ACTimeFilter.setLast24Hours();
				}

				if (${timeFilter} == "Yesterday") {
					ACTimeFilter.setYesterday();
				}

				if (${timeFilter} == "Last 7 days") {
					ACTimeFilter.setLast7Days();
				}

				if (${timeFilter} == "Last 28 days") {
					ACTimeFilter.setLast28Days();
				}

				if (${timeFilter} == "Last 30 days") {
					ACTimeFilter.setLast30Days();
				}

				if (${timeFilter} == "Last 90 days") {
					ACTimeFilter.setLast90Days();
				}

				if (${timeFilter} == "Last 180 days") {
					ACTimeFilter.setLast180Days();
				}

				if (${timeFilter} == "Last Year") {
					ACTimeFilter.setLastYear();
				}
			}

			if (${timeFilter} == "Custom Range") {
				ACTimeFilter.setCustomRange(
					endDay = ${endDay},
					endMonth = ${endMonth},
					endYear = ${endYear},
					startDay = ${startDay},
					startMonth = ${startMonth},
					startYear = ${startYear});
			}
		}

		AssertElementPresent(locator1 = "ACAssets#METRIC_VALUE");
	}

}