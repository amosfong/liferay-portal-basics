definition {

	@summary = "Default summary"
	macro assertCustomRangeNotApplied(timeRange = null) {
		var key_timeRange = ${timeRange};

		AssertElementNotPresent(locator1 = "ACIndividualsDashboard#INDIVIDUALS_ACTIVITIES_TIME_RANGE");
	}

	@summary = "Default summary"
	macro assertIndividualAttribute(individualAttribute = null) {
		var key_individualAttribute = ${individualAttribute};

		AssertElementPresent(locator1 = "ACIndividualsDashboard#KNOWN_INDIVIDUAL_ATTRIBUTE");
	}

	@summary = "Default summary"
	macro assertIndividualAttributeNotPresent(individualAttribute = null) {
		var key_individualAttribute = ${individualAttribute};

		AssertElementNotPresent(locator1 = "ACIndividualsDashboard#KNOWN_INDIVIDUAL_ATTRIBUTE");
	}

	@summary = "Default summary"
	macro assertIndividualAttributeValue(individualAttribute = null, individualAttributeValue = null) {
		var key_individualAttribute = ${individualAttribute};

		AssertTextEquals(
			locator1 = "ACIndividualsDashboard#KNOWN_INDIVIDUAL_ATTRIBUTE_VALUE",
			value1 = ${individualAttributeValue});
	}

	@summary = "Default summary"
	macro assertIndividualsActivitiesTimeRange(timeRange = null) {
		var key_timeRange = ${timeRange};

		AssertElementPresent(locator1 = "ACIndividualsDashboard#INDIVIDUALS_ACTIVITIES_TIME_RANGE");
	}

	@summary = "Default summary"
	macro assertNoIndividualAttribute(individualAttribute = null) {
		var key_individualAttribute = ${individualAttribute};

		AssertElementNotPresent(locator1 = "ACIndividualsDashboard#KNOWN_INDIVIDUAL_ATTRIBUTE");
	}

	@summary = "Default summary"
	macro assertSegmentInAssociatedSegmentsCard(itemName = null) {
		AssertElementPresent(
			key_itemName = ${itemName},
			locator1 = "ACIndividualsDashboard#ASSOCIATED_SEGMENT_ITEM");
	}

	@summary = "Default summary"
	macro clickBreakdownTab(breakdownName = null) {
		Click(
			breakdownName = ${breakdownName},
			locator1 = "ACIndividualsDashboard#BREAKDOWN_TAB");
	}

	@summary = "Default summary"
	macro deleteBreakdown() {
		while (IsElementPresent(locator1 = "ACIndividualsDashboard#DELETE_BREAKDOWN_BUTTON")) {
			Click(locator1 = "ACIndividualsDashboard#DELETE_BREAKDOWN_BUTTON");
		}
	}

	@summary = "Default summary"
	macro expandActivity(eventName = null) {
		Click(
			key_pageTitle = ${eventName},
			locator1 = "ACUtils#PAGE_TITLE");
	}

	@summary = "Default summary"
	macro filterKnownIndividualList(rowName = null) {
		Click(
			key_rowName = ${rowName},
			locator1 = "ACIndividualsDashboard#KNOWN_INDIVIDUAL_ATTRIBUTES_FILTER");

		if (isSet(desc)) {
			AssertElementPresent(locator1 = "ACSegments#KNOWN_SEGMENT_MEMBERS_FILTER_ARROW_DESC");
		}
		else {
			AssertElementPresent(locator1 = "ACSegments#KNOWN_SEGMENT_MEMBERS_FILTER_ARROW_ASC");
		}
	}

	@summary = "Default summary"
	macro getChartPopoverDate() {
		if (!(isSet(index))) {
			var index = 1;
		}

		Click(
			index = ${index},
			locator1 = "ACIndividualsDashboard#INDIVIDUALS_ACTIVITIES_CHART_RECHARTS_BAR");

		SelectFrame.selectFrame(locator1 = "ACIndividualsDashboard#CHART_POPOVER");

		var formattedDate = selenium.getText("ACIndividualsDashboard#CHART_POPOVER_ACTIVITIES_DATE");

		return ${formattedDate};
	}

	@summary = "Default summary"
	macro getChartPopoverDateWithoutBar() {
		Click(locator1 = "ACIndividualsDashboard#CHARTS_WRAPPER");

		SelectFrame.selectFrame(locator1 = "ACIndividualsDashboard#CHARTS_WRAPPER");

		var formattedDate = selenium.getText("ACIndividualsDashboard#CHART_POPOVER_ACTIVITIES_DATE");

		return ${formattedDate};
	}

	@summary = "Default summary"
	macro goToDistributionTab() {
		ACNavigation.switchTab(tabName = "Distribution");
	}

	@summary = "Default summary"
	macro goToInterestsTab() {
		ACNavigation.switchTab(tabName = "Interests");
	}

	@summary = "Default summary"
	macro goToKnownIndividualDetails(individualName = null) {
		var key_individualName = ${individualName};

		while ((IsElementNotPresent(locator1 = "ACIndividualsDashboard#KNOWN_INDIVIDUALS_LIST_ITEMS")) && (maxIterations = "50")) {
			Refresh();
		}

		Click(locator1 = "ACIndividualsDashboard#KNOWN_INDIVIDUALS_LIST_ITEMS");
	}

	@summary = "Default summary"
	macro goToKnownIndividualsTab() {
		ACNavigation.switchTab(tabName = "Known Individuals");
	}

	@summary = "Default summary"
	macro goToOverviewTab() {
		ACNavigation.switchTab(tabName = "Overview");
	}

	@summary = "Default summary"
	macro goToTabName(tabName = null) {
		var key_tabName = ${tabName};

		Click(locator1 = "ACIndividualsDashboard#INDIVIDUALS_TAB");
	}

	@summary = "Default summary"
	macro selectDataOnIndividualsActivitiesChart() {
		if (!(isSet(index))) {
			var index = 1;
		}

		Click.clickNoMouseOver(
			index = ${index},
			locator1 = "ACIndividualsDashboard#INDIVIDUALS_ACTIVITIES_CHART_RECHARTS_BAR");
	}

	@summary = "Default summary"
	macro viewActivitiesNumberInPeriod(activitiesNumber = null) {
		AssertTextEquals(
			locator1 = "ACIndividualsDashboard#ACTIVITIES_NUMBER",
			value1 = ${activitiesNumber});
	}

	@summary = "Default summary"
	macro viewActivitiesOnGraph(typeList = null, valueList = null, notEquals = null) {
		while ((IsElementNotPresent(locator1 = "ACIndividualsDashboard#ACTIVE_INDIVIDUAL_CHART")) && (maxIterations = "50")) {
			TestUtils.hardRefresh();

			ACTimeFilter.clickTimeFilterButton();

			ACTimeFilter.setLast24Hours();
		}

		Click(locator1 = "ACIndividualsDashboard#ACTIVE_INDIVIDUAL_CHART");

		MouseOver(
			key_cardTitle = "Individual Events",
			locator1 = "ACCards#CARD_TITLE");

		var list1 = ListUtil.newListFromString(${typeList});
		var list2 = ListUtil.newListFromString(${valueList});
		var size = ListUtil.size(${list1});
		var i = 0;

		while (${i} != ${size}) {
			var type = ListUtil.get(${list1}, ${i});
			var value = ListUtil.get(${list2}, ${i});

			while ((IsElementNotPresent(key_value = ${value}, key_visitors = ${type}, locator1 = "ACSites#TOOLTIP_UNIQUE_VISITORS")) && (maxIterations = "50")) {
				TestUtils.hardRefresh();

				ACTimeFilter.clickTimeFilterButton();

				ACTimeFilter.setLast24Hours();

				Click(locator1 = "ACIndividualsDashboard#ACTIVE_INDIVIDUAL_CHART");

				MouseOver(
					key_cardTitle = "Individual Events",
					locator1 = "ACCards#CARD_TITLE");
			}

			AssertElementPresent(
				key_value = ${value},
				key_visitors = ${type},
				locator1 = "ACSites#TOOLTIP_UNIQUE_VISITORS");

			if (isSet(notEquals)) {
				AssertTextNotEquals(
					key_value = ${value},
					key_visitors = ${type},
					locator1 = "ACSites#TOOLTIP_UNIQUE_VISITORS",
					value1 = ${notEquals});
			}

			var i = ${i} + 1;

			var i = StringUtil.valueOf(${i});
		}
	}

	@summary = "Default summary"
	macro viewBreakdownNotPresent(breakdownName = null) {
		AssertElementNotPresent(
			breakdownName = ${breakdownName},
			locator1 = "ACIndividualsDashboard#BREAKDOWN_TAB");
	}

	@summary = "Default summary"
	macro viewBreakdownRecharts(fillColor = null, tick = null) {
		if (!(isSet(index))) {
			var index = 1;
		}

		AssertTextEquals.assertPartialText(
			index = ${index},
			locator1 = "ACIndividualsDashboard#BREAKDOWN_RECHARTS_CARTESIAN_Y_AXIS_TICK",
			value1 = ${tick});

		AssertAttributeValue(
			index = ${index},
			locator1 = "ACIndividualsDashboard#BREAKDOWN_RECHARTS_BAR_FILL_COLOR",
			value1 = "fill",
			value2 = ${fillColor});
	}

	@summary = "Default summary"
	macro viewDistributionBarByAttribute(type = null, value = null) {
		if (!(isSet(index))) {
			var index = 1;
		}

		ACUtils.waitForChartLoad();

		while (IsElementNotPresent(index = ${index}, locator1 = "ACIndividualsDashboard#INDIVIDUALS_ACTIVITIES_CHART_RECHARTS_BAR")) {
			TestUtils.hardRefresh();

			ACUtils.waitForChartLoad();
		}

		Click(
			key_cardTitle = "Distribution by attribute",
			locator1 = "ACCards#CARD_TITLE");

		MouseOver.mouseOverInvisible(
			index = ${index},
			locator1 = "ACIndividualsDashboard#INDIVIDUALS_ACTIVITIES_CHART_RECHARTS_BAR");

		AssertElementPresent(
			key_value = ${value},
			key_visitors = ${type},
			locator1 = "ACSites#TOOLTIP_UNIQUE_VISITORS");
	}

	@summary = "Default summary"
	macro viewIndividualDetailsCard(fullName = null, userEmailAddress = null) {
		AssertVisible(locator1 = "ACIndividualsDashboard#INDIVIDUAL_DETAILS_CARD_AVATAR");

		AssertVisible(
			fullName = ${fullName},
			locator1 = "ACIndividualsDashboard#INDIVIDUAL_DETAILS_CARD_FULL_NAME");

		AssertVisible(
			locator1 = "ACIndividualsDashboard#INDIVIDUAL_DETAILS_CARD_EMAIL",
			userEmailAddress = ${userEmailAddress});
	}

	@summary = "Default summary"
	macro viewKnownIndividualDetailsSpecificOrder() {
		var resultOrder = 0;

		for (var itemName : list ${itemName}) {
			var resultOrder = ${resultOrder} + 1;

			AssertVisible(
				key_itemName = ${itemName},
				locator1 = "ACIndividualsDashboard#KNOWN_INDIVIDUAL_DETAILS_VIEW_SPECIFIC_ORDER",
				resultOrder = ${resultOrder});
		}
	}

	@summary = "Default summary"
	macro viewKnownIndividualSpecificOrder() {
		var resultOrder = 0;

		for (var itemName : list ${itemName}) {
			var resultOrder = ${resultOrder} + 1;

			AssertVisible(
				key_itemName = ${itemName},
				locator1 = "ACIndividualsDashboard#KNOWN_INDIVIDUAL_VIEW_SPECIFIC_ORDER",
				resultOrder = ${resultOrder});
		}
	}

	@summary = "Default summary"
	macro viewRechartsBarOnIndividualsActivitiesChart() {
		if (!(isSet(index))) {
			var index = 1;
		}

		while (IsElementNotPresent(locator1 = "ACIndividualsDashboard#INDIVIDUALS_ACTIVITIES_CHART_RECHARTS_BAR")) {
			Refresh();

			ACTimeFilter.clickTimeFilterButton();

			ACTimeFilter.setLast24Hours();

			// The pause is necessary because the bar takes a while to load into the chart. For more information about pause see LRAC-9517

			Pause(value1 = 5000);
		}

		AssertVisible(
			index = ${index},
			locator1 = "ACIndividualsDashboard#INDIVIDUALS_ACTIVITIES_CHART_RECHARTS_BAR");
	}

	@summary = "Default summary"
	macro viewTimelineItem(positionList = null, activityNameList = null) {
		var list1 = ListUtil.newListFromString(${activityNameList});
		var list2 = ListUtil.newListFromString(${positionList});
		var size = ListUtil.size(${list1});
		var i = 0;

		while (${i} != ${size}) {
			var activityName = ListUtil.get(${list1}, ${i});
			var position = ListUtil.get(${list2}, ${i});

			AssertElementPresent(
				index = ${position},
				key_commonInformation = ${activityName},
				locator1 = "ACEventAnalysis#VIEW_ANALYSIS_INFORMATION_SPECIFIC_ORDER");

			var i = ${i} + 1;

			var i = StringUtil.valueOf(${i});
		}
	}

	@summary = "Default summary"
	macro viewTimelineItemNotPresent(positionList = null, activityNameList = null) {
		var list1 = ListUtil.newListFromString(${activityNameList});
		var list2 = ListUtil.newListFromString(${positionList});
		var size = ListUtil.size(${list1});
		var i = 0;

		while (${i} != ${size}) {
			var activityName = ListUtil.get(${list1}, ${i});
			var position = ListUtil.get(${list2}, ${i});

			AssertElementNotPresent(
				index = ${position},
				key_commonInformation = ${activityName},
				locator1 = "ACEventAnalysis#VIEW_ANALYSIS_INFORMATION_SPECIFIC_ORDER");

			var i = ${i} + 1;

			var i = StringUtil.valueOf(${i});
		}
	}

}