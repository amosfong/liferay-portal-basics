definition {

	@summary = "Add a Item or Creation Action in Data Set"
	macro addActions(messageType = null, icon = null, headlessAction = null, type = null,method = null, url = null, actionName = null,key_actionNameList = null, confirmationMessage = null, actionTab = null, successMessage = null, errorMessage = null, title = null, variant = null) {
		var key_actionNameList = ${actionName};

		if (isSet(actionTab)) {
			Button.click(button = ${actionTab});

			if (${actionTab} == "Creation Actions") {
				Click.mouseOverClick(locator1 = "DataSet#PLUS_N");
			}
		}
		else {
			LexiconEntry.gotoAdd();
		}

		for (var actionName : list ${key_actionNameList}) {
			Type(
				key_unnamedTitle = "",
				locator1 = "TextInput#DEPOT_UNNAMED_DEFAULT_TITLE",
				value1 = ${actionName});

			if (isSet(icon)) {
				LexiconEntry.gotoAdd();

				SelectFrameTop();

				Type(
					locator1 = "DataSet#MODAL_SEARCH",
					value1 = ${icon});

				Click.mouseOverClick(
					key_text = ${icon},
					locator1 = "Modal#MODAL_ICON");
			}

			if (isSet(type)) {
				Select(
					key_fieldLabel = "Type",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = ${type});
			}

			if (isSet(variant)) {
				Select(
					key_fieldLabel = "Variant",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = ${variant});
			}

			if (isSet(title)) {
				if (IsElementPresent(key_fieldName = "Add the title of the modal.", locator1 = "DataSet#PRESELECT_VALUE_INPUT")) {
					Type(
						key_fieldName = "Add the title of the modal.",
						locator1 = "DataSet#PRESELECT_VALUE_INPUT",
						value1 = ${title});
				}
				else {
					Type(
						key_fieldName = "Add the title of the side panel.",
						locator1 = "DataSet#PRESELECT_VALUE_INPUT",
						value1 = ${title});
				}
			}

			if (isSet(method)) {
				Select(
					key_fieldLabel = "Method",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = ${method});
			}

			if (isSet(url)) {
				Type(
					key_fieldId = "URL",
					locator1 = "TextArea#ANY_ID",
					value1 = ${url});
			}

			if (isSet(headlessAction)) {
				Type(
					key_placeholder = "Add a value here.",
					locator1 = "FrontendDataSet#PLACEHOLDER",
					value1 = ${headlessAction});
			}

			if (isSet(confirmationMessage)) {
				Type(
					key_placeholder = "Add a message here.",
					locator1 = "FrontendDataSet#PLACEHOLDER",
					value1 = ${confirmationMessage});
			}

			if (isSet(messageType)) {
				Select(
					key_fieldLabel = "Message Type",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = ${messageType});
			}

			if (isSet(successMessage)) {
				Type(
					key_option = "Success",
					locator1 = "DataSet#MESSAGE_FIELD",
					value1 = ${successMessage});
			}

			if (isSet(errorMessage)) {
				ClickNoError(
					key_text = "Error",
					locator1 = "Button#ANY");

				Type(
					key_option = "Error",
					locator1 = "DataSet#MESSAGE_FIELD",
					value1 = ${errorMessage});
			}

			Click(
				key_text = ${icon},
				locator1 = "Icon#ANY");

			PortletEntry.save();
		}
	}

	@summary = "Default summary"
	macro addAFDSFieldWithTranslation(selectLanguage = null, key_fieldName = null, dropdownMenuItem = null, key_newLabel = null) {
		Click(
			key_fieldName = ${key_fieldName},
			locator1 = "DataSet#VERTICAL_ELLIPSIS_BY_FIELDS_NAME");

		MenuItem.click(menuItem = ${dropdownMenuItem});

		Click(
			key_symbolName = "",
			locator1 = "FormViewBuilder#BUTTON_LOCALIZATION");

		Click(
			key_menuItem = ${selectLanguage},
			locator1 = "MenuItem#MENU_ITEM_SPECIFIC");

		Type(
			key_text = "Label",
			locator1 = "TextInput#ANY",
			value1 = ${key_newLabel});

		Button.clickSave();
	}

	@summary = "Default summary"
	macro addAFilterWithTranslation(selectLanguage = null, key_newValue = null, filterType = null, defocusModal = null, key_changeName = null, key_sortOption = null) {
		LexiconEntry.gotoAdd();

		Click(
			key_fieldName = ${filterType},
			locator1 = "FormViewBuilder#OBJECT_FIELD_BUTTON_DROPDOWN");

		Click(
			key_symbolName = "",
			locator1 = "FormViewBuilder#BUTTON_LOCALIZATION");

		Click(
			key_dropdownItem = ${selectLanguage},
			locator1 = "ObjectAdmin#SELECT_DROPDOWN_ITEM_DEFAULT_VALUE");

		Click(
			locator1 = "Portlet#MODAL_TITLE",
			value1 = ${defocusModal});

		Type(
			key_text = ${key_changeName},
			locator1 = "TextInput#ANY",
			value1 = ${key_newValue});

		Click(
			key_class = "btn-secondary",
			key_index = 3,
			locator1 = "Button#ANY_WITH_CLASS_AND_INDEX");

		SelectFrameTop();

		Click.javaScriptClick(
			key_sortOption = ${key_sortOption},
			locator1 = "ObjectCustomViews#SORT_OPTION");
	}

	@summary = "Default summary"
	macro addFields(key_fieldList = null) {
		LexiconEntry.gotoAdd();

		for (var key_fieldItem : list ${key_fieldList}) {
			Check.checkNotVisible(
				checkboxName = ${key_fieldItem},
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		Button.clickSave();
	}

	@summary = "Default summary"
	macro assertDataSetEntry(key_dataSetNameList = null) {
		for (var key_dataSetName : list ${key_dataSetNameList}) {
			AssertElementPresent(
				key_itemName = ${key_dataSetName},
				locator1 = "DataSet#TABLE_CELL");
		}
	}

	@summary = "Default summary"
	macro assertDataSetView(key_dataSetViewNameList = null) {
		for (var key_dataSetViewName : list ${key_dataSetViewNameList}) {
			AssertElementPresent(
				entryName = ${key_dataSetViewName},
				locator1 = "DataSet#DATA_SET_VIEW_ENTRY_NAME");
		}
	}

	@summary = "Default summary"
	macro assertDataSetViewDescription(key_dataSetViewDescriptionList = null) {
		for (var key_dataSetViewDescription : list ${key_dataSetViewDescriptionList}) {
			AssertElementPresent(
				key_description = ${key_dataSetViewDescription},
				locator1 = "DataSet#DATA_SET_VIEW_DESCRIPTION");
		}
	}

	@summary = "Default summary"
	macro assertFieldsChecked(key_fieldList = null) {
		for (var key_fieldItem : list ${key_fieldList}) {
			Check.checkNotVisible(
				checkboxName = ${key_fieldItem},
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
	}

	@summary = "Default summary"
	macro assertFieldsNotChecked(key_fieldList = null) {
		for (var key_fieldItem : list ${key_fieldList}) {
			AssertNotChecked.assertNotCheckedNotVisible(
				checkboxName = ${key_fieldItem},
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
	}

	@summary = "Default summary"
	macro assertFieldsOnTable(key_position = null, keyName = null) {
		AssertElementPresent(
			key_position = ${key_position},
			keyName = ${keyName},
			locator1 = "DataSet#FIELDS_TABLE");
	}

	@summary = "Default summary"
	macro assertSearchFilters(key_filterList = null) {
		for (var key_filterType : list ${key_filterList}) {
			AssertElementPresent(
				locator1 = "DataSet#FILTER_BY_SELECT",
				value1 = ${key_filterList});
		}
	}

	@summary = "Default summary"
	macro changePagination(itemsPerPage = null) {
		Click(locator1 = "DataSet#ITEMS_PER_PAGE_SELECT");

		MenuItem.click(menuItem = ${itemsPerPage});
	}

	@summary = "Default summary"
	macro changePaginationDefaultItems(defaultPagination = null) {
		Type(
			locator1 = "DataSet#PAGINATION_DEFAULT_ITEMS",
			value1 = ${defaultPagination});
	}

	@summary = "Default summary"
	macro changePaginationItems(paginationItems = null) {
		Type(
			locator1 = "DataSet#PAGINATION_LIST_OF_ITEMS",
			value1 = ${paginationItems});
	}

	@summary = "Default summary"
	macro checkFields(key_fieldList = null) {
		for (var key_fieldItem : list ${key_fieldList}) {
			Check.checkNotVisible(
				checkboxName = ${key_fieldItem},
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
	}

	@summary = "Default summary"
	macro chooseFilterType(filterType = null) {
		DataSetAdmin.goToTab(tabName = "Filters");

		LexiconEntry.gotoAdd();

		Click(
			key_fieldName = ${filterType},
			locator1 = "FormViewBuilder#OBJECT_FIELD_BUTTON_DROPDOWN");
	}

	@summary = "Default summary"
	macro createAndConfigureDataSetEntry(restSchema = null, defaultItemsPerPage = null, key_fieldList = null, restApplication = null, listOfItemsPerPage = null, dataSetViewName = null, dataSetName = null, restEndpoint = null, dataSetViewDescription = null) {
		DataSetAdmin.goToDataSetAdminPage();

		DataSetAdmin.createDataSetEntryViaAPI(
			dataSetName = ${dataSetName},
			restApplication = ${restApplication},
			restEndpoint = ${restEndpoint},
			restSchema = ${restSchema});

		DataSetAdmin.createFDSViewViaAPI(
			dataSetName = ${dataSetName},
			dataSetViewDescription = ${dataSetViewDescription},
			defaultItemsPerPage = ${defaultItemsPerPage},
			key_dataSetViewNameList = ${dataSetViewName},
			listOfItemsPerPage = ${listOfItemsPerPage});

		DataSetAdmin.goToSpecificViewPage(
			dataSetName = ${dataSetName},
			key_viewName = ${dataSetViewName});

		if (isSet(key_fieldList)) {
			DataSetAdmin.goToTab(tabName = "Visualization Modes");

			DataSetAdmin.addFields(key_fieldList = ${key_fieldList});
		}
	}

	@summary = "Default summary"
	macro createASort(key_field = null, key_sorting = null) {
		LexiconEntry.gotoAdd();

		Select(
			locator1 = "DataSet#FIELD_SELECT",
			value1 = ${key_field});

		Select(
			locator1 = "DataSet#SORTING_SELECT",
			value1 = ${key_sorting});

		Click(locator1 = "DataSet#MODAL_SAVE_BUTTON");
	}

	@summary = "Default summary"
	macro createDataSet(key_name = null, key_type = null) {
		if (isSet(key_name)) {
			var key_dataSetNameList = ${key_name};
		}

		for (var key_dataSetName : list ${key_dataSetNameList}) {
			LexiconEntry.gotoAdd();

			Type(
				locator1 = "TextInput#NAME",
				value1 = ${key_dataSetName});

			DataSetAdmin.selectProvider(key_type = ${key_type});

			WaitForVisible(
				locator1 = "ObjectPortlet#FIELD_LABEL_NAME",
				value1 = "REST Schema");

			PortletEntry.save();
		}
	}

	@summary = "Default summary"
	macro createDataSetEntryViaAPI(restApplication = null, dataSetName = null) {
		if (${restApplication} == "/data-set-manager/entries") {
			var restSchema = "FDSEntry";
			var restEndpoint = "/";
		}

		JSONDataSet._createDataSetEntry(
			dataSetName = ${dataSetName},
			restApplication = ${restApplication},
			restEndpoint = ${restEndpoint},
			restSchema = ${restSchema});
	}

	@summary = "Default summary"
	macro createDataSetView(key_name = null, description = null) {
		if (isSet(key_name)) {
			var key_dataSetViewNameList = ${key_name};
		}

		for (var key_dataSetViewName : list ${key_dataSetViewNameList}) {
			LexiconEntry.gotoAdd();

			Type(
				locator1 = "TextInput#NAME",
				value1 = ${key_dataSetViewName});

			Type(
				locator1 = "DataSet#NEW_DATA_SET_VIEW_DESCRIPTION",
				value1 = ${description});

			PortletEntry.save();
		}
	}

	@summary = "Default summary"
	macro createDateFilter(button = null, valueYearTo = null, valueDayTo = null, valueYearFrom = null, fieldValueFrom = null, filterName = null, valueMonthTo = null, fieldValueTo = null, filterBy = null, valueMonthFrom = null, valueDayFrom = null) {
		Click(locator1 = "Button#PLUS");

		DropdownMenuItem.click(menuItem = "Date Range");

		PortletEntry.inputName(name = ${filterName});

		Click(
			dropdownLabel = "Select",
			locator1 = "ObjectField#ANY_DROPDOWN_LABEL");

		DropdownMenuItem.click(menuItem = ${filterBy});

		Click(
			key_label = "From",
			locator1 = "DataSet#DATE_CALENDAR");

		Click(
			key_index = 1,
			locator1 = "DataSet#YEAR_CALENDAR_FIELD");

		Click(
			key_index = 1,
			key_optionYear = ${valueYearFrom},
			locator1 = "DataSet#YEAR_CALENDAR_OPTION");

		Select(
			key_number = 1,
			locator1 = "DataSet#SELECT_MONTH",
			value1 = ${valueMonthFrom});

		Click.clickNoMouseOver(
			key_index = 1,
			key_valueDay = ${valueDayFrom},
			locator1 = "DataSet#DATE_CALENDAR_DAY");

		AssertTextEquals(
			key_label = "From",
			locator1 = "DataSet#DATE_FIELD",
			value1 = ${fieldValueFrom});

		Click(
			key_label = "To",
			locator1 = "DataSet#DATE_CALENDAR");

		Click(
			key_index = 2,
			locator1 = "DataSet#YEAR_CALENDAR_FIELD");

		Click(
			key_index = 2,
			key_optionYear = ${valueYearTo},
			locator1 = "DataSet#YEAR_CALENDAR_OPTION");

		Select(
			key_number = 2,
			locator1 = "DataSet#SELECT_MONTH",
			value1 = ${valueMonthTo});

		Click.clickNoMouseOver(
			key_index = 2,
			key_valueDay = ${valueDayTo},
			locator1 = "DataSet#DATE_CALENDAR_DAY");

		AssertTextEquals(
			key_label = "To",
			locator1 = "DataSet#DATE_FIELD",
			value1 = ${fieldValueTo});

		if (${button} == "Cancel") {
			Button.clickCancel();
		}
		else {
			Click(locator1 = "DataSet#MODAL_SAVE_BUTTON");
		}

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro createFDSViewViaAPI(dataSetName = null, key_dataSetViewNameList = null, dataSetViewDescription = null) {
		if (!(isSet(defaultItemsPerPage))) {
			var defaultItemsPerPage = 4;
			var listOfItemsPerPage = "4, 8, 20, 40, 60, 100";
		}

		for (var key_dataSetViewName : list ${key_dataSetViewNameList}) {
			JSONDataSet._createFDSViewViaAPI(
				dataSetName = ${dataSetName},
				dataSetViewDescription = ${dataSetViewDescription},
				dataSetViewName = ${key_dataSetViewName},
				defaultItemsPerPage = ${defaultItemsPerPage},
				listOfItemsPerPage = ${listOfItemsPerPage});
		}
	}

	@summary = "Default summary"
	macro createFilters(key_filterList = null,filterType = null,filterName = null,key_text = null) {
		for (var key_filterType : list ${key_filterList}) {
			LexiconEntry.gotoAdd();

			MenuItem.click(menuItem = ${filterType});

			SelectFrameTop();

			if (isSet(name)) {
				Type(
					key_text = "Name",
					locator1 = "TextInput#ANY",
					value1 = ${filterName});
			}

			Click(locator1 = "DataSet#FILTER_BY_SELECT");

			MenuItem.click(menuItem = ${key_filterType});

			Click(
				key_text = "Save",
				locator1 = "CP2ActivationKeys#KEY_DEACTIVATION_TERMS");
		}
	}

	@summary = "Default summary"
	macro createSelectionFilter(filterName = null, filterBy = null, picklistName = null, selection = null, preselectedValue = null) {
		DataSetAdmin.selectFilterType(key_filterType = "Selection");

		PortletEntry.inputText(
			fieldLabel = "Name",
			text = ${filterName});

		Click(
			dropdownLabel = "Select",
			locator1 = "Dropdown#ANY_DROPDOWN_LABEL");

		DropdownMenuItem.click(menuItem = ${filterBy});

		Select(
			locator1 = "DataSet#SOURCE_OPTIONS_SELECT",
			value1 = ${picklistName});

		if (isSet(selection)) {
			Click(
				locator1 = "Radio#ANY",
				radioLabel = ${selection});
		}

		for (var preselectedValue : list ${preselectedValueList}) {
			DataSetAdmin.selectPreselectedValue(preselectedValue = ${preselectedValue});
		}

		Click(locator1 = "DataSet#MODAL_SAVE_BUTTON");
	}

	@summary = "Delete a Item or Creation Action in Data Set"
	macro deleteActionEntry(actionName = null, actionTab = null) {
		if (isSet(actionTab)) {
			Button.click(button = ${actionTab});

			if (${actionTab} == "Creation Actions") {
				Click(
					key_tableEntry = ${actionName},
					locator1 = "LexiconTable#TABLE_ENTRY_ELLIPSIS");

				MenuItem.click(menuItem = "Delete");

				Button.clickDelete();
			}
		}
		else {
			Click(
				key_tableEntry = ${actionName},
				locator1 = "LexiconTable#TABLE_ENTRY_ELLIPSIS");

			MenuItem.click(menuItem = "Delete");

			Button.clickDelete();
		}
	}

	@summary = "Default summary"
	macro deleteAllDataSetEntries() {
		DataSetAdmin.goToDataSetAdminPage();

		if (IsElementPresent(key_itemName = "", locator1 = "DataSet#TABLE_CELL")) {
			JSONDataSet._deleteFDSEntry();

			Refresh();
		}

		AssertElementPresent(
			locator1 = "Message#EMPTY_STATE_INFO",
			value1 = "No Results Found");
	}

	@summary = "Default summary"
	macro deleteAllDataSetViews() {
		var dataSetViewsIdList = JSONDataSet._getDataSetIds();

		if (${dataSetViewsIdList} != "") {
			JSONDataSet._deleteFDSViews();
		}
		else {
			echo("No DataSets Views to be deleted");
		}
	}

	@summary = "Default summary"
	macro deleteDataSet(entry = null) {
		Click(
			key_entry = ${entry},
			locator1 = "ObjectPortlet#ENTRY_KEBAB_MENU");

		ClickNoError(locator1 = "ObjectPortlet#DELETE_ENTRY_BUTTON");

		AssertElementPresent(
			key_modalText = "Deleting a data set is an action that cannot be reversed. The content will be deleted and some data set fragments may not be displayed.",
			locator1 = "DataSet#DELETE_DATA_SET_MODAL_BODY");

		Button.clickDelete();
	}

	@summary = "Default summary"
	macro deleteDataSetView(viewName = null) {
		Click(
			key_name = ${viewName},
			locator1 = "DataSet#DATA_SET_VIEW_ENTRY_KEBAB_MENU");

		ClickNoError(locator1 = "ObjectPortlet#DELETE_ENTRY_BUTTON");

		AssertElementPresent(
			key_modalText = "Deleting a data set view is an action that cannot be reversed. The content will be deleted and some data set fragments may not be displayed.",
			locator1 = "DataSet#DELETE_DATA_SET_MODAL_BODY");

		Button.clickDelete();
	}

	@summary = "Default summary"
	macro deleteDataSetViewsFields(fieldName = null) {
		Click(
			key_fieldName = ${fieldName},
			locator1 = "DataSet#VERTICAL_ELLIPSIS_BY_FIELDS_NAME");

		ClickNoError(locator1 = "ObjectPortlet#DELETE_ENTRY_BUTTON");

		AssertElementPresent(
			key_modalText = "Are you sure you want to delete this field? It will be removed immediately. Fragments using it will be affected. This action cannot be undone.",
			locator1 = "DataSet#DELETE_DATA_SET_MODAL_BODY");

		Button.clickDelete();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro deleteDataSetViewViaAPI(dataSetViewsNameList = null) {
		var dataSetViewsIdList = JSONDataSet._getDataSetViewIdByName(dataSetViewsNameList = ${dataSetViewsNameList});

		echo(${dataSetViewsIdList});

		JSONDataSet._deleteFDSViews(dataSetViewsIdList = ${dataSetViewsIdList});

		Refresh();
	}

	@summary = "Default summary"
	macro deleteSorting(key_entryPosition = null) {
		var key_rowPosition = ${key_rowPosition};

		Click(
			key_rowPosition = ${key_entryPosition},
			locator1 = "DataSet#ENTRY_ELLIPSIS_BUTTON_BY_POSITION");

		Click(
			key_itemName = "Delete",
			locator1 = "FormFields#FIELD_DROPDOWN_ITEM");

		Button.click(button = "Delete");

		Alert.viewSuccessMessage();
	}

	@summary = "Edit a Item or Creation Action in Data Set"
	macro editActions(newMessageType = null, newIcon = null, newHeadlessAction = null, newType = null,newMethod = null, newURL = null, newActionName = null,oldActionName = null, newConfirmationMessage = null, actionTab = null, newSuccessMessage = null, newErrorMessage = null) {
		if (isSet(actionTab)) {
			Button.click(button = ${actionTab});

			if (${actionTab} == "Creation Actions") {
				Click(
					key_tableEntry = ${oldActionName},
					locator1 = "LexiconTable#TABLE_ENTRY_ELLIPSIS");

				MenuItem.click(menuItem = "Edit");
			}
		}
		else {
			Click(
				key_tableEntry = ${oldActionName},
				locator1 = "LexiconTable#TABLE_ENTRY_ELLIPSIS");

			MenuItem.click(menuItem = "Edit");
		}

		Type(
			key_unnamedTitle = "",
			locator1 = "TextInput#DEPOT_UNNAMED_DEFAULT_TITLE",
			value1 = ${newActionName});

		if (isSet(newIcon)) {
			Click.mouseOverClick(
				key_text = "change",
				locator1 = "Icon#ANY");

			SelectFrameTop();

			Type(
				locator1 = "DataSet#MODAL_SEARCH",
				value1 = ${newIcon});

			Click.mouseOverClick(
				key_text = ${newIcon},
				locator1 = "Modal#MODAL_ICON");
		}

		if (isSet(newType)) {
			Select(
				key_fieldLabel = "Type",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = ${newType});
		}

		if (isSet(newVariant)) {
			Select(
				key_fieldLabel = "Variant",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = ${newVariant});
		}

		if (isSet(newTitle)) {
			if (IsElementPresent(key_fieldName = "Add the title of the modal.", locator1 = "DataSet#PRESELECT_VALUE_INPUT")) {
				Type(
					key_fieldName = "Add the title of the modal.",
					locator1 = "DataSet#PRESELECT_VALUE_INPUT",
					value1 = ${newTitle});
			}
			else {
				Type(
					key_fieldName = "Add the title of the side panel.",
					locator1 = "DataSet#PRESELECT_VALUE_INPUT",
					value1 = ${newTitle});
			}
		}

		if (isSet(newMethod)) {
			Select(
				key_fieldLabel = "Method",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = ${newMethod});
		}

		if (isSet(newURL)) {
			Type(
				key_fieldId = "URL",
				locator1 = "TextArea#ANY_ID",
				value1 = ${newURL});
		}

		if (isSet(newHeadlessAction)) {
			Type(
				key_placeholder = "Add a value here.",
				locator1 = "FrontendDataSet#PLACEHOLDER",
				value1 = ${newHeadlessAction});
		}

		if (isSet(newConfirmationMessage)) {
			Type(
				key_placeholder = "Add a message here.",
				locator1 = "FrontendDataSet#PLACEHOLDER",
				value1 = ${newConfirmationMessage});
		}

		if (isSet(newMessageType)) {
			Select(
				key_fieldLabel = "Message Type",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = ${newMessageType});
		}

		if (isSet(newSuccessMessage)) {
			Type(
				key_option = "Success",
				locator1 = "DataSet#MESSAGE_FIELD",
				value1 = ${newSuccessMessage});
		}

		if (isSet(newErrorMessage)) {
			ClickNoError(
				key_text = "Error",
				locator1 = "Button#ANY");

			Type(
				key_option = "Error",
				locator1 = "DataSet#MESSAGE_FIELD",
				value1 = ${newErrorMessage});
		}

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro editField(key_fieldItem = null, sortable = null, key_newLabel = null) {
		Click(
			key_fieldName = ${key_fieldItem},
			locator1 = "DataSet#VERTICAL_ELLIPSIS_BY_FIELDS_NAME");

		MenuItem.click(menuItem = "Edit");

		if (${sortable} == "Check") {
			Check.checkNotVisible(
				checkboxName = "Sortable",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		if (${sortable} == "Uncheck") {
			Uncheck.uncheckNotVisible(
				checkboxName = "Sortable",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		if (isSet(key_newLabel)) {
			Type(
				key_text = "Label",
				locator1 = "TextInput#ANY",
				value1 = ${key_newLabel});
		}

		Click(locator1 = "DataSet#MODAL_SAVE_BUTTON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro editFragmentFilter(newFilterValue = null, filterName = null) {
		Click(locator1 = "FrontendDataSet#FILTER_BUTTON");

		AssertVisible(
			key_filter = ${filterName},
			locator1 = "FrontendDataSet#FILTER_OPTION");

		Click(
			key_filter = ${filterName},
			locator1 = "FrontendDataSet#FILTER_OPTION");

		Click(
			key_optionName = ${newFilterValue},
			locator1 = "DataSet#RADIO_BUTTON_OPTION");

		Click(locator1 = "FrontendDataSet#ADD_FILTER_BUTTON");
	}

	@summary = "Default summary"
	macro editItem(itemName = null) {
		Click(
			key_fieldName = ${itemName},
			locator1 = "DataSet#VERTICAL_ELLIPSIS_BY_FIELDS_NAME");

		MenuItem.click(menuItem = "Edit");
	}

	@summary = "Default summary"
	macro editSorting() {
		var key_entryPosition = ${key_entryPosition};
		var key_sortingOption = ${key_sortingOption};

		Click(
			key_rowPosition = ${key_entryPosition},
			locator1 = "DataSet#ENTRY_ELLIPSIS_BUTTON_BY_POSITION");

		Click(
			key_itemName = "Edit",
			locator1 = "FormFields#FIELD_DROPDOWN_ITEM");

		Type(
			locator1 = "DataSet#SORTING_SELECT",
			value1 = ${key_sortingOption});

		Click(locator1 = "DataSet#MODAL_SAVE_BUTTON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro editView(key_newDescription = null, key_newName = null, key_oldName = null) {
		Click(
			key_name = ${key_oldName},
			locator1 = "DataSet#DATA_SET_VIEW_ENTRY_KEBAB_MENU");

		MenuItem.click(menuItem = "Edit");

		Type(
			key_type = "Name",
			locator1 = "DataSet#EDIT_DATA_SET_VIEW",
			value1 = ${key_newName});

		Type(
			key_type = "Description",
			locator1 = "DataSet#EDIT_DATA_SET_VIEW",
			value1 = ${key_newDescription});

		PortletEntry.save();

		Navigator.gotoBack();
	}

	@summary = "Default summary"
	macro goToDataSetAdminPage() {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/control_panel/manage?p_p_id=com_liferay_frontend_data_set_admin_web_internal_portlet_FDSAdminPortlet");
	}

	@summary = "Default summary"
	macro goToDataSetViewAdminPage(dataSetName = null) {
		var dataSetEntryId = JSONDataSet._getDataSetEntryIdByName(dataSetName = ${dataSetName});

		Navigator.openWithAppendToBaseURL(urlAppend = "group/control_panel/manage?p_p_id=com_liferay_frontend_data_set_admin_web_internal_portlet_FDSAdminPortlet&p_p_lifecycle=0&_com_liferay_frontend_data_set_admin_web_internal_portlet_FDSAdminPortlet_mvcPath=%2Ffds_views.jsp&_com_liferay_frontend_data_set_admin_web_internal_portlet_FDSAdminPortlet_fdsEntryId=${dataSetEntryId}");
	}

	@summary = "Default summary"
	macro goToSpecificViewPage(dataSetName = null, key_viewName = null) {
		DataSetAdmin.goToDataSetViewAdminPage(dataSetName = ${dataSetName});

		Click(
			key_name = ${key_viewName},
			locator1 = "DataSet#DATA_SET_VIEW_ENTRY_KEBAB_MENU");

		MenuItem.click(menuItem = "Edit");
	}

	@summary = "Default summary"
	macro goToTab(tabName = null, dataSetViewName = null) {
		if (isSet(dataSetViewName)) {
			Click(
				key_name = ${dataSetViewName},
				locator1 = "DataSet#DATA_SET_VIEW_ENTRY_KEBAB_MENU");

			Click(locator1 = "DataSet#VIEW_ENTRY_BUTTON");
		}

		Click(
			key_tabName = ${tabName},
			locator1 = "DataSet#VIEW_ANY_TAB");
	}

	@summary = "Default summary"
	macro goToViews(dataSetName = null) {
		Click(
			key_entry = ${dataSetName},
			locator1 = "ObjectPortlet#ENTRY_KEBAB_MENU");

		Click(locator1 = "DataSet#VIEW_ENTRY_BUTTON");
	}

	@summary = "Default summary"
	macro openOrCloseCollapse(key_status = null, key_fieldName = null) {
		if (${key_status} == "Open") {
			if (IsVisible(locator1 = "DataSet#COLLAPSE_CLOSED", value1 = ${key_fieldName})) {
				Click(
					locator1 = "DataSet#COLLAPSE_CLOSED",
					value1 = ${key_fieldName});
			}
		}

		if (${key_status} == "Close") {
			if (IsVisible(locator1 = "DataSet#COLLAPSE_OPEN", value1 = ${key_fieldName})) {
				Click(
					locator1 = "DataSet#COLLAPSE_OPEN",
					value1 = ${key_fieldName});
			}
		}
	}

	@summary = "Default summary"
	macro searchField(searchTerm = null) {
		WaitForElementPresent(locator1 = "DataSet#FIELDS_TAB_SEARCH");

		AssertElementPresent(locator1 = "Icon#BASIC_SEARCH");

		Type(
			locator1 = "DataSet#FIELDS_TAB_SEARCH",
			value1 = ${searchTerm});
	}

	@summary = "Default summary"
	macro searchFieldInModal(searchTerm = null) {
		WaitForElementPresent(locator1 = "DataSet#MODAL_SEARCH");

		AssertElementPresent(locator1 = "Icon#BASIC_SEARCH");

		Type(
			locator1 = "DataSet#MODAL_SEARCH",
			value1 = ${searchTerm});

		if (!(isSet(modal))) {
			WaitForLiferayEvent.initializeLiferayEventLog();
		}
	}

	@summary = "Default summary"
	macro searchProvider(key_provider = null) {
		var searchTerm = ${key_provider};

		Click(
			dropdownLabel = "Choose an Option",
			locator1 = "ObjectField#ANY_DROPDOWN_LABEL");

		Type(
			locator1 = "MenuItem#SEARCH_FIELD",
			value1 = ${searchTerm});
	}

	@summary = "Default summary"
	macro selectDataSetFragmentView(key_modalTitle = null, key_selectView = null, key_viewName = null) {
		Click(locator1 = "ReportsAdminViewReportEntry#INFO_MESSAGE");

		Click.javaScriptClick(
			key_value = ${key_selectView},
			locator1 = "Button#SECONDARY_BY_TITLE");

		SelectFrame(
			key_title = ${key_modalTitle},
			locator1 = "IFrame#MODAL_ANY");

		Click.clickAtNotVisible(
			key_radioOption = ${key_viewName},
			locator1 = "CommerceEntry#RADIO_BUTTON");

		Button.clickSave();
	}

	@summary = "Default summary"
	macro selectFilterBy(filterByField = null) {
		Click(
			dropdownLabel = "Select",
			locator1 = "ObjectField#ANY_DROPDOWN_LABEL");

		DropdownMenuItem.click(menuItem = ${filterByField});
	}

	@summary = "Default summary"
	macro selectFilters(filterType = null) {
		Select(
			locator1 = "DataSet#FILTER_BY_SELECT",
			value1 = ${filterType});
	}

	@summary = "Default summary"
	macro selectFilterType(key_filterType = null) {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = ${key_filterType});
	}

	@summary = "Default summary"
	macro selectPreselectedValue(preselectType = null) {
		Type(
			ariaLabel = "Preselected Values",
			locator1 = "TextInput#ANY_WITH_ARIA_LABEL",
			value1 = ${preselectedValue});

		DropdownMenuItem.click(menuItem = ${preselectedValue});
	}

	@summary = "Default summary"
	macro selectPreSelectedValue(preSelectedValue = null) {
		Click(locator1 = "DataSet#PRESELECT_VALUE_INPUT");

		Click(
			key_value = ${preSelectedValue},
			locator1 = "DataSet#PRESELECT_VALUE_ITEM");
	}

	@summary = "Default summary"
	macro selectProvider(key_type = null) {
		Click(
			dropdownLabel = "Choose an Option",
			locator1 = "ObjectField#ANY_DROPDOWN_LABEL");

		Click(
			locator1 = "FrontendDataSet#SELECT_TYPE_PROVIDER",
			value1 = ${key_type});
	}

	@summary = "Default summary"
	macro selectRadioButtonOption(optionName = null) {
		Click(
			key_optionName = ${optionName},
			locator1 = "DataSet#RADIO_BUTTON_OPTION");
	}

	@summary = "Creates and publishes an object with a field to be used in a data set entry "
	macro setUpObjectForDataSet(labelName = null, objectName = null, pluralLabelName = null, scope = null, fieldBusinessType = null, fieldLabelName = null, fieldName = null, fieldType = null, ) {
		ObjectAdmin.addObjectViaAPI(
			labelName = ${labelName},
			objectName = ${objectName},
			pluralLabelName = ${pluralLabelName},
			scope = ${scope});

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = ${fieldBusinessType},
			fieldLabelName = ${fieldLabelName},
			fieldName = ${fieldName},
			fieldType = ${fieldType},
			isRequired = "false",
			objectName = ${objectName});

		ObjectAdmin.publishObjectViaAPI(objectName = ${objectName});
	}

	@summary = "Default summary"
	macro setUpPicklistforDataSet(picklistItemList = null) {
		Picklist.addPicklistViaAPI(picklistName = ${picklistName});

		for (var picklistItem : list ${picklistItemList}) {
			Picklist.addPicklistItemViaAPI(
				itemKey = ${picklistItem},
				itemName = ${picklistItem},
				picklistName = ${picklistName});
		}
	}

	@summary = "Default summary"
	macro uncheckFields(key_fieldList = null) {
		for (var key_fieldItem : list ${key_fieldList}) {
			Uncheck.uncheckNotVisible(
				checkboxName = ${key_fieldItem},
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
	}

}