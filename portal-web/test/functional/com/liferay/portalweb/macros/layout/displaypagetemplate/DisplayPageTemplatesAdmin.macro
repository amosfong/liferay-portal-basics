definition {

	@summary = "Default summary"
	macro _selectMappingTypes(subType = null, contentType = null) {
		if (isSet(contentType)) {
			Select(
				locator1 = "//div[contains(.,'Content Type')]/select",
				value1 = ${contentType});
		}

		if (isSet(subType)) {
			Select(
				locator1 = "//div[contains(.,'Subtype')]/select",
				value1 = ${subType});
		}
	}

	@summary = "Default summary"
	macro addDisplayPage(displayPageName = null, subType = null, contentType = null, masterLayoutName = null) {
		LexiconEntry.gotoAdd();

		if (IsElementPresent(key_menuItem = "Folder", locator1 = "MenuItem#ANY_MENU_ITEM")) {
			MenuItem.click(menuItem = "Display Page Template");
		}

		if (isSet(masterLayoutName)) {
			LexiconCard.clickCard(card = ${masterLayoutName});
		}
		else {
			LexiconCard.clickCard(card = "Blank");
		}

		PortletEntry.inputName(name = ${displayPageName});

		DisplayPageTemplatesAdmin._selectMappingTypes(
			contentType = ${contentType},
			subType = ${subType});

		Button.clickSave();

		PageEditor.assertFragmentSidebarLoaded();
	}

	@summary = "Add a folder"
	macro addFolder(folderName = null) {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Folder");

		PortletEntry.inputName(name = ${folderName});

		PortletEntry.create();
	}

	@summary = "Change content type"
	macro changeContentType(displayPageName = null, subType = null, contentType = null) {
		DisplayPageTemplatesAdmin.gotoDisplayPageEllipsisItem(
			displayPageName = ${displayPageName},
			item = "Change Content Type");

		DisplayPageTemplatesAdmin._selectMappingTypes(
			contentType = ${contentType},
			subType = ${subType});

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro deleteDisplayPage(displayPageName = null, defaultDisplayPageTemplate = null) {
		LexiconCard.clickEllipsisItem(
			card = ${displayPageName},
			item = "Delete");

		if (${defaultDisplayPageTemplate} == "true") {
			AssertTextEquals(
				locator1 = "Modal#BODY",
				value1 = "Are you sure you want to delete the default display page template? All related display pages will be deleted.");
		}
		else {
			AssertTextEquals(
				locator1 = "Modal#BODY",
				value1 = "Are you sure you want to delete this? It will be deleted immediately.");
		}

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");
	}

	@summary = "Default summary"
	macro gotoDisplayPage(displayPageName = null) {
		LexiconCard.clickCardTitleLink(card = ${displayPageName});

		PageEditor.assertFragmentSidebarLoaded();

		WaitForVisible(locator1 = "Sidebar#PANEL_OPEN");
	}

	@summary = "Default summary"
	macro gotoDisplayPageEllipsisItem(item = null, displayPageName = null) {
		WaitForPageLoad();

		LexiconCard.clickEllipsisItem(
			card = ${displayPageName},
			item = ${item});
	}

	@summary = "Go to a folder"
	macro gotoFolder(folderName = null) {
		LexiconCard.clickCardTitleLink(card = ${folderName});
	}

	@summary = "Default summary"
	macro importDisplayPageTemplateFromTempFolder(importOption = null) {
		Click.waitForMenuToggleJSClick(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Import");

		WaitForPageLoad();

		var displayPageTemplateZipFileName = TestCase.getDownloadedTempFileName(fileNamePattern = "display-page-template-*.zip");

		UploadTempFile.uploadTempFileHiddenNoMouseOver(
			locator1 = "TextInput#FILE",
			value1 = ${displayPageTemplateZipFileName});

		Button.clickImport();

		if (isSet(importOption)) {
			WaitForVisible(locator1 = "Modal#HEADER");

			Check.checkNotVisible(
				locator1 = "Radio#ANY",
				radioLabel = ${importOption});

			Click(
				key_text = "Import",
				locator1 = "Modal#MODAL_FOOTER_BUTTON");
		}

		AssertVisible(locator1 = "Message#SUCCESS_IMPORT");

		Button.clickDone();
	}

	@summary = "Default summary"
	macro markDisplayPageAsDefault(displayPageName = null) {
		DisplayPageTemplatesAdmin.gotoDisplayPageEllipsisItem(
			displayPageName = ${displayPageName},
			item = "Mark as Default");

		LexiconCard.viewCardSticker(
			card = ${displayPageName},
			icon = "check-circle");
	}

	@summary = "Default summary"
	macro openDisplayPagesAdmin(siteURLKey = null) {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_layout_page_template_admin_web_portlet_LayoutPageTemplatesPortlet&_com_liferay_layout_page_template_admin_web_portlet_LayoutPageTemplatesPortlet_tabs1=display-page-templates");
	}

	@summary = "Default summary"
	macro renameDisplayPage(newDisplayPageName = null, displayPageName = null) {
		DisplayPageTemplatesAdmin.gotoDisplayPageEllipsisItem(
			displayPageName = ${displayPageName},
			item = "Rename");

		PortletEntry.inputName(name = ${newDisplayPageName});

		Modal.save();
	}

	@summary = "Default summary"
	macro viewDisplayPageNotPresent(displayPageName = null) {
		LexiconCard.viewCardNotPresent(card = ${displayPageName});
	}

	@summary = "Default summary"
	macro viewDisplayPagePresent(displayPageName = null) {
		LexiconCard.viewCardPresent(card = ${displayPageName});
	}

	@summary = "Default summary"
	macro viewPGViaAP(webContentTitle = null, webContentContent = null, contentList = null) {
		var key_assetContent = ${webContentContent};
		var key_assetTitle = ${webContentTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${webContentTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${webContentContent});

		AssertClick(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${webContentTitle});

		for (var content : list ${contentList}) {
			AssertElementPresent(
				key_text = ${content},
				locator1 = "Fragment#EDITABLE_FIELD_CONTENT");
		}
	}

}