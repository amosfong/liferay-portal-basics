##
## DO NOT EDIT THIS FILE.
##
## To update the properties of this file, create a separate properties file
## named "test.${user.name}.properties" with the properties to overwrite.
##

##
## Accessibility
##

    test.batch.dist.app.servers[accessibility]=tomcat

    test.batch.names[accessibility]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][accessibility]=\
        (portal.accessibility == true) AND \
        (portal.upstream == true)

##
## Accessibility Menu
##

    test.batch.dist.app.servers[accessibility-menu]=tomcat

    test.batch.names[accessibility-menu]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][accessibility-menu]=\
        (portal.upstream == true) AND \
        (testray.component.names ~ "Accessibility Menu")

##
## Analytics Cloud
##

    analytics.cloud.asah.backend.url=http://osbasahbackend:8080
    analytics.cloud.asah.curator.batch.url=http://osbasahbatchcurator:8080
    analytics.cloud.asah.curator.stream.url=http://osbasahstreamcurator:8080
    analytics.cloud.asah.dir=${project.dir}/../com-liferay-osb-asah-private
    analytics.cloud.asah.elasticsearch.port=9201
    analytics.cloud.asah.image.names.excludes=liferay/dxp.*
    analytics.cloud.asah.publisher.url=http://osbasahpublisher:8080

    analytics.cloud.cucumber.options=\
        --tags @priority_1 \
        \
        --tags ~@blocked \
        --tags ~@prototype \
        --tags ~@skip \
        \
        src/testIntegration/resources/features

    analytics.cloud.faro.container.name=faro
    analytics.cloud.faro.data.creator.api=1.0.4
    analytics.cloud.faro.data.creator.impl=1.0.7
    analytics.cloud.faro.data.csv=${analytics.cloud.faro.dir}/osb-faro-functional-test/src/testIntegration/resources/csv/ac-data-generator.csv
    analytics.cloud.faro.dir=${project.dir}/modules/dxp/apps/osb/osb-faro
    analytics.cloud.faro.dxp.port=8081
    analytics.cloud.faro.frontend.url=http://osbfarofrontend:8080
    analytics.cloud.faro.image.name=liferay/com-liferay-osb-faro:latest
    analytics.cloud.faro.image.names.excludes=wedeploy/dxpcloud-liferay-dxp.*
    analytics.cloud.faro.osgi.console.port=11312

    analytics.cloud.jstack.dumps=\
        faro=Bootstrap

    analytics.cloud.project.name=com-liferay-osb-asah-private
    analytics.cloud.rsync.timeout=1200000
    analytics.cloud.start.timeout=300000

##
## Apache Directory
##

    apacheds.dir=${app.server.parent.dir}/apacheds-${apacheds.version}
    apacheds.instance.blank.user.password.custom.zip.name=apacheds-${apacheds.version}-instance-blank-user-password.zip
    apacheds.instance.custom.base.url=http://files.liferay.com/private/apps/apache/apacheds
    apacheds.instance.custom.zip.name=apacheds-${apacheds.version}-instance.zip
    apacheds.instance.multiple.users.custom.zip.name=apacheds-${apacheds.version}-instance-multiple-users.zip
    apacheds.version=2.0.0-M23
    apacheds.zip.name=apacheds-${apacheds.version}.zip
    apacheds.zip.url=http://mirrors.sonic.net/apache//directory/apacheds/dist/${apacheds.version}/${apacheds.zip.name}

##
## Apache HTTP
##

    apache.http.conf.file=${apache.http.dir}/conf/httpd.conf
    apache.http.dir=/etc/httpd

##
## App Server
##

    app.server.jboss.start.executable=standalone${file.suffix.bat}
    app.server.jboss.start.executable.arg.line=
    app.server.jboss.stop.executable=jboss-cli${file.suffix.bat}
    app.server.jboss.stop.executable.arg.line=--connect command=:shutdown

    app.server.max.log.size=1

    app.server.tomcat.manager.password=tomcat
    app.server.tomcat.manager.user=tomcat
    app.server.tomcat.start.executable=catalina${file.suffix.bat}
    app.server.tomcat.start.executable.arg.line=run
    app.server.tomcat.stop.executable=shutdown${file.suffix.bat}
    app.server.tomcat.stop.executable.arg.line=

    app.server.weblogic.start.executable=../startWebLogic${file.suffix.cmd}
    app.server.weblogic.start.executable.arg.line=
    app.server.weblogic.stop.executable=../stopWebLogic${file.suffix.cmd}
    app.server.weblogic.stop.executable.arg.line=

    app.server.wildfly.start.executable=standalone${file.suffix.bat}
    app.server.wildfly.start.executable.arg.line=
    app.server.wildfly.stop.executable=jboss-cli${file.suffix.bat}
    app.server.wildfly.stop.executable.arg.line=--connect command=:shutdown

##
## Blade Sample
##

    #blade.samples.dir=

##
## Browser
##

    #browser.chrome.bin.args=
    #browser.chrome.bin.file=

    #browser.chrome.version=44.0
    #browser.chrome.version=65.0
    #browser.chrome.version=86.0
    browser.chrome.version=100.0

    #browser.edge.version=20.1
    browser.edge.version=40.1

    #browser.firefox.bin.file[22.0]=
    #browser.firefox.bin.file[38.0]=
    #browser.firefox.bin.file[45.0]=
    #browser.firefox.bin.file[52.0]=

    #browser.firefox.version=22.0
    #browser.firefox.version=38.0
    #browser.firefox.version=45.0
    browser.firefox.version=52.0

    #browser.internetexplorer.version=7.0
    #browser.internetexplorer.version=8.0
    #browser.internetexplorer.version=9.0
    #browser.internetexplorer.version=10.0
    browser.internetexplorer.version=11.0

    browser.iossafari.version=8.4

    browser.safari.version=8.0

    browser.type=chrome
    #browser.type=edge
    #browser.type=firefox
    #browser.type=internetexplorer
    #browser.type=safari

    browser.type[tck]=chrome

##
## Build
##

    build.app.server=false

##
## Central
##

    central.requirements.tests=\
        com/liferay/portal/modules/ModulesStructureTest.class

##
## Click to Chat
##

    #click.to.chat.chatwoot.password=
    #click.to.chat.crisp.password=
    #click.to.chat.hubspot.password=
    #click.to.chat.jivochat.password=
    #click.to.chat.livechat.password=
    #click.to.chat.liveperson.password=
    #click.to.chat.smartsupp.password=
    #click.to.chat.tawkto.password=
    #click.to.chat.tidio.password=
    #click.to.chat.tolvnow.password=
    #click.to.chat.zendesk.password=

##
## Commerce
##

    #commerce.license.owner=
    #osb.api.token=

##
## Component Names
##

    component.names=\
        portal-acceptance,\
        portal-analytics-cloud,\
        portal-bpm,\
        portal-bpm-ee,\
        portal-ci-infrastructure,\
        portal-commerce,\
        portal-content-management,\
        portal-content-management-ee,\
        portal-core-infra,\
        portal-db-infrastructure,\
        portal-developer-tools,\
        portal-frontend-infrastructure,\
        portal-headless,\
        portal-page-management,\
        portal-platform-experience,\
        portal-publications,\
        portal-search,\
        portal-search-ee,\
        portal-security,\
        portal-site-management,\
        portal-smoke,\
        portal-solutions,\
        portal-test-plugins,\
        portal-upgrades

##
## Database
##

    #database.type=auroramysql
    #database.type=aurorapostgresql
    #database.type=db2
    #database.type=hypersonic
    #database.type=mariadb
    database.type=mysql
    #database.type=postgresql
    #database.type=oracle
    #database.type=sqlserver

    #
    # Aurora MySQL
    #

    database.auroramysql.device.name=
    database.auroramysql.driver=com.mysql.cj.jdbc.Driver
    database.auroramysql.host=localhost
    database.auroramysql.password=
    database.auroramysql.schema=lportal
    database.auroramysql.service.cmd.start=
    database.auroramysql.service.cmd.stop=
    database.auroramysql.service.executable=
    database.auroramysql.url=jdbc:mysql://${database.auroramysql.host}/${database.auroramysql.schema}
    database.auroramysql.username=root
    database.auroramysql.version=5.6
    database.auroramysql.version.cmd=

    #
    # Aurora PostgreSQL
    #

    database.aurorapostgresql.device.name=
    database.aurorapostgresql.driver=org.postgresql.Driver
    database.aurorapostgresql.host=localhost
    database.aurorapostgresql.password=
    database.aurorapostgresql.schema=lportal
    database.aurorapostgresql.service.cmd.start=
    database.aurorapostgresql.service.cmd.stop=
    database.aurorapostgresql.service.executable=
    database.aurorapostgresql.url=jdbc:aurorapostgresql://${database.aurorapostgresql.host}:5432/${database.aurorapostgresql.schema}
    database.aurorapostgresql.username=root
    database.aurorapostgresql.version=9.6
    database.aurorapostgresql.version.cmd=

    #
    # DB2
    #

    database.db2.device.name=
    #database.db2.docker.image=
    #database.db2.docker.run.options=
    database.db2.driver=com.ibm.db2.jcc.DB2Driver
    database.db2.host=localhost
    database.db2.password=password
    database.db2.port=50000
    database.db2.schema=lportal
    database.db2.service.cmd.start=db2start
    database.db2.service.cmd.stop=db2stop force
    database.db2.service.executable=db2
    database.db2.url=jdbc:db2://${database.db2.host}:50000/${database.db2.schema}:deferPrepares=false;fullyMaterializeInputStreams=true;fullyMaterializeLobData=true;progresssiveLocators=2;progressiveStreaming=2;
    database.db2.username=root
    database.db2.version=11.5.7
    database.db2.version.cmd=db2level

    #
    # Hypersonic
    #

    database.hypersonic.device.name=
    database.hypersonic.driver=org.hsqldb.jdbc.JDBCDriver
    database.hypersonic.host=localhost
    database.hypersonic.password=
    database.hypersonic.schema=lportal
    database.hypersonic.service.cmd.start=fake hypersonic service start
    database.hypersonic.service.cmd.stop=fake hypersonic service stop
    database.hypersonic.service.executable=echo
    database.hypersonic.url=jdbc:hsqldb:${liferay.home}/data/hypersonic/${database.hypersonic.schema}
    database.hypersonic.username=sa
    database.hypersonic.version=2.0
    database.hypersonic.version.cmd=Hypersonic Version: ${database.hypersonic.version}

    #
    # MariaDB
    #

    database.mariadb.device.name=
    #database.mariadb.docker.image=
    #database.mariadb.docker.run.options=
    database.mariadb.driver=org.mariadb.jdbc.Driver
    database.mariadb.host=localhost:3307
    database.mariadb.password=
    database.mariadb.port=3307
    database.mariadb.schema=lportal
    database.mariadb.service.cmd.start=mariadb start
    database.mariadb.service.cmd.stop=mariadb stop
    database.mariadb.service.executable=service
    database.mariadb.url=jdbc:mariadb://${database.mariadb.host}/${database.mariadb.schema}
    database.mariadb.username=root
    database.mariadb.version=10.6
    database.mariadb.version.cmd=--version

    #
    # MySQL
    #

    database.mysql.device.name=
    #database.mysql.docker.image=
    #database.mysql.docker.run.options=
    database.mysql.driver=com.mysql.cj.jdbc.Driver
    database.mysql.host=localhost
    database.mysql.password=
    database.mysql.port=3306
    database.mysql.schema=lportal
    database.mysql.service.cmd.start=mysqld start
    database.mysql.service.cmd.stop=mysqld stop
    database.mysql.service.executable=service
    database.mysql.url=jdbc:mysql://${database.mysql.host}/${database.mysql.schema}
    database.mysql.username=root
    database.mysql.version=5.7
    database.mysql.version.cmd=--version

    #
    # Uncommment the following lines to use MySQL 5.5 instead of MySQL 5.7.
    #
    #database.mysql.service.cmd.start=mysql55 start
    #database.mysql.service.cmd.stop=mysql55 stop
    #database.mysql.version=5.5

    #
    # Uncommment the following lines to use MySQL 5.6 instead of MySQL 5.7.
    #
    #database.mysql.service.cmd.start=mysql57 start
    #database.mysql.service.cmd.stop=mysql57 stop
    #database.mysql.version=5.6

    #
    # Oracle
    #

    database.oracle.device.name=
    #database.oracle.docker.image=
    #database.oracle.docker.run.options=
    database.oracle.driver=oracle.jdbc.OracleDriver
    database.oracle.host=localhost
    database.oracle.password=${database.oracle.schema}
    database.oracle.port=1521
    database.oracle.schema=lportal
    database.oracle.service.cmd.start=-f build-test-batch.xml oracle-service-start
    database.oracle.service.cmd.stop=-f build-test-batch.xml oracle-service-stop
    database.oracle.service.executable=ant
    database.oracle.url=jdbc:oracle:thin:@${database.oracle.host}:1521:oracl
    database.oracle.username=${database.oracle.schema}
    database.oracle.version=19.3.0.0.0
    database.oracle.version.cmd=-version

    #
    # PostgreSQL
    #

    database.postgresql.device.name=
    #database.postgresql.docker.image=
    #database.postgresql.docker.run.options=
    database.postgresql.driver=org.postgresql.Driver
    database.postgresql.host=localhost
    database.postgresql.password=
    database.postgresql.port=5432
    database.postgresql.schema=lportal
    database.postgresql.service.cmd.start=-f build-test-batch.xml postgresql-service-start
    database.postgresql.service.cmd.stop=-f build-test-batch.xml postgresql-service-stop
    database.postgresql.service.executable=ant
    database.postgresql.url=jdbc:postgresql://${database.postgresql.host}:5432/${database.postgresql.schema}
    database.postgresql.username=root
    database.postgresql.version=15.5
    database.postgresql.version.cmd=--version

    #
    # SQL Server
    #

    database.sqlserver.device.name=
    database.sqlserver.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
    database.sqlserver.host=localhost
    database.sqlserver.password=password
    database.sqlserver.schema=lportal
    database.sqlserver.url=jdbc:sqlserver://${database.sqlserver.host};databaseName=${database.sqlserver.schema}
    database.sqlserver.username=sa
    database.sqlserver.version=2022
    database.sqlserver.version.cmd=-version

##
## Database Upgrade
##

    db-upgrade.5.2.3.build=523
    db-upgrade.5.2.3.bundled.tomcat.dir.name=liferay-portal-5.2.3/tomcat-6.0.18
    db-upgrade.5.2.3.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-5.2.3.zip

    db-upgrade.5.2.5.build=525
    db-upgrade.5.2.5.bundled.tomcat.dir.name=liferay-portal-5.2-ee-sp1/tomcat-6.0.18
    db-upgrade.5.2.5.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-5.2-ee-sp1.zip

    db-upgrade.5.2.7.build=527
    db-upgrade.5.2.7.bundled.tomcat.dir.name=liferay-portal-5.2-ee-sp3/tomcat-6.0.18
    db-upgrade.5.2.7.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-5.2-ee-sp3.zip

    db-upgrade.5.2.8.build=528
    db-upgrade.5.2.8.bundled.tomcat.dir.name=liferay-portal-5.2-ee-sp4/tomcat-6.0.18
    db-upgrade.5.2.8.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-5.2-ee-sp4.zip

    db-upgrade.5.2.9.build=529
    db-upgrade.5.2.9.bundled.tomcat.dir.name=liferay-portal-5.2-ee-sp5/tomcat-6.0.29
    db-upgrade.5.2.9.bundled.tomcat.file.name=liferay-portal-tomcat-6.0.29-5.2-ee-sp5.zip

    db-upgrade.6.0.6.build=606
    db-upgrade.6.0.6.bundled.tomcat.dir.name=liferay-portal-6.0.6/tomcat-6.0.29
    db-upgrade.6.0.6.bundled.tomcat.file.name=liferay-portal-tomcat-6.0.6-20110225.zip

    db-upgrade.6.0.10.build=6010
    db-upgrade.6.0.10.bundled.tomcat.dir.name=liferay-portal-6.0-ee/tomcat-6.0.29
    db-upgrade.6.0.10.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-ee.zip

    db-upgrade.6.0.11.build=6011
    db-upgrade.6.0.11.bundled.tomcat.dir.name=liferay-portal-6.0-ee-sp1/tomcat-6.0.29
    db-upgrade.6.0.11.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-ee-sp1.zip

    db-upgrade.6.0.12.build=6012
    db-upgrade.6.0.12.bundled.tomcat.dir.name=liferay-portal-6.0-ee-sp2/tomcat-6.0.32
    db-upgrade.6.0.12.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-ee-sp2-20110727.zip

    db-upgrade.6.1.1.build=611
    db-upgrade.6.1.1.bundled.jboss.dir.name=liferay-portal-6.1.1-ce-ga2/jboss-7.1.1
    db-upgrade.6.1.1.bundled.jboss.file.name=liferay-portal-jboss-6.1.1-ce-ga2-20120731132656558.zip
    db-upgrade.6.1.1.bundled.tomcat.dir.name=liferay-portal-6.1.1-ce-ga2/tomcat-7.0.27
    db-upgrade.6.1.1.bundled.tomcat.file.name=liferay-portal-tomcat-6.1.1-ce-ga2-20120731132656558.zip

    db-upgrade.6.1.10.build=6110
    db-upgrade.6.1.10.bundled.tomcat.dir.name=liferay-portal-6.1.10-ee-ga1/tomcat-7.0.25
    db-upgrade.6.1.10.bundled.tomcat.file.name=liferay-portal-tomcat-6.1.10-ee-ga1-20120217120951450.zip

    db-upgrade.6.1.20.build=6120
    db-upgrade.6.1.20.bundled.jboss.dir.name=liferay-portal-6.1.20-ee-ga2/jboss-7.1.1
    db-upgrade.6.1.20.bundled.jboss.file.name=liferay-portal-jboss-6.1.20-ee-ga2-20120731110418084.zip
    db-upgrade.6.1.20.bundled.tomcat.dir.name=liferay-portal-6.1.20-ee-ga2/tomcat-7.0.27
    db-upgrade.6.1.20.bundled.tomcat.file.name=liferay-portal-tomcat-6.1.20-ee-ga2-20120731110418084.zip
    db-upgrade.6.1.20.plugins.dir=${project.dir}/../../plugins/ee-6.1.20

##
## Digital Signature
##

    #digital.signature.account.base.uri=
    #digital.signature.api.accountId=
    #digital.signature.api.username=
    #digital.signature.integration.key=
    #digital.signature.rsa.private.key=

##
## Email Addresses and Passwords
##

    #email.address.1=
    #email.address.2=
    #email.address.3=
    #email.address.4=
    #email.address.5=
    #email.password.1=
    #email.password.2=
    #email.password.3=
    #email.password.4=
    #email.password.5=

##
## Facebook
##

    #facebook.application.id=
    #facebook.application.secret=
    #facebook.email=
    #facebook.password=

##
## Google
##

    #google.api.key.1=
    #google.api.key.2=
    #google.api.key.3=
    #google.client.id.1=
    #google.client.id.2=
    #google.client.id.3=
    #google.client.secret.1=
    #google.client.secret.2=
    #google.client.secret.3=

##
## Gradle Plugins
##

    gradle.plugins.test.excludes.globs[gradle-plugins-workspace]=\
        *StartDockerContainerSpec*

    gradle.plugins.test.includes=\
        gradle-plugins*

##
## Java JDK
##

    #java.jdk.7.x32.home=
    #java.jdk.7.x64.home=
    #java.jdk.8.x32.home=
    #java.jdk.8.x64.home=

    #java.jdk.architecture=x32
    java.jdk.architecture=x64

    #java.jdk.type=ibm
    #java.jdk.type=open
    java.jdk.type=oracle

    #java.jdk.x32.version=5
    #java.jdk.x32.version=6
    java.jdk.x32.version=7
    #java.jdk.x32.version=8

    #java.jdk.x64.version=5
    #java.jdk.x64.version=6
    java.jdk.x64.version=7
    #java.jdk.x64.version=8

##
## Jenkins
##

    jenkins.private.property.names=\
        email.address.1,\
        email.address.2,\
        email.address.3,\
        email.address.4,\
        email.address.5,\
        email.password.1,\
        email.password.2,\
        email.password.3,\
        email.password.4,\
        email.password.5

    #jenkins.testray.results.dir=

##
## JMX
##

    jmx.remote.authenticate=false
    jmx.remote.port=8099
    jmx.remote.ssl=false

##
## Liferay Faces
##

    liferay.faces.alloy.dir=../liferay-faces-alloy
    liferay.faces.bridge.impl.dir=../liferay-faces-bridge-impl
    liferay.faces.portal.dir=../liferay-faces-portal
    liferay.faces.showcase.dir=../liferay-faces-showcase
    liferay.faces.test.browser.version=52.0
    liferay.faces.test.timeout=30

##
## Liferay Plugins
##

    liferay.plugins.branch=master

##
## Liferay Portal
##

    liferay.portal.branch=master
    liferay.portal.bundle=latest

##
## Marketplace
##

    #
    # Apps
    #

    marketplace.app[content-targeting]=Liferay Audience Targeting.lpkg

    #
    # Email Addresses and Passwords
    #

    #marketplace.email.address.1=
    #marketplace.email.address.2=
    #marketplace.email.address.3=
    #marketplace.email.address.4=
    #marketplace.email.address.5=
    #marketplace.email.password.1=
    #marketplace.email.password.2=
    #marketplace.email.password.3=
    #marketplace.email.password.4=
    #marketplace.email.password.5=

    #
    # Portlet Properties
    #

    #marketplace.portlet.properties=

##
## Modules
##

    modules.excludes[modules-compile]=\
        third-party/**

    #modules.excludes[modules-semantic-versioning]=
    #modules.excludes[rest-builder]=
    #modules.excludes[service-builder]=

    #modules.excludes.dxp=

    modules.excludes.portal=\
        dxp/apps/**

    modules.excludes.private[modules-compile]=\
        ${modules.excludes[modules-compile]}

    modules.excludes.public[modules-compile]=${modules.excludes[modules-compile]}

    #modules.includes[modules-compile]=

    modules.includes[modules-semantic-versioning]=\
        apps/**,\
        core/**,\
        dxp/apps/**

    modules.includes[rest-builder]=\
        apps/**,\
        core/**,\
        dxp/apps/**,\
        test/**,\
        util/**

    modules.includes[service-builder]=\
        apps/**,\
        core/**,\
        dxp/apps/**,\
        test/**,\
        util/**

    modules.includes.private[modules-semantic-versioning]=\
        ${modules.includes[modules-semantic-versioning]},\
        dxp/apps/**

    modules.includes.private[rest-builder]=\
        ${modules.includes[rest-builder]},\
        dxp/apps/**

    modules.includes.private[service-builder]=\
        ${modules.includes[service-builder]},\
        dxp/apps/**

    modules.includes.public[modules-semantic-versioning]=${modules.includes[modules-semantic-versioning]}

    modules.includes.public[rest-builder]=${modules.includes[rest-builder]}

    modules.includes.public[service-builder]=${modules.includes[service-builder]}

##
## Node
##

    node.exec=${node.home}/bin/node
    node.home=${project.dir}/build/node
    npm.exec=${npm.home}/npm
    npm.home=${project.dir}/build/node/lib/node_modules/corepack/shims
    npx.exec=${npm.home}/npx
    yarn.exec=${npm.home}/yarn

##
## OAuth 2
##

    oauth2.application.zip.id=c2b6
    oauth2.application.zip.url=https://resources.learn.liferay.com/dxp/latest/en/headless-delivery/using-oauth2/liferay-${oauth2.application.zip.id}.zip
    oauth2.url=http://localhost:3000

##
## OneDrive
##

    #onedrive.client.id=
    #onedrive.client.secret=
    #onedrive.tenant=

##
## OpenAM
##

    openam.admin.tools.dir=${app.server.parent.dir}/SSOAdminTools-${openam.version}
    openam.admin.tools.zip.name=SSOAdminTools-${openam.version}.zip
    openam.config.dir=/root/openam
    openam.configurator.tools.dir=${app.server.parent.dir}/SSOConfiguratorTools-${openam.version}
    openam.configurator.tools.zip.name=SSOConfiguratorTools-${openam.version}.zip
    openam.version=13.0.0
    openam.war.name=openam-${openam.version}.war

##
## Operating System
##

    #operating.system.centos.version=6
    operating.system.centos.version=7

    #operating.system.debian.version=7
    operating.system.debian.version=8

    #operating.system.orcllinux.version=6
    operating.system.orcllinux.version=7

    operating.system.osx.version=10.10

    operating.system.rockylinux.version=9.1

    #operating.system.solaris.version=10
    operating.system.solaris.version=11

    #operating.system.suse.version=11
    operating.system.suse.version=12

    operating.system.type=centos
    #operating.system.type=debian
    #operating.system.type=orcllinux
    #operating.system.type=osx
    #operating.system.type=rockylinux
    #operating.system.type=solaris
    #operating.system.type=suse
    #operating.system.type=ubuntu
    #operating.system.type=windows
    #operating.system.type=windowsserver

    operating.system.ubuntu.version=14
    #operating.system.ubuntu.version=16
    #operating.system.ubuntu.version=18

    operating.system.windows.version=10

    #operating.system.windowsserver.version=2008r2
    #operating.system.windowsserver.version=2012
    operating.system.windowsserver.version=2012r2
    #operating.system.windowsserver.version=2016

##
## Performance
##

    #performance.branch.main=
    #performance.branch.temp=

##
## Playwright
##

    playwright.dir=${project.dir}/modules/test/playwright

    playwright.projects.includes[playwright-js-tomcat90-mysql57_stable]=stable

    playwright.version=1.45.2

##
## Portal Legacy
##

    #portal.legacy.dir=

##
## PRM Salesforce
##

    #site.initializer.partner.portal.consumer.key=
    #site.initializer.partner.portal.consumer.secret=
    #site.initializer.partner.portal.login.url=
    #site.initializer.partner.portal.password=
    #site.initializer.partner.portal.username=

##
## Product Names
##

    product.names=\
        marketplace,\
        portal

##
## reCAPTCHA
##

    recaptcha.private.key=6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
    recaptcha.public.key=6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI

##
## Relevant
##

    modified.files.global.excludes=\
        **.function,\
        **.macro,\
        **.path,\
        **.prose,\
        **.testcase,\
        **/ci.properties,\
        **/packageinfo,\
        **/source-formatter.properties,\
        **/test.properties,\
        .github/**,\
        .m2-tmp/**,\
        ci.properties,\
        learn-resources/**,\
        modules/build-buildscript.gradle,\
        modules/build.gradle,\
        modules/dxp/apps/commerce-salesforce-connector/commerce-salesforce-talend-connectors/**,\
        modules/etl/**,\
        modules/sdk/**,\
        modules/test/jenkins-plugin-events/**,\
        modules/test/jenkins-results-parser/**,\
        modules/test/playwright/**,\
        modules/test/poshi/**,\
        portal-web/build-test.gradle,\
        portal-web/test/functional/com/liferay/portalweb/**,\
        readme/**,\
        source-formatter.properties,\
        test.properties

    relevant.engine.enabled=true

    relevant.rule.names=\
        build-iw-rule,\
        default-modules-integration-rule,\
        default-modules-unit-rule,\
        default-unit-rule,\
        modules-semantic-versioning-rule,\
        playwright-compile-rule,\
        playwright-setup-rule,\
        rest-builder-rule,\
        semantic-versioning-rule,\
        service-builder-rule,\
        stable-rule,\
        staging-rule,\
        workspaces-rule

    test.batch.class.names.excludes[unit][relevant]=\
        ${test.batch.class.names.excludes}

    test.batch.class.names.includes.required[modules-integration-*][relevant]=\
        ${test.batch.class.names.includes[modules-integration-*_stable]},\
        **/src/testIntegration/**/DeclarativeServiceDependencyManagerTest.java,\
        **/src/testIntegration/**/SpringExtenderDependencyManagerTest.java

    test.batch.class.names.includes.required[modules-unit][relevant]=${test.batch.class.names.includes[modules-unit_stable]}

    test.batch.class.names.includes.required[modules-unit-project-templates][relevant]=\
        **/project-templates/**/src/test/**/*Test.java

    test.batch.class.names.includes.required[unit][relevant]=${test.batch.class.names.includes[unit_stable]}

    test.batch.dist.app.servers[relevant]=tomcat

    test.batch.names[relevant]=\
        ${test.batch.names[stable]},\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        playwright-js-tomcat90-mysql57,\
        semantic-versioning,\
        unit

    test.batch.run.property.global.query[functional-tomcat*-mysql*][relevant]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (portal.stable != "true")

    test.batch.run.property.global.query[functional-upgrade-tomcat90-postgresql*][relevant]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (\
            (portal.acceptance == true) AND \
            (portal.upstream == true)\
        )

    test.batch.run.property.global.query[functional-upgrade-tomcat*-mysql*][relevant]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.acceptance == true) AND \
            (portal.upstream == true)\
        )

    test.batch.run.property.query[functional-tomcat*-db2*][relevant]=

    test.batch.run.property.query[functional-tomcat*-hypersonic*][relevant]=

    test.batch.run.property.query[functional-tomcat*-mariadb*][relevant]=

    test.batch.run.property.query[functional-tomcat*-mysql*][relevant]=\
        (analytics.cloud.smoke == "true") OR \
        (liferay.online.smoke == "true")

    test.batch.run.property.query[functional-tomcat*-oracle*][relevant]=

    test.batch.run.property.query[functional-tomcat*-postgresql*][relevant]=

    test.batch.run.property.query[functional-tomcat*-sqlserver*][relevant]=

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][relevant]=\
        (portal.smoke.upgrades == true) AND \
        (portal.version == "7.4.13") AND \
        (skip.upgrade-legacy-database != true) AND \
        (testray.main.component.name == "Database Upgrade Framework")

    test.batch.run.property.query[functional-upgrade-tomcat*-mysql*][relevant]=\
        (portal.smoke.upgrades == true) AND \
        (\
            (database.bare.enabled == true) OR \
            (portal.version == "6.2.10.21") OR \
            (portal.version == "7.0.10.6")\
        ) AND \
        (skip.upgrade-legacy-database != true) AND \
        (testray.main.component.name == "Database Upgrade Framework")

    test.batch.run.property.query[functional-workspaces-mysql*][relevant]=\

    test.relevant.changes[relevant]=true
    test.relevant.changes.in.stable[relevant]=true

    workspaces.names[workspaces-compile][relevant]=${workspaces.names[workspaces-compile][stable]}

    #
    # Build IW Rule
    #

    modified.files.includes[build-iw-rule][relevant]=\
        portal-impl/src/com/liferay/portal/image/ImageToolUtil.java,\
        portal-impl/src/com/liferay/portal/service/permission/CommonPermissionUtil.java,\
        portal-impl/src/com/liferay/portal/service/permission/PasswordPolicyPermissionUtil.java,\
        portal-impl/src/com/liferay/portal/service/permission/UserGroupPermissionUtil.java,\
        portal-impl/src/com/liferay/portal/servlet/BrowserSnifferUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/language/UnicodeLanguageUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/portlet/PortletModeFactory.java,\
        portal-kernel/src/com/liferay/portal/kernel/portlet/WindowStateFactory.java,\
        portal-kernel/src/com/liferay/portal/kernel/service/permission/GroupPermissionUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/service/permission/OrganizationPermissionUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/service/permission/PortalPermissionUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/service/permission/PortletPermissionUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/service/permission/RolePermissionUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/service/permission/UserPermissionUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/ArrayUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/CalendarFactoryUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/DateUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/GetterUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/HtmlUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/ParamUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/SessionClicks.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/StringUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/TimeZoneUtil.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/UnicodeFormatter.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/URLCodec.java,\
        portal-kernel/src/com/liferay/portal/kernel/util/Validator.java

    test.batch.names[build-iw-rule][relevant]=build-iw

    #
    # Default Modules Integration Rule
    #

    modified.files.includes[default-modules-integration-rule][relevant]=\
        **/*.java,\
        **/test/**/*Test.java,\
        **/testIntegration/**/*Test.java

    modules.includes.required.test.batch.class.names.includes[default-modules-integration-rule][relevant][modules-integration-mysql57]=\
        ${test.batch.class.names.includes[modules-integration-*_stable]},\
        **/src/testIntegration/**/DeclarativeServiceDependencyManagerTest.java,\
        **/src/testIntegration/**/SpringExtenderDependencyManagerTest.java

    test.batch.names[default-modules-integration-rule][relevant]=modules-integration-mysql57

    #
    # Default Modules Unit Rule
    #

    modified.files.includes[default-modules-unit-rule][relevant]=\
        **/*.java,\
        **/test/**/*Test.java,\
        **/testIntegration/**/*Test.java

    modules.includes.required.test.batch.class.names.includes[default-modules-unit-rule][relevant][modules-unit]=${test.batch.class.names.includes[modules-unit_stable]}

    test.batch.names[default-modules-unit-rule][relevant]=modules-unit

    #
    # Default Unit Rule
    #

    modified.files.includes[default-unit-rule][relevant]=\
        portal-impl/**,\
        portal-kernel/**,\
        portal-web/**,\
        util-bridges/**,\
        util-java/**,\
        util-taglib/**

    test.batch.names[default-unit-rule][relevant]=unit

    #
    # Modules Semantic Versioning Rule
    #

    modified.files.includes[modules-semantic-versioning-rule][relevant]=modules/**

    test.batch.names[modules-semantic-versioning-rule][relevant]=modules-semantic-versioning

    #
    # Playwright Compile Rule
    #

    modified.files.includes[playwright-compile-rule][relevant]=modules/test/playwright/**

    test.batch.names[playwright-compile-rule][relevant]=playwright-compile

    #
    # Playwright Setup Rule
    #

    modified.files.includes[playwright-setup-rule][relevant]=**

    playwright.projects.includes[playwright-setup-rule][relevant][playwright-js-tomcat90-mysql57]=page-management-site-setup

    test.batch.names[playwright-setup-rule][relevant]=playwright-js-tomcat90-mysql57

    #
    # REST Builder Rule
    #

    modified.files.includes[rest-builder-rule][relevant]=\
        **/portal-tools-rest-builder/**,\
        **/rest-config*.yaml,\
        **/rest-openapi*.yaml

    test.batch.names[rest-builder-rule][relevant]=rest-builder

    #
    # Semantic Versioning Rule
    #

    modified.files.excludes[semantic-versioning-rule][relevant]=modules/**

    modified.files.includes[semantic-versioning-rule][relevant]=**

    test.batch.names[semantic-versioning-rule][relevant]=semantic-versioning

    #
    # Service Builder Rule
    #

    modified.files.includes[service-builder-rule][relevant]=\
        **/*-hints.xml,\
        **/*FinderImpl.java,\
        **/*ServiceImpl.java,\
        **/portal-tools-service-builder/**,\
        **/service.xml

    test.batch.names[service-builder-rule][relevant]=service-builder

    #
    # Stable Rule
    #

    modified.files.includes[stable-rule][relevant]=**

    modules.includes.required.test.batch.class.names.includes[stable-rule][relevant][modules-integration-mysql57_stable]=\
        ${test.batch.class.names.includes[modules-integration-*_stable]}

    modules.includes.required.test.batch.class.names.includes[stable-rule][relevant][modules-unit_stable]=\
        ${test.batch.class.names.includes[modules-unit_stable]}

    playwright.projects.includes[stable-rule][relevant][playwright-js-tomcat90-mysql57_stable]=stable

    test.batch.names[stable-rule][relevant]=\
        central-requirements,\
        functional-smoke-tomcat90-mysql57_stable,\
        functional-tomcat90-mysql57-chrome100_stable,\
        functional-upgrade-tomcat90-mysql57_stable,\
        js-unit,\
        modules-compile,\
        modules-integration-mysql57_stable,\
        modules-unit_stable,\
        playwright-js-tomcat90-mysql57_stable,\
        unit_stable

    test.batch.run.property.query[stable-rule][relevant][functional-smoke-tomcat90-mysql57_stable]=\
        ${test.batch.run.property.query[functional-smoke-tomcat90-mysql57]}

    test.batch.run.property.query[stable-rule][relevant][functional-tomcat90-mysql57-chrome100_stable]=\
        (portal.stable == "true")

    test.batch.run.property.query[stable-rule][relevant][functional-upgrade-tomcat90-mysql57_stable]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (custom.properties != "upgrade.database.auto.run=true") AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke.upgrades == true) AND \
        (\
            (portal.version == "7.3.10") OR \
            (portal.version == "7.4.13")\
        )

    #
    # Staging Rule
    #

    modified.files.includes[staging-rule][relevant]=\
        **/*Staging*.java,\
        **/exportimport/**/*.java

    modules.includes.required.test.batch.class.names.includes[staging-rule][relevant][modules-integration-mysql57]=${test.batch.class.names.includes[headless-staging]}

    modules.includes.required.test.batch.class.names.includes[staging-rule][relevant][modules-unit]=${test.batch.class.names.includes[headless-staging]}

    test.batch.names[staging-rule][relevant]=\
        modules-integration-mysql57,\
        modules-unit

    #
    # Workspaces Rule
    #

    modified.files.includes[workspaces-rule][relevant]=workspaces/**

    test.batch.names[workspaces-rule][relevant]=workspaces-compile

##
## Selenium
##

    #selenium.desired.capabilities.platform=
    #selenium.remote.driver.url=http://localhost:4444

##
## Solr
##

    solr.dir=${app.server.parent.dir}/solr-${solr.version}
    solr.version=8.11.1
    solr.zip.name=solr-${solr.version}.zip
    solr.zip.url=http://archive.apache.org/dist/lucene/solr/${solr.version}/${solr.zip.name}

##
## SQL
##

    sql.legacy.base.url[ce]=http://releases.liferay.com/portal
    sql.legacy.base.url[ee]=http://files.liferay.com/private/ee/portal

    sql.legacy.zip[6.0.6]=liferay-portal-sql-6.0.6-20110225.zip
    sql.legacy.zip[6.0.11]=liferay-portal-sql-6.0-ee-sp1.zip
    sql.legacy.zip[6.0.12]=liferay-portal-sql-6.0-ee-sp2-20110727.zip
    sql.legacy.zip[6.1.2]=liferay-portal-sql-6.1.2-ce-ga3-20130816114619181.zip
    sql.legacy.zip[6.1.10]=liferay-portal-sql-6.1.10-ee-ga1-20120223174854827.zip
    sql.legacy.zip[6.1.20]=liferay-portal-sql-6.1.20-ee-ga2-20120731110418084.zip
    sql.legacy.zip[6.1.30]=liferay-portal-sql-6.1.30-ee-ga3-20130812170130063.zip
    sql.legacy.zip[6.2.3]=liferay-portal-sql-6.2-ce-ga4-20150416163831865.zip
    sql.legacy.zip[6.2.5]=liferay-portal-sql-6.2-ce-ga6-20160112152609836.zip
    sql.legacy.zip[6.2.10.1]=liferay-portal-sql-6.2.10.1-ee-ga1-20131126141110470.zip
    sql.legacy.zip[6.2.10.2]=liferay-portal-sql-6.2-ee-sp1-20140204095606875.zip
    sql.legacy.zip[6.2.10.3]=liferay-portal-sql-6.2-ee-sp2-20140311095330499.zip
    sql.legacy.zip[6.2.10.4]=liferay-portal-sql-6.2-ee-sp3-20140407093552703.zip
    sql.legacy.zip[6.2.10.5]=liferay-portal-sql-6.2-ee-sp4-20140509104816263.zip
    sql.legacy.zip[6.2.10.6]=liferay-portal-sql-6.2-ee-sp5-20140606104845789.zip
    sql.legacy.zip[6.2.10.7]=liferay-portal-sql-6.2-ee-sp6-20140703103932543.zip
    sql.legacy.zip[6.2.10.8]=liferay-portal-sql-6.2-ee-sp7-20140807114015311.zip
    sql.legacy.zip[6.2.10.9]=liferay-portal-sql-6.2-ee-sp8-20140904111637931.zip
    sql.legacy.zip[6.2.10.15]=liferay-portal-sql-6.2-ee-sp14-20151105114451508.zip
    sql.legacy.zip[6.2.10.21]=liferay-portal-sql-6.2-ee-sp20-20170717160924965.zip
    sql.legacy.zip[7.0.4]=liferay-ce-portal-sql-7.0-ga5-20171018150113838.zip
    sql.legacy.zip[7.0.6]=liferay-ce-portal-sql-7.0-ga7-20180507111753223.zip
    sql.legacy.zip[7.0.10.6]=liferay-dxp-digital-enterprise-sql-7.0-sp6-20171010144253003.zip
    sql.legacy.zip[7.0.10.14]=liferay-dxp-sql-7.0.10.14-sp14-202007141410.zip
    sql.legacy.zip[7.0.10.15]=liferay-dxp-sql-7.0.10.15-sp15-202010271031.zip
    sql.legacy.zip[7.0.10.16]=liferay-dxp-digital-enterprise-sql-7.0.10.16-sp16-202104271222.zip
    sql.legacy.zip[7.1.3]=liferay-ce-portal-sql-7.1.3-ga4-20190508171117552.zip
    sql.legacy.zip[7.1.10]=liferay-dxp-sql-7.1.10-ga1-20180703090613030.zip
    sql.legacy.zip[7.1.10.2]=liferay-dxp-sql-7.1.10.2-sp2-20190422172027516.zip
    sql.legacy.zip[7.1.10.3]=liferay-dxp-sql-7.1.10.3-sp3-202001061544.zip
    sql.legacy.zip[7.1.10.5]=liferay-dxp-sql-7.1.10.5-sp5-202012012124.zip
    sql.legacy.zip[7.2.0]=liferay-ce-portal-sql-7.2.0-ga1-20190531153709761.zip
    sql.legacy.zip[7.2.1]=liferay-ce-portal-sql-7.2.1-ga2-20191111141448326.zip
    sql.legacy.zip[7.2.10]=liferay-dxp-sql-7.2.10-ga1-20190531140450482.zip
    sql.legacy.zip[7.2.10.1]=liferay-dxp-sql-7.2.10.1-sp1-20191007154602574.zip
    sql.legacy.zip[7.2.10.4]=liferay-dxp-sql-7.2.10.4-sp4-202103021431.zip
    sql.legacy.zip[7.2.10.7]=liferay-dxp-sql-7.2.10.7-sp7-202206291913.zip
    sql.legacy.zip[7.3.0]=liferay-ce-portal-sql-7.3.0-ga1-20200127150653953.zip
    sql.legacy.zip[7.3.5]=liferay-ce-portal-sql-7.3.5-ga6-20200930172312275.zip
    sql.legacy.zip[7.3.10]=liferay-dxp-sql-7.3.10-ga1-20200930160533946.zip
    sql.legacy.zip[7.3.10.1]=liferay-dxp-sql-7.3.10.1-sp1-202103111649.zip
    sql.legacy.zip[7.4.0]=liferay-ce-portal-sql-7.4.0-ga1-20210419204607406.zip
    sql.legacy.zip[7.4.1]=liferay-ce-portal-sql-7.4.1-ga2-20210609223456272.zip
    sql.legacy.zip[7.4.3.21]=liferay-ce-portal-sql-7.4.3.21-ga21-20220418102345052.zip
    sql.legacy.zip[7.4.12]=liferay-dxp-sql-7.4.12-ep3-20210728022041024.zip
    sql.legacy.zip[7.4.13]=liferay-dxp-sql-7.4.13-ga1-20211020105546063.zip
    sql.legacy.zip[7.4.13.u33]=liferay-dxp-sql-7.4.13.u33-20220711205130472.zip
    sql.legacy.zip[7.4.13.u43]=liferay-dxp-sql-7.4.13.u43-20220921115534577.zip
    sql.legacy.zip[7.4.13.u63]=liferay-dxp-sql-7.4.13.u63-20230208103916977.zip
    sql.legacy.zip[7.4.13.u73]=liferay-dxp-sql-7.4.13.u73-20230419073742119.zip

##
## SSH
##

    #ssh.host=
    #ssh.password=
    #ssh.username=

##
## Test Batch
##

    #
    # Default
    #

    test.batch.app.server.tomcat.setenv.gc.new=-verbose:gc -Xloggc:/tmp/tomcat-gc.log -Xms1024m -Xmx4096m -XX:MaxNewSize=32m -XX:MaxMetaspaceSize=1024m -XX:MaxTenuringThreshold=0 -XX:NewSize=32m -XX:ParallelGCThreads=2 -XX:MetaspaceSize=256m -XX:+PrintGCCause -XX:+PrintGCDetails -XX:SurvivorRatio=65536 -XX:TargetSurvivorRatio=0 -XX:+UseParNewGC
    test.batch.app.server.tomcat.setenv.gc.new[11]=-Xlog:gc:/tmp/tomcat-gc.log -Xms1024m -Xmx4096m -XX:MaxNewSize=32m -XX:MaxMetaspaceSize=1024m -XX:MaxTenuringThreshold=0 -XX:NewSize=32m -XX:ParallelGCThreads=2 -XX:MetaspaceSize=256m -XX:SurvivorRatio=2048 -XX:TargetSurvivorRatio=0
    test.batch.app.server.tomcat.setenv.gc.new[17]=-Xlog:gc:/tmp/tomcat-gc.log -Xms1024m -Xmx4096m -XX:MaxNewSize=32m -XX:MaxMetaspaceSize=1024m -XX:MaxTenuringThreshold=0 -XX:NewSize=32m -XX:ParallelGCThreads=2 -XX:MetaspaceSize=256m -XX:SurvivorRatio=2048 -XX:TargetSurvivorRatio=0
    test.batch.app.server.tomcat.setenv.gc.new[21]=-Xlog:gc:/tmp/tomcat-gc.log -Xms1024m -Xmx4096m -XX:MaxNewSize=32m -XX:MaxMetaspaceSize=1024m -XX:MaxTenuringThreshold=0 -XX:NewSize=32m -XX:ParallelGCThreads=2 -XX:MetaspaceSize=256m -XX:SurvivorRatio=2048 -XX:TargetSurvivorRatio=0
    test.batch.app.server.tomcat.setenv.gc.old=-Xms2560m -Xmx2560m -XX:MaxNewSize=1536m -XX:MaxMetaspaceSize=768m -XX:MetaspaceSize=768m -XX:NewSize=1536m -XX:SurvivorRatio=7
    test.batch.app.server.tomcat.setenv.heap.dump.path=/tmp/tomcat-oom-heap-dump.bin

    test.batch.aspectj.enabled=false

    test.batch.axis.count[modules-integration-analytics-cloud]=1
    test.batch.axis.count[playwright-compile]=1
    test.batch.axis.count[playwright-js-tomcat90-mysql57]=1
    test.batch.axis.count[tck]=1
    test.batch.axis.max.size[functional-*]=7
    test.batch.axis.max.size[functional-*][analytics-cloud*]=5
    test.batch.axis.max.size[js-unit]=100
    test.batch.axis.max.size[modules-compile]=35
    test.batch.axis.max.size[modules-integration-project-templates]=10
    test.batch.axis.max.size[modules-integration-project-templates-jdk17_open]=5
    test.batch.axis.max.size[modules-integration-project-templates-jdk21_zulu]=5
    test.batch.axis.max.size[modules-integration-*]=20
    test.batch.axis.max.size[modules-semantic-versioning]=30
    test.batch.axis.max.size[modules-unit*]=100
    test.batch.axis.max.size[modules-unit-project-templates]=25
    test.batch.axis.max.size[modules-unit-project-templates-jdk17_open]=15
    test.batch.axis.max.size[modules-unit-project-templates-jdk21_zulu]=15
    test.batch.axis.max.size[semantic-versioning]=50
    test.batch.axis.max.size[tck]=50
    test.batch.axis.max.size[unit*]=5000

    test.batch.class.names.excludes=\
        ${test.batch.class.names.excludes.permanent},\
        ${test.batch.class.names.excludes.temporary}

    test.batch.class.names.excludes[junit-test-csv-report]=${test.batch.class.names.excludes}

    test.batch.class.names.excludes[modules-unit]=\
        ${test.batch.class.names.excludes},\
        **/etl/**/src/test/**/*Test.java,\
        **/project-templates/**/src/test/**/*Test.java

    test.batch.class.names.excludes[modules-unit-jdk*]=\
        ${test.batch.class.names.excludes},\
        **/etl/**/src/test/**/*Test.java,\
        **/project-templates/**/src/test/**/*Test.java

    test.batch.class.names.excludes[tck]=**/com/sun/ts/tests/**/PortletSessionSecondapp/*.war

    test.batch.class.names.excludes.permanent=\
        modules/apps/static/portal-bundle-blacklist/portal-bundle-blacklist-test/src/test/java/com/liferay/portal/bundle/blacklist/BundleBlacklistSetUpBatchTest.java,\
        modules/apps/static/portal-bundle-blacklist/portal-bundle-blacklist-test/src/testIntegration/java/com/liferay/portal/bundle/blacklist/test/BundleBlacklistVerifyReinstalledTest.java,\
        modules/apps/static/portal-bundle-blacklist/portal-bundle-blacklist-test/src/testIntegration/java/com/liferay/portal/bundle/blacklist/test/BundleBlacklistVerifyUninstalledTest.java,\
        modules/apps/static/portal-lpkg-deployer/**,\
        modules/test/external-data-source-test/**,\
        modules/test/semantic-versioning-test/**,\
        modules/util/portal-tools-benchmarks/**,\
        portal-kernel/test/unit/com/liferay/portal/log/assertor/PortalLogAssertorTest.java,\
        portal-kernel/test/unit/com/liferay/portal/modules/ModulesStructureTest.java

    test.batch.class.names.excludes.subrepo=**

    test.batch.class.names.excludes.temporary=\
        modules/apps/archived/**,\
        modules/apps/change-tracking/change-tracking-test/src/testIntegration/java/com/liferay/change/tracking/internal/db/test/OracleDBCTTest.java,\
        modules/test/poshi/poshi-runner/src/test/java/com/liferay/poshi/runner/var/**

    test.batch.class.names.filter[integration-*]=**/test/integration/**/*Test.java
    test.batch.class.names.filter[modules-integration-analytics-cloud]=**/testIntegration/**/*Test.java
    test.batch.class.names.filter[modules-integration-project-templates]=${test.batch.class.names.filter[modules-unit*]}
    test.batch.class.names.filter[modules-integration-project-templates-jdk17_open]=${test.batch.class.names.filter[modules-unit*]}
    test.batch.class.names.filter[modules-integration-project-templates-jdk21_zulu]=${test.batch.class.names.filter[modules-unit*]}
    test.batch.class.names.filter[modules-integration-*]=**/src/testIntegration/**/*Test.java
    test.batch.class.names.filter[modules-unit*]=**/src/test/**/*Test.java
    test.batch.class.names.filter[modules-unit-project-templates]=${test.batch.class.names.filter[modules-unit*]}
    test.batch.class.names.filter[modules-unit-project-templates-jdk17_open]=${test.batch.class.names.filter[modules-unit*]}
    test.batch.class.names.filter[modules-unit-project-templates-jdk21_zulu]=${test.batch.class.names.filter[modules-unit*]}
    test.batch.class.names.filter[unit*]=**/test/unit/**/*Test.java

    test.batch.class.names.includes=\
        **/src/test/**/*Test.java,\
        **/src/testIntegration/**/*Test.java,\
        **/test/unit/**/*Test.java

    test.batch.class.names.includes[junit-test-csv-report]=${test.batch.class.names.includes}
    test.batch.class.names.includes[modules-integration-project-templates]=**/project-templates/**/src/test/**/*Test.java
    test.batch.class.names.includes[modules-integration-project-templates-jdk17_open]=**/project-templates/**/src/test/**/*Test.java
    test.batch.class.names.includes[modules-integration-project-templates-jdk21_zulu]=**/project-templates/**/src/test/**/*Test.java
    test.batch.class.names.includes[modules-integration-*]=**/src/testIntegration/**/*Test.java

    test.batch.class.names.includes[modules-integration-*-jdk11_open]=**/src/testIntegration/**/*Test.java

    test.batch.class.names.includes[modules-integration-*_stable]=\
        **/module-configuration-localization-test/**/ModuleConfigurationLocalizationTest.java,\
        **/portal-dao-test/**/*Test.java,\
        **/portlet-title-localization-test/**/*Test.java,\
        **/site-initializer-extender-test/**/*Test.java

    test.batch.class.names.includes[modules-unit-jdk*]=**/src/test/**/*Test.java

    test.batch.class.names.includes[modules-unit-project-templates]=**/project-templates/**/src/test/**/*Test.java
    test.batch.class.names.includes[modules-unit-project-templates-jdk17_open]=**/project-templates/**/src/test/**/*Test.java
    test.batch.class.names.includes[modules-unit-project-templates-jdk21_zulu]=**/project-templates/**/src/test/**/*Test.java

    test.batch.class.names.includes[modules-unit_stable]=\
        **/portal-log4j/**/Log4jConfigUtilTest.java,\
        **/portal-tools-sample-sql-builder/**/SampleSQLBuilderTest.java,\
        **/portal-upgrade-impl/**/*Test.java

    test.batch.class.names.includes[tck]=deploy/target/deploy-files/tck-*.war

    test.batch.class.names.includes[unit]=**/test/unit/**/*Test.java

    test.batch.class.names.includes[unit-jdk*]=**/test/unit/**/*Test.java

    test.batch.class.names.includes[unit_stable]=\
        **/test/**/ConfigurationEnvBuilderTest.java,\
        **/test/**/DBInspectorUnitTest.java,\
        **/test/**/LibraryReferenceTest.java

    test.batch.class.names.includes.modules[integration-*]=\
        **/test/integration/**/*Test.java,\
        test/integration/**/*Test.java

    test.batch.class.names.includes.modules[modules-integration-*]=\
        **/src/testIntegration/**/*Test.java,\
        src/testIntegration/**/*Test.java

    test.batch.class.names.includes.modules[modules-unit*]=\
        **/src/test/**/*Test.java,\
        src/test/**/*Test.java

    test.batch.class.names.includes.modules[unit*]=\
        **/test/unit/**/*Test.java,\
        test/unit/**/*Test.java

    test.batch.class.names.includes.required[modules-integration-*-jdk11_open]=\
        **/src/testIntegration/**/DeclarativeServiceDependencyManagerTest.java,\
        **/src/testIntegration/**/SpringExtenderDependencyManagerTest.java

    test.batch.code.coverage=false

    test.batch.default.test.duration[functional-*]=150000
    test.batch.default.test.duration[modules-integration-*]=150000
    test.batch.default.test.duration[modules-unit]=150000

    test.batch.default.test.overhead.duration[functional-*]=1200000
    test.batch.default.test.overhead.duration[modules-integration-*]=1200000
    test.batch.default.test.overhead.duration[modules-unit]=1200000

    test.batch.default.test.task.duration[modules-integration-*]=150000
    test.batch.default.test.task.duration[modules-unit]=150000

    #
    # Remove 'test.batch.deprecated.module.groups' when possible. See LPS-82317
    # for more details.
    #

    test.batch.deprecated.module.groups=modules/apps/bookmarks

    test.batch.dist.app.servers=\
        jboss,\
        tomcat,\
        weblogic,\
        wildfly

    test.batch.dist.source.excludes=\
        modules/**/tmp/**/*.class

    test.batch.dist.source.includes=\
        **/*.class,\
        **/*.profile-dxp.properties,\
        modules/core/portal-bootstrap/build/system.packages.extra.mf,\
        modules/core/portal-bootstrap/lib/biz.aQute.bnd.annotation.jar,\
        plugins/marketplace/*,\
        sql/**/*.sql,\
        sql/lportal.properties,\
        sql/lportal.script,\
        tmp/**/*.jar,\
        tools/sdk/.ivy/ivy-*.jar,\
        tools/sdk/dist/com.liferay.blogs.api-*.jar,\
        tools/sdk/dist/com.liferay.blogs.service-*.jar,\
        tools/sdk/dist/com.liferay.friendly.url.api-*.jar,\
        tools/sdk/dist/com.liferay.friendly.url.service-*.jar,\
        tools/sdk/dist/com.liferay.journal.api-*.jar,\
        tools/sdk/dist/com.liferay.journal.service-*.jar,\
        tools/sdk/dist/com.liferay.portal.dao.db-*.jar,\
        tools/sdk/dist/com.liferay.subscription.api-*.jar,\
        tools/sdk/dist/com.liferay.subscription.service-*.jar,\
        tools/sdk/dist/com.liferay.wiki.api-*.jar,\
        tools/sdk/dist/com.liferay.wiki.service-*.jar

    test.batch.downstream.enabled[test-plugins-acceptance-pullrequest(*)]=true
    test.batch.downstream.enabled[test-plugins-extraapps]=true
    test.batch.downstream.enabled[test-plugins-marketplaceapp]=true
    test.batch.downstream.enabled[test-plugins-release]=true
    test.batch.downstream.enabled[test-plugins-upstream]=true
    test.batch.downstream.enabled[test-portal-acceptance-pullrequest(*)]=true
    test.batch.downstream.enabled[test-portal-acceptance-upstream(*)]=true
    test.batch.downstream.enabled[test-portal-acceptance-upstream-dxp(*)]=true
    test.batch.downstream.enabled[test-portal-app-release]=true
    test.batch.downstream.enabled[test-portal-fixpack-release]=true
    test.batch.downstream.enabled[test-portal-hotfix-release]=true
    test.batch.downstream.enabled[test-portal-release]=true
    test.batch.downstream.enabled[test-portal-testsuite-upstream(*)]=true
    test.batch.downstream.enabled[test-portal-upstream]=true
    test.batch.downstream.enabled[test-subrepository-acceptance-pullrequest]=true
    test.batch.downstream.enabled[test-subrepository-acceptance-pullrequest(*)]=true

    #test.batch.max.group.size=

    test.batch.max.subgroup.size=5

    test.batch.minimum.slave.ram[modules-integration*]=24
    test.batch.minimum.slave.ram[playwright-js-tomcat90-mysql57][analytics-cloud]=24
    test.batch.minimum.slave.ram[portal-license-smoke-mysql57]=24
    test.batch.minimum.slave.ram[*redhat9*]=24
    test.batch.minimum.slave.ram[*rockylinux*]=24
    test.batch.minimum.slave.ram[*semantic-versioning*]=24

    test.batch.names=${test.batch.names[stable]}

    test.batch.names[subrepository-validation]=\
        central-requirements,\
        subrepository-compile,\
        subrepository-semantic-versioning,\
        \\\
        subrepository-source-format,\
        subrepository-unit

    test.batch.names.standalone=\
        central-requirements,\
        javadoc-test,\
        js-unit,\
        modules-semantic-versioning,\
        portal-frontend-js-lint,\
        poshi-validation,\
        rest-builder,\
        ruby-sass-compiler,\
        semantic-versioning,\
        service-builder,\
        workspaces-compile,\
        workspaces-compile-jdk11

    test.batch.osb.asah.github.url=https://github.com/liferay/com-liferay-osb-asah-private/tree/7.0.x

    test.batch.run.property.query[functional-alpine38-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ alpine)

    test.batch.run.property.query[functional-alpine38-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ alpine)

    test.batch.run.property.query[functional-alpine310-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ alpine)

    test.batch.run.property.query[functional-alpine310-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ alpine)

    test.batch.run.property.query[functional-amazonlinux2-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ amazonlinux)

    test.batch.run.property.query[functional-amazonlinux2-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ amazonlinux)

    test.batch.run.property.query[functional-amazonlinux2022-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ amazonlinux)

    test.batch.run.property.query[functional-amazonlinux2022-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ amazonlinux)

    test.batch.run.property.query[functional-centos6-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (\
            (operating.system.types == null) OR \
            (operating.system.types ~ centos)\
        )

    test.batch.run.property.query[functional-centos6-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (\
            (operating.system.types == null) OR \
            (operating.system.types ~ centos)\
        )

    test.batch.run.property.query[functional-centos8-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (\
            (operating.system.types == null) OR \
            (operating.system.types ~ centos)\
        )

    test.batch.run.property.query[functional-centos8-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (\
            (operating.system.types == null) OR \
            (operating.system.types ~ centos)\
        )

    test.batch.run.property.query[functional-debian7-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ debian)

    test.batch.run.property.query[functional-debian7-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ debian)

    test.batch.run.property.query[functional-debian8-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ debian)

    test.batch.run.property.query[functional-debian8-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ debian)

    test.batch.run.property.query[functional-debian9-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ debian)

    test.batch.run.property.query[functional-debian9-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ debian)

    test.batch.run.property.query[functional-debian11-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ debian)

    test.batch.run.property.query[functional-debian11-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ debian)

    test.batch.run.property.query[functional-debian12-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ debian)

    test.batch.run.property.query[functional-fedora35-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ fedora)

    test.batch.run.property.query[functional-fedora35-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ fedora)

    test.batch.run.property.query[functional-jboss*-mysql*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        )

    test.batch.run.property.query[functional-jboss*-postgresql*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        )

    test.batch.run.property.query[functional-orcllinux6-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ orcllinux)

    test.batch.run.property.query[functional-orcllinux6-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ orcllinux)

    test.batch.run.property.query[functional-orcllinux7-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ orcllinux)

    test.batch.run.property.query[functional-orcllinux7-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ orcllinux)

    test.batch.run.property.query[functional-orcllinux8-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ orcllinux)

    test.batch.run.property.query[functional-orcllinux8-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ orcllinux)

    test.batch.run.property.query[functional-orcllinux9-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ orcllinux)

    test.batch.run.property.query[functional-orcllinux9-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ orcllinux)

    test.batch.run.property.query[functional-redhat8-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ redhat)

    test.batch.run.property.query[functional-redhat8-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ redhat)

    test.batch.run.property.query[functional-redhat9-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ redhat)

    test.batch.run.property.query[functional-redhat9-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ redhat)

    test.batch.run.property.query[functional-rockylinux91-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ rockylinux)

    test.batch.run.property.query[functional-rockylinux91-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ rockylinux)

    test.batch.run.property.query[functional-smoke-jboss-mysql57]=\
        (app.server.types ~ jboss) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-jboss-mysql57-jdk21_zulu]=\
        (app.server.types ~ jboss) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-jboss-postgresql155]=\
        (app.server.types ~ jboss) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-jboss74-mysql57]=\
        (app.server.types ~ jboss) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-jboss74-mysql57-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-jboss74-mysql57-jdk21_zulu]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-jboss74-postgresql155]=\
        ${test.batch.run.property.query[functional-smoke-jboss-postgresql155]}

    test.batch.run.property.query[functional-smoke-tomcat-db2111*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-db2115*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-hypersonic20*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ hypersonic)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-mariadb102*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-oracle193*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-postgresql134*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-postgresql144*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-postgresql153*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-postgresql155*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-postgresql155-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-postgresql155-jdk21_zulu]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-postgresql163*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-db2111]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ db2) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-db2111-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2111)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-db2115]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ db2) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-db2115-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2111)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-hypersonic20]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ hypersonic) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mariadb102]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mariadb102-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mariadb104]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mariadb106]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-chrome100]=\
        ${test.batch.run.property.query[functional-smoke-tomcat90-mysql57]}

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk11_oracle]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk11_zulu]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57_stable]=\
        ${test.batch.run.property.query[functional-smoke-tomcat90-mysql57]}

    test.batch.run.property.query[functional-smoke-tomcat90-mysql80]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql80-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-oracle193]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ oracle) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-oracle193-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql121]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql121-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql134]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql134-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql144]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql144-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql153]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql153-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql155-chrome100]=\
        ${test.batch.run.property.query[functional-smoke-tomcat90-postgresql155]}

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql155-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql155-jdk11_oracle]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql155-jdk11_zulu]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql155_stable]=\
        ${test.batch.run.property.query[functional-smoke-tomcat90-postgresql155]}

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql163]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql163-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sqlserver2017]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sqlserver2017-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sqlserver2019]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sqlserver2019-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sqlserver2022]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sqlserver2022-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-weblogic141-mysql57]=\
        (app.server.types ~ weblogic) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-weblogic141-mysql57-jdk21_zulu]=\
        (app.server.types ~ weblogic) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-weblogic141-postgresql155]=\
        (app.server.types ~ weblogic) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-weblogic141-postgresql155-jdk21_zulu]=\
        (app.server.types ~ weblogic) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly-mysql57*]=\
        (app.server.types ~ wildfly) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly-postgresql155]=\
        (app.server.types ~ wildfly) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly261-mariadb104]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly261-mariadb104-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ wildfly)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly261-mariadb106]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly261-mariadb106-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ wildfly)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly261-mariadb106-jdk21_zulu]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ wildfly)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly261-mysql57]=\
        (app.server.types ~ wildfly) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly261-mysql57-jdk21_zulu]=\
        (app.server.types ~ wildfly) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly261-postgresql155-jdk21_zulu]=\
        (app.server.types ~ wildfly) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-suse15-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ suse)

    test.batch.run.property.query[functional-suse15-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ suse)

    #test.batch.run.property.query[functional-tomcat-mysql57]=(portal.smoke == true) AND (app.server.types == null OR app.server.types ~ tomcat) AND (database.types == null OR database.types ~ mysql)

    test.batch.run.property.query[functional-tomcat90-db2111]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ db2) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-db2111-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ db2) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-db2115]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ db2) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-db2115-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ db2) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-hypersonic20]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ hypersonic) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-hypersonic20-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ hypersonic) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mariadb102]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mariadb102-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mariadb104]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mariadb104-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mariadb106]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mariadb106-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57-chrome100]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57]}

    test.batch.run.property.query[functional-tomcat90-mysql57-chrome100_stable]=\
        (portal.stable == "true")

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_oracle]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_zulu]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk21_zulu]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57_stable]=\
        (portal.stable == "true")

    test.batch.run.property.query[functional-tomcat90-mysql80]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql80-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-oracle193]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ oracle) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-oracle193-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ oracle) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql121]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql121-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql134]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql134-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql144]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql144-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql153]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql153-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql155-chrome100]=\
        ${test.batch.run.property.query[functional-tomcat90-postgresql155]}

    test.batch.run.property.query[functional-tomcat90-postgresql155-chrome100_stable]=\
        (portal.stable == "true")

    test.batch.run.property.query[functional-tomcat90-postgresql155-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql155-jdk11_oracle]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql155-jdk11_zulu]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql155-jdk21_zulu]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql155_stable]=\
        (portal.stable == "true")

    test.batch.run.property.query[functional-tomcat90-postgresql163]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql163-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sqlserver2017]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sqlserver2017-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sqlserver2019]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sqlserver2019-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sqlserver2022]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sqlserver2022-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-ubuntu14-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ ubuntu)

    test.batch.run.property.query[functional-ubuntu16-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ ubuntu)

    test.batch.run.property.query[functional-ubuntu18-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ ubuntu)

    test.batch.run.property.query[functional-ubuntu20-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ ubuntu)

    test.batch.run.property.query[functional-ubuntu22-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true) AND \
        (operating.system.types ~ ubuntu)

    test.batch.run.property.query[functional-upgrade-jboss74-mysql57]=\
        (app.server.types ~ jboss) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-jboss74-mysql57-jdk11_open]=\
        (app.server.types ~ jboss) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-db2]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ db2) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ db2) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-db2115]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ db2) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-db2115-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb104]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb104-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb106]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb106-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk21_zulu]=\
        (app.server.types ~ tomcat) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57_stable]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (custom.properties != "upgrade.database.auto.run=true") AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke.upgrades == true) AND \
        (\
            (portal.version == "7.3.10") OR \
            (portal.version == "7.4.13")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ oracle) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ oracle) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql121]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql121-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql134]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql134-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql144]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql144-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql153]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql153-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql155]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql155-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql155-jdk21_zulu]=\
        (app.server.types ~ tomcat) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql155_stable]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (custom.properties != "upgrade.database.auto.run=true") AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke.upgrades == true) AND \
        (\
            (portal.version == "7.3.10") OR \
            (portal.version == "7.4.13")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql163]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql163-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2019]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2019-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2022]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2022-jdk11_open]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (database.types ~ sqlserver) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-weblogic141-mysql57]=\
        (app.server.types ~ weblogic) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-weblogic141-postgresql155]=\
        (app.server.types ~ weblogic) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-wildfly261-mariadb104]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-wildfly261-mariadb104-jdk11_open]=\
        (app.server.types ~ wildfly) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-wildfly261-mariadb106]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-upgrade-wildfly261-mariadb106-jdk11_open]=\
        (app.server.types ~ wildfly) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.smoke.upgrades == true)

    test.batch.run.property.query[functional-weblogic*-mysql*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ weblogic)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        )

    test.batch.run.property.query[functional-weblogic*-postgresql*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ weblogic)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        )

    test.batch.run.property.query[functional-wildfly*-mariadb*]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ wildfly)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        )

    #test.batch.run.type=sequential
    test.batch.run.type=single

    test.batch.segment.enabled[test-plugins-extraapps]=true
    test.batch.segment.enabled[test-plugins-marketplaceapp]=true
    test.batch.segment.enabled[test-portal-acceptance-pullrequest(*]=true
    test.batch.segment.enabled[test-portal-acceptance-upstream(*]=true
    test.batch.segment.enabled[test-portal-acceptance-upstream-dxp(*]=true
    test.batch.segment.enabled[test-portal-app-release]=true
    test.batch.segment.enabled[test-portal-fixpack-release]=true
    test.batch.segment.enabled[test-portal-hotfix-release]=true
    test.batch.segment.enabled[test-portal-release]=true
    test.batch.segment.enabled[test-portal-testsuite-upstream(*]=true
    test.batch.segment.enabled[test-portal-upstream]=true
    test.batch.segment.enabled[test-subrepository-acceptance-pullrequest]=true
    test.batch.segment.enabled[test-subrepository-acceptance-pullrequest(*]=true

    test.batch.size[archived-module-smoke-mysql57]=1
    test.batch.size[archived-modules-test-mysql57]=1
    test.batch.size[blade-samples]=1
    test.batch.size[build-iw]=1
    test.batch.size[build-lib-versions]=1
    test.batch.size[bundle-blacklist-restart-mysql57]=1
    test.batch.size[central-requirements]=1
    test.batch.size[compile-jsp]=1
    test.batch.size[empty-osgi-core-dir-mysql57]=1
    test.batch.size[empty-osgi-core-dir-mysql57-jdk21_zulu]=1
    test.batch.size[format-javadoc-test]=1
    test.batch.size[gogo-shell-client-mysql57]=1
    test.batch.size[gradle-plugins-test]=1
    test.batch.size[javadoc-test]=1
    test.batch.size[js-unit]=1
    test.batch.size[jsp-runtime-compile-mysql57]=1
    test.batch.size[lpkg-container-mysql57]=1
    test.batch.size[lpkg-controller-mysql57]=1
    test.batch.size[lpkg-override-mysql57]=1
    test.batch.size[lpkg-persistence-mysql57]=1
    test.batch.size[lpkg-startup-mysql57]=1
    test.batch.size[modules-compile]=2
    test.batch.size[modules-integration-aws-s3-mysql57]=20
    test.batch.size[modules-integration-db-partition-mysql57]=20
    test.batch.size[modules-integration-db-partition-postgresql153]=20
    test.batch.size[modules-integration-db-partition-postgresql163]=20
    test.batch.size[modules-integration-db2111]=20
    test.batch.size[modules-integration-db2115]=20
    test.batch.size[modules-integration-hypersonic20]=20
    test.batch.size[modules-integration-mariadb102]=20
    test.batch.size[modules-integration-mariadb104]=20
    test.batch.size[modules-integration-mariadb106]=20
    test.batch.size[modules-integration-mysql57]=20
    test.batch.size[modules-integration-mysql80]=20
    test.batch.size[modules-integration-oracle193]=20
    test.batch.size[modules-integration-postgresql121]=20
    test.batch.size[modules-integration-postgresql134]=20
    test.batch.size[modules-integration-postgresql144]=20
    test.batch.size[modules-integration-postgresql153]=20
    test.batch.size[modules-integration-postgresql163]=20
    test.batch.size[modules-unit]=3
    test.batch.size[modules-unit-jdk21_zulu]=3
    test.batch.size[patching-tool-custom-scripts]=1
    test.batch.size[patching-tool-mysql57]=1
    test.batch.size[portal-frontend-js-lint]=1
    test.batch.size[portal-license-smoke-mysql57]=1
    test.batch.size[portal-renamed-tomcat-in-path-mysql57]=1
    test.batch.size[portal-renamed-tomcat-in-path-mysql57-jdk21_zulu]=1
    test.batch.size[portal-second-startup-space-in-path-mysql57]=1
    test.batch.size[portal-startup-space-in-path-mysql57]=1
    test.batch.size[portal-startup-space-in-path-mysql57-jdk21_zulu]=1
    test.batch.size[poshi-validation]=1
    test.batch.size[release-osgi-state-exploded-test-mysql57]=1
    test.batch.size[release-osgi-state-lpkg-change-directory-test-mysql57]=1
    test.batch.size[release-osgi-state-lpkg-test-mysql57]=1
    test.batch.size[rest-builder]=1
    test.batch.size[ruby-sass-compiler]=1
    test.batch.size[semantic-versioning]=1
    test.batch.size[service-builder]=1
    test.batch.size[source-format]=1
    test.batch.size[source-format-current-branch]=1
    test.batch.size[tck]=1
    test.batch.size[unit]=1
    test.batch.size[unit-jdk21_zulu]=1
    test.batch.size[workspaces-compile]=1
    test.batch.size[workspaces-compile-jdk11]=1

    test.batch.slave.label[playwright-js-tomcat90-mysql57][analytics-cloud]=slave-1

    test.batch.target.axis.duration[functional-*]=2400000
    test.batch.target.axis.duration[modules-integration-*]=2400000
    test.batch.target.axis.duration[modules-unit]=2400000
    test.batch.target.axis.duration[playwright-*]=1800000

    test.hotfix.changes[test-portal-hotfix-release]=true

    #
    # Acceptance
    #

    playwright.projects.excludes[playwright-js-tomcat90-mysql57][acceptance]=\
        headless-builder-impl,\
        headless-builder-web

    test.batch.class.names.excludes[acceptance]=\
        **/batch-planner/**/*Test.java,\
        **/headless-builder/**/*Test.java

    test.batch.dist.app.servers[acceptance]=${test.batch.dist.app.servers}
    test.batch.names[acceptance]=${test.batch.names}

    #
    # Acceptance (CE)
    #

    playwright.projects.excludes[playwright-js-tomcat90-mysql57][acceptance-ce]=\
        headless-builder-impl,\
        headless-builder-web

    test.batch.class.names.excludes[acceptance-ce]=\
        **/batch-planner/**/*Test.java,\
        **/headless-builder/**/*Test.java

    test.batch.dist.app.servers[acceptance-ce]=${test.batch.dist.app.servers}

    test.batch.names[acceptance-ce]=\
        archived-module-smoke-mysql57,\
        archived-modules-test-mysql57,\
        build-lib-versions,\
        bundle-blacklist-restart-mysql57,\
        compile-jsp,\
        empty-osgi-core-dir-mysql57,\
        #format-javadoc-test,\
        #functional-tomcat-mysql57,\
        functional-smoke-jboss74-mysql57,\
        functional-smoke-tomcat90-mariadb102,\
        functional-smoke-tomcat90-mysql57,\
        functional-smoke-tomcat90-mysql57-jdk11_open,\
        functional-smoke-tomcat90-mysql80,\
        functional-smoke-tomcat90-postgresql121,\
        functional-smoke-tomcat90-postgresql134,\
        functional-smoke-tomcat90-postgresql144,\
        functional-smoke-tomcat90-postgresql153,\
        functional-smoke-tomcat90-postgresql163,\
        functional-smoke-weblogic141-mysql57,\
        functional-smoke-wildfly261-mariadb104,\
        functional-smoke-wildfly261-mariadb106,\
        functional-tomcat90-hypersonic20,\
        functional-tomcat90-mariadb102,\
        functional-tomcat90-mariadb104,\
        functional-tomcat90-mariadb106,\
        functional-tomcat90-mysql57-chrome100,\
        functional-tomcat90-postgresql134,\
        functional-tomcat90-postgresql144,\
        functional-tomcat90-postgresql153,\
        functional-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-mysql57,\
        gogo-shell-client-mysql57,\
        javadoc-test,\
        js-unit,\
        jsp-runtime-compile-mysql57,\
        lpkg-container-mysql57,\
        lpkg-controller-mysql57,\
        lpkg-override-mysql57,\
        lpkg-persistence-mysql57,\
        lpkg-startup-mysql57,\
        modules-functional,\
        modules-integration-mysql57,\
        modules-integration-project-templates,\
        modules-semantic-versioning,\
        modules-unit,\
        modules-unit-project-templates,\
        patching-tool-mysql57,\
        playwright-js-tomcat90-mysql57,\
        #portal-frontend-js-lint,\
        portal-renamed-tomcat-in-path-mysql57,\
        portal-second-startup-space-in-path-mysql57,\
        portal-startup-space-in-path-mysql57,\
        poshi-validation,\
        release-osgi-state-exploded-test-mysql57,\
        release-osgi-state-lpkg-change-directory-test-mysql57,\
        release-osgi-state-lpkg-test-mysql57,\
        ruby-sass-compiler,\
        semantic-versioning,\
        source-format,\
        tck,\
        unit

    #
    # Acceptance (DXP)
    #

    playwright.projects.excludes[playwright-js-tomcat90-mysql57][acceptance-dxp]=\
        headless-builder-impl,\
        headless-builder-web

    test.batch.class.names.excludes[acceptance-dxp]=\
        **/batch-planner/**/*Test.java,\
        **/headless-builder/**/*Test.java,\
        **/mulesoft/**/*Test.java,\
        **/talend/**/*Test.java

    test.batch.dist.app.servers[acceptance-dxp]=${test.batch.dist.app.servers}

    test.batch.names[acceptance-dxp]=\
        ${test.batch.names[acceptance-ce]},\
        functional-smoke-tomcat90-db2111,\
        functional-smoke-tomcat90-db2115,\
        functional-smoke-tomcat90-oracle193,\
        functional-smoke-tomcat90-sqlserver2017,\
        functional-smoke-tomcat90-sqlserver2019,\
        functional-smoke-tomcat90-sqlserver2022,\
        functional-tomcat90-db2111,\
        functional-tomcat90-oracle193,\
        functional-tomcat90-sqlserver2017,\
        portal-license-smoke-mysql57

    #
    # Acceptance Functional
    #

    test.batch.dist.app.servers[acceptance-functional]=tomcat

    test.batch.names[acceptance-functional]=\
        functional-tomcat90-mysql57-chrome100,\
        poshi-validation

    test.batch.run.property.query[functional-tomcat90-mysql57-chrome100][acceptance-functional]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance == true)

    #
    # Acceptance Functional - Database Partitioning
    #

    database.partition.enabled[acceptance-functional-db-partition]=true
    test.batch.dist.app.servers[acceptance-functional-db-partition]=tomcat

    test.batch.names[acceptance-functional-db-partition]=\
        functional-tomcat90-mysql57,\
        functional-tomcat90-postgresql153,\
        functional-tomcat90-postgresql163

    test.batch.run.property.query[functional-tomcat90-mysql57][acceptance-functional-db-partition]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (data.archive.type == null) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql*][acceptance-functional-db-partition]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (data.archive.type == null) AND \
        (portal.acceptance == true)

    #
    # Acceptance Release
    #

    dist.type[acceptance-release]=release

    playwright.projects.excludes[playwright-js-tomcat90-mysql57][acceptance-release]=\
        headless-builder-impl,\
        headless-builder-web

    test.batch.class.names.excludes[acceptance-release]=\
        **/batch-planner/**/*Test.java,\
        **/headless-builder/**/*Test.java

    test.batch.dist.app.servers[acceptance-release]=tomcat

    test.batch.names[acceptance-release]=\
        functional-smoke-tomcat90-db2111,\
        functional-smoke-tomcat90-mariadb102,\
        functional-smoke-tomcat90-mysql57,\
        functional-smoke-tomcat90-mysql57-jdk11_open,\
        functional-smoke-tomcat90-oracle193,\
        functional-smoke-tomcat90-postgresql121,\
        functional-smoke-tomcat90-sqlserver2017,\
        functional-tomcat90-mysql57-chrome100,\
        functional-upgrade-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57-chrome100][acceptance-release]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.acceptance == true) AND \
            (portal.release == true)\
        )

    #
    # Account
    #

    test.batch.class.names.includes[account]=\
        **/account-test/**/*Test.java

    test.batch.dist.app.servers[account]=tomcat

    test.batch.names[account]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][account]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Account") OR \
            (testray.main.component.name ~ "Account")\
        )

    #
    # Analytics Cloud
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][analytics-cloud]=\
        analytics-settings-web,\
        analytics-web,\
        osb-faro-web

    test.batch.cucumber.options[analytics-cloud]=\
        \
        --tags @portal_Master_Upstream_CI \
        --tags ~@blocked \
        --tags ~@prototype \
        --tags ~@skip \
        \
        src/testIntegration/resources/features

    test.batch.dist.app.servers[analytics-cloud]=tomcat

    test.batch.names[analytics-cloud]=\
        functional-tomcat90-mysql57,\
        playwright-js-tomcat90-mysql57

    test.batch.osb.asah.github.url[analytics-cloud]=https://github.com/liferay/com-liferay-osb-asah-private/tree/7.0.x

    test.batch.run.property.query[functional-tomcat90-mysql57][analytics-cloud]=\
        (\
            (analytics.cloud.enabled == true) AND \
            (portal.upstream == true)\
        ) AND \
        (\
            (testray.component.name ~ "Segmentation") OR \
            (testray.main.component.name == "Analytics Cloud") OR \
            (testray.main.component.name ~ "A/B Test") OR \
            (testray.main.component.name ~ "Content Performance") OR \
            (testray.main.component.name ~ "Segmentation")\
        )

    testray.project.name[analytics-cloud]=Analytics Cloud

    #
    # Analytics Cloud Acceptance
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][analytics-cloud-acceptance]=\
        analytics-settings-web,\
        analytics-web,\
        osb-faro-web

    test.batch.dist.app.servers[analytics-cloud-acceptance]=tomcat

    test.batch.names[analytics-cloud-acceptance]=\
        functional-tomcat90-mysql57,\
        playwright-js-tomcat90-mysql57

    test.batch.osb.asah.github.url[analytics-cloud-acceptance]=https://github.com/liferay/com-liferay-osb-asah-private/tree/7.0.x

    test.batch.run.property.query[functional-tomcat90-mysql57][analytics-cloud-acceptance]=\
        (\
            (analytics.cloud.enabled == true) AND \
            (portal.acceptance == true)\
        ) AND \
        (\
            (testray.main.component.name == "Analytics Cloud")  OR \
            (testray.main.component.name ~ "A/B Test") OR \
            (testray.main.component.name ~ "Content Performance") OR \
            (testray.main.component.name ~ "Segmentation")\
        )

    testray.project.name[analytics-cloud-acceptance]=Analytics Cloud

    #
    # Analytics Cloud Integration
    #

    git.working.directory[analytics-cloud-integration]=${analytics.cloud.asah.dir}

    test.analytics.cloud.integration[analytics-cloud-integration]=true

    test.batch.class.names.includes[analytics-cloud-integration]=\
        **/testIntegration/**/*Test.java

    test.batch.dist.app.servers[analytics-cloud-integration]=tomcat

    test.batch.names[analytics-cloud-integration]=\
        modules-integration-analytics-cloud

    test.batch.osb.asah.github.url[analytics-cloud-integration]=https://github.com/liferay/com-liferay-osb-asah-private/tree/7.0.x

    testray.project.name[analytics-cloud-integration]=Analytics Cloud

    #
    # Analytics Cloud Quarantine
    #

    test.batch.dist.app.servers[analytics-cloud-quarantine]=tomcat

    test.batch.names[analytics-cloud-quarantine]=\
        functional-tomcat90-mysql57

    test.batch.osb.asah.github.url[analytics-cloud-quarantine]=https://github.com/liferay/com-liferay-osb-asah-private/tree/7.0.x

    test.batch.run.property.query[functional-tomcat90-mysql57][analytics-cloud-quarantine]=\
        (\
            (analytics.cloud.enabled == true) AND \
            (portal.upstream == "quarantine")\
        ) AND \
        (\
            (testray.component.name ~ "Segmentation") OR \
            (testray.main.component.name == "Analytics Cloud") OR \
            (testray.main.component.name ~ "A/B Test") OR \
            (testray.main.component.name ~ "Content Performance") OR \
            (testray.main.component.name ~ "Segmentation")\
        )

    testray.project.name[analytics-cloud-quarantine]=Analytics Cloud

    #
    # Analytics Cloud Release
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][analytics-cloud-release]=\
        analytics-settings-web,\
        analytics-web,\
        osb-faro-web

    test.batch.dist.app.servers[analytics-cloud-release]=tomcat

    test.batch.names[analytics-cloud-release]=\
        functional-tomcat90-mysql57,\
        playwright-js-tomcat90-mysql57

    test.batch.osb.asah.github.url[analytics-cloud-release]=https://github.com/liferay/com-liferay-osb-asah-private/tree/v4.1.0-rc1

    test.batch.run.property.query[functional-tomcat90-mysql57][analytics-cloud-release]=\
        (\
            (analytics.cloud.enabled == true) AND \
            (analytics.cloud.release == true) AND \
            (portal.upstream == "true")\
        ) AND \
        (\
            (testray.component.name ~ "Segmentation") OR \
            (testray.main.component.name == "Analytics Cloud") OR \
            (testray.main.component.name ~ "A/B Test") OR \
            (testray.main.component.name ~ "Content Performance") OR \
            (testray.main.component.name ~ "Segmentation")\
        )

    testray.project.name[analytics-cloud-release]=Analytics Cloud

    #
    # Analytics Cloud Upstream
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][analytics-cloud-upstream]=\
        analytics-settings-web,\
        analytics-web,\
        osb-faro-web

    test.batch.class.names.includes[analytics-cloud-upstream]=\
        **/apps/analytics/**/*Test.java,\
        **/apps/segments/**/*Test.java,\
        **/dxp/apps/analytics/**/*Test.java,\
        **/dxp/apps/segments/**/*Test.java

    test.batch.dist.app.servers[analytics-cloud-upstream]=tomcat

    test.batch.names[analytics-cloud-upstream]=\
        functional-tomcat90-mysql57,\
        modules-integration-mysql57,\
        modules-unit,\
        playwright-js-tomcat90-mysql57

    test.batch.osb.asah.github.url[analytics-cloud-upstream]=https://github.com/liferay/com-liferay-osb-asah-private/tree/7.0.x

    test.batch.run.property.query[functional-tomcat90-mysql57][analytics-cloud-upstream]=\
        (\
            (analytics.cloud.enabled == true) AND \
            (analytics.cloud.upstream == true) AND \
            (portal.upstream == "true")\
        ) AND \
        (\
            (testray.component.name ~ "Segmentation") OR \
            (testray.main.component.name == "Analytics Cloud") OR \
            (testray.main.component.name ~ "A/B Test") OR \
            (testray.main.component.name ~ "Content Performance") OR \
            (testray.main.component.name ~ "Segmentation")\
        )

    testray.project.name[analytics-cloud-upstream]=Analytics Cloud

    #
    # API Builder
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][api-builder]=\
        headless-builder-impl,\
        headless-builder-web

    test.batch.class.names.includes[modules-integration-*][api-builder]=\
        **/headless/headless-builder/**/src/testIntegration/**/*Test.java

    test.batch.class.names.includes[modules-unit][api-builder]=\
        **/headless/headless-builder/**/src/test/**/*Test.java

    test.batch.dist.app.servers[api-builder]=tomcat

    test.batch.names[api-builder]=\
        functional-tomcat90-mysql57,\
        modules-integration-mysql57,\
        modules-unit,\
        playwright-js-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][api-builder]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (testray.main.component.name == "API Builder")

    #
    # API Builder Functional
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][api-builder-functional]=\
        headless-builder-impl,\
        headless-builder-web

    test.batch.names[api-builder-functional]=\
        functional-tomcat90-mysql57,\
        playwright-js-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][api-builder-functional]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (testray.main.component.name == "API Builder")

    #
    # Application Servers
    #

    test.batch.dist.app.servers[app-servers]=${test.batch.dist.app.servers}

    test.batch.names[app-servers]=\
        functional-jboss74-mysql57,\
        functional-smoke-jboss74-mysql57,\
        functional-smoke-weblogic141-mysql57,\
        functional-smoke-wildfly261-mariadb104,\
        functional-smoke-wildfly261-mariadb106,\
        functional-tomcat90-mysql80,\
        functional-weblogic141-mysql57,\
        functional-wildfly261-mariadb104,\
        functional-wildfly261-mariadb106

    test.batch.run.property.query[app-servers]=\
        (test.class.method.name ~ "FragmentsDeploy") OR \
        (testray.main.component.name ~ "App Management") OR \
        (testray.main.component.name ~ "File Install") OR \
        (testray.main.component.name ~ "Smoke") OR \
        (testray.main.component.name ~ "Theme")

    test.batch.run.property.query[functional-jboss*-mysql*][app-servers]=\
        (${test.batch.run.property.query[functional-jboss*-mysql*]}) AND \
        (${test.batch.run.property.query[app-servers]})

    test.batch.run.property.query[functional-smoke-jboss74-mysql57][app-servers]=\
        (${test.batch.run.property.query[functional-smoke-jboss74-mysql57]}) AND \
        (${test.batch.run.property.query[app-servers]})

    test.batch.run.property.query[functional-smoke-weblogic*-mysql*][app-servers]=\
        (${test.batch.run.property.query[functional-smoke-weblogic141-mysql57]}) AND \
        (${test.batch.run.property.query[app-servers]})

    test.batch.run.property.query[functional-smoke-wildfly*-mariadb*][app-servers]=\
        (${test.batch.run.property.query[functional-smoke-wildfly261-mariadb104]}) AND \
        (${test.batch.run.property.query[app-servers]})

    test.batch.run.property.query[functional-weblogic*-mysql*][app-servers]=\
        (${test.batch.run.property.query[functional-weblogic*-mysql*]}) AND \
        (${test.batch.run.property.query[app-servers]})

    test.batch.run.property.query[functional-wildfly*-mariadb*][app-servers]=\
        (${test.batch.run.property.query[functional-wildfly*-mariadb*]}) AND \
        (${test.batch.run.property.query[app-servers]})

    #
    # Auto Tagging
    #

    test.batch.class.names.includes[auto-tagging]=\
        **/asset-auto-tagger-google-cloud-natural-language-impl/**/*Test.java,\
        **/asset-auto-tagger-google-cloud-natural-language-test/**/*Test.java,\
        **/asset-auto-tagger-opennlp-test/**/*Test.java,\
        **/asset-auto-tagger-test/**/*Test.java,\
        **/document-library-asset-auto-tagger-google-cloud-vision/**/*Test.java,\
        **/document-library-asset-auto-tagger-opennlp-test/**/*Test.java,\
        **/document-library-asset-auto-tagger-tensorflow-test/**/*Test.java,\
        **/journal-asset-auto-tagger-opennlp-test/**/*Test.java

    test.batch.dist.app.servers[auto-tagging]=tomcat

    test.batch.names[auto-tagging]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][auto-tagging]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Auto Tagging") OR \
            (testray.main.component.name ~ "Auto Tagging")\
        )

    #
    # Backend
    #

    test.batch.dist.app.servers[backend]=tomcat

    test.batch.names[backend]=\
        bundle-blacklist-restart-mysql57,\
        central-requirements,\
        lpkg-container-mysql57,\
        lpkg-controller-mysql57,\
        lpkg-override-mysql57,\
        lpkg-persistence-mysql57,\
        lpkg-startup-mysql57,\
        modules-compile,\
        modules-integration-db2111,\
        modules-integration-hypersonic20,\
        modules-integration-mariadb102,\
        modules-integration-mysql57,\
        modules-integration-oracle193,\
        modules-integration-postgresql134,\
        modules-integration-postgresql144,\
        modules-integration-postgresql153,\
        modules-integration-postgresql163,\
        modules-integration-sqlserver2017,\
        modules-semantic-versioning,\
        modules-unit,\
        release-osgi-state-exploded-test-mysql57,\
        release-osgi-state-lpkg-change-directory-test-mysql57,\
        release-osgi-state-lpkg-test-mysql57,\
        rest-builder,\
        service-builder,\
        source-format,\
        unit

    #
    # Backend Hypersonic
    #

    test.batch.dist.app.servers[backend-hypersonic]=tomcat

    test.batch.names[backend-hypersonic]=\
        bundle-blacklist-restart-mysql57,\
        central-requirements,\
        lpkg-container-mysql57,\
        lpkg-controller-mysql57,\
        lpkg-override-mysql57,\
        lpkg-persistence-mysql57,\
        lpkg-startup-mysql57,\
        modules-compile,\
        modules-integration-hypersonic20,\
        modules-semantic-versioning,\
        modules-unit,\
        release-osgi-state-exploded-test-mysql57,\
        release-osgi-state-lpkg-change-directory-test-mysql57,\
        release-osgi-state-lpkg-test-mysql57,\
        rest-builder,\
        service-builder,\
        source-format,\
        unit

    #
    # Blade
    #

    test.batch.dist.app.servers[blade]=tomcat
    test.batch.names[blade]=blade-samples

    #
    # Bundle
    #

    test.batch.dist.app.servers[bundle]=tomcat
    test.batch.names[bundle]=

    #
    # Bundles
    #

    test.batch.dist.app.servers[bundles]=\
        jboss,\
        tomcat,\
        weblogic,\
        wildfly

    test.batch.names[bundles]=

    #
    # Calendar
    #

    test.batch.class.names.includes[calendar]=\
        **/calendar/**/*Test.java

    test.batch.dist.app.servers[calendar]=tomcat

    test.batch.names[calendar]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][calendar]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Calendar") OR \
            (testray.main.component.name ~ "Calendar")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][calendar]=\
        (portal.upstream == true) AND \
        (testray.main.component.name == "Upgrades Calendar")

    #
    # Clay
    #

    test.batch.dist.app.servers[clay]=tomcat

    test.batch.names[clay]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-semantic-versioning,\
        semantic-versioning

    test.batch.run.property.query[functional-tomcat90-mysql57][clay]=\
        (portal.upstream == true) AND \
        (\
            (test.class.method.name == "CommerceAccountSelector#CanCreateNewAccountInFlow") OR \
            (test.class.method.name == "DMContentPages#CanCreateTagUsingAutocomplete") OR \
            (testray.component.names ~ "Clay")\
        )

    #
    # Click to Chat
    #

    test.batch.dist.app.servers[click-to-chat]=tomcat

    test.batch.names[click-to-chat]=\
        functional-tomcat90-mysql57,\
        modules-semantic-versioning,\
        semantic-versioning

    test.batch.run.property.query[functional-tomcat90-mysql57][click-to-chat]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name == "Click to Chat")

    #
    # Clustering
    #

    test.batch.class.names.includes[clustering]=\
        **/portal-cache/**/*Test.java,\
        **/portal-cluster-multiple/**/*Test.java,\
        **/portal-scheduler/**/*Test.java

    test.batch.dist.app.servers[clustering]=tomcat

    test.batch.names[clustering]=\
        functional-tomcat90-mysql57,\
        modules-integration-mysql57,\
        modules-unit

    test.batch.run.property.query[functional-tomcat*-mysql*][clustering]=\
        (cluster.enabled == "true") AND \
        (license.required != "true") AND \
        (search.environment.suite.exclude != true)

    #
    # Commerce
    #

    commerce.playwright.projects=\
        commerce/commerce-cart-content-web,\
        commerce/commerce-channel-web,\
        commerce/commerce-checkout-web,\
        commerce/commerce-discount-content-web,\
        commerce/commerce-order-content-web,\
        commerce/commerce-payment-web,\
        commerce/commerce-product-content-search-web,\
        commerce/commerce-product-content-web,\
        commerce/commerce-product-definitions-web,\
        commerce/commerce-product-options-web,\
        commerce/commerce-shipping-engine-fixed-web,\
        commerce/commerce-site-initializer,\
        commerce/commerce-theme-minium,\
        commerce/commerce-wish-list-web

    playwright.projects.includes[playwright-js-tomcat90-mysql57][commerce]=${commerce.playwright.projects}

    test.batch.class.names.includes[commerce]=\
        **/commerce/**/*Test.java

    test.batch.dist.app.servers[commerce]=tomcat

    test.batch.names[commerce]=\
        functional-tomcat90-mysql57,\
        modules-integration-mysql57,\
        modules-unit,\
        playwright-js-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat*-mysql*][commerce]=\
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "Commerce") OR \
            (testray.main.component.name ~ "Order Management") OR \
            (testray.main.component.name ~ "Product Info Management") OR \
            (testray.main.component.name ~ "Shopping Experience")\
        )

    #
    # Commerce Database
    #

    test.batch.class.names.includes[commerce-database]=\
        **/commerce/**/*Test.java

    test.batch.dist.app.servers[commerce-database]=tomcat

    test.batch.names[commerce-database]=\
        modules-integration-db2111,\
        modules-integration-oracle193

    #
    # Commerce Functional
    #

    test.batch.dist.app.servers[commerce-functional]=tomcat

    test.batch.names[commerce-functional]=\
        functional-tomcat90-mysql57,\
        source-format-current-branch

    test.batch.run.property.query[functional-tomcat*-mysql*][commerce-functional]=\
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "Commerce") OR \
            (testray.main.component.name ~ "Order Management") OR \
            (testray.main.component.name ~ "Product Info Management") OR \
            (testray.main.component.name ~ "Shopping Experience")\
        )

    #
    # Commerce Integration
    #

    test.batch.class.names.includes[commerce-integration]=\
        **/commerce/**/*Test.java

    test.batch.dist.app.servers[commerce-integration]=tomcat

    test.batch.names[commerce-integration]=\
        modules-integration-mysql57,\
        modules-unit

    #
    # Commerce Upgrade
    #

    test.batch.dist.app.servers[commerce-upgrade]=tomcat

    test.batch.names[commerce-upgrade]=\
        functional-upgrade-tomcat90-db2111,\
        functional-upgrade-tomcat90-mariadb102,\
        functional-upgrade-tomcat90-mysql57,\
        functional-upgrade-tomcat90-oracle193,\
        functional-upgrade-tomcat90-postgresql134,\
        functional-upgrade-tomcat90-postgresql144,\
        functional-upgrade-tomcat90-postgresql153,\
        functional-upgrade-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-sqlserver2017

    test.batch.run.property.query[functional-upgrade-*][commerce-upgrade]=\
        (\
            (data.archive.type != null) AND \
            (portal.upstream == true)\
        ) AND \
        (\
            (testray.main.component.name ~ "Commerce") OR \
            (testray.main.component.name ~ "Commerce Upgrades")\
        )

    #
    # Commerce With Remote Elasticsearch 7
    #

    search.engine[commerce-es7-remote]=remote-elasticsearch
    test.batch.class.names.includes[commerce-es7-remote]=${test.batch.class.names.includes[commerce]}
    test.batch.dist.app.servers[commerce-es7-remote]=tomcat

    test.batch.names[commerce-es7-remote]=\
        functional-tomcat90-mysql57,\
        modules-integration-mysql57

    test.batch.run.property.query[functional-tomcat*-mysql*][commerce-es7-remote]=\
        ${test.batch.run.property.query[functional-tomcat*-mysql*][commerce-functional]}

    #
    # Commerce With Remote Elasticsearch 8
    #

    search.engine[commerce-es8-remote]=remote-elasticsearch
    suite.elastic.version[commerce-es8-remote]=8.15.0
    test.batch.class.names.includes[commerce-es8-remote]=${test.batch.class.names.includes[commerce]}
    test.batch.dist.app.servers[commerce-es8-remote]=tomcat

    test.batch.names[commerce-es8-remote]=\
        functional-tomcat90-mysql57,\
        modules-integration-mysql57

    test.batch.run.property.query[functional-tomcat*-mysql*][commerce-es8-remote]=\
        ${test.batch.run.property.query[functional-tomcat*-mysql*][commerce-functional]}

    #
    # Commerce With Remote OpenSearch 2
    #

    search.engine[commerce-opensearch2]=opensearch2
    test.batch.class.names.includes[commerce-opensearch2]=${test.batch.class.names.includes[commerce]}
    test.batch.dist.app.servers[commerce-opensearch2]=tomcat

    test.batch.names[commerce-opensearch2]=\
        functional-tomcat90-mysql57,\
        modules-integration-mysql57

    test.batch.run.property.query[functional-tomcat*-mysql*][commerce-opensearch2]=\
        ${test.batch.run.property.query[functional-tomcat*-mysql*][commerce-functional]}

    #
    # Content Management
    #

    content.management.playwright.projects=\
        announcements-web,\
        asset-categories-admin-web,\
        asset-publisher-web,\
        asset-tags-admin-web,\
        blogs-web,\
        content-dashboard-web,\
        document-library-web,\
        item-selector-taglib,\
        journal-web,\
        knowledge-base-web,\
        locked-items-web,\
        message-boards-web,\
        notifications-web,\
        questions-web,\
        wiki-web

    content.management.testing.modules=\
        apps/adaptive-media/**,\
        apps/ai-creator/**,\
        apps/announcements/**,\
        apps/asset/**,\
        apps/asset-tags-validator/**,\
        apps/blogs/**,\
        apps/bookmarks/**,\
        apps/bulk/**,\
        apps/comment/**,\
        apps/connected-app/**,\
        apps/content-dashboard/**,\
        apps/depot/**,\
        apps/document-library/**,\
        apps/document-library-google-docs/**,\
        apps/headless/headless-admin-content/**,\
        apps/headless/headless-admin-taxonomy/**,\
        apps/headless/headless-delivery/**,\
        apps/image/**,\
        apps/item-selector/**,\
        apps/journal/**,\
        apps/knowledge-base/**,\
        apps/locked-items/**,\
        apps/mentions/**,\
        apps/microblogs/**,\
        apps/my-subscriptions/**,\
        apps/questions/**,\
        apps/ratings/**,\
        apps/reading-time/**,\
        apps/repository/**,\
        apps/saved-content/**,\
        apps/sharing/**,\
        apps/social/**,\
        apps/subscription/**,\
        apps/translation/**,\
        apps/trash/**,\
        apps/upload/**,\
        apps/wiki/**

    modules.excludes[js-unit][content-management]=\
        apps/asset/asset-display-page-*/**,\
        apps/asset/asset-list-*/**

    modules.includes[js-unit][content-management]=${content.management.testing.modules}

    modules.includes[modules-semantic-versioning][content-management]=${content.management.testing.modules}

    modules.includes.private[modules-semantic-versioning][content-management]=\
        dxp/apps/document-library-opener/**,\
        dxp/apps/sharepoint-rest/**,\
        dxp/apps/sharepoint-soap/**

    modules.includes.public[modules-semantic-versioning][content-management]=${content.management.testing.modules}

    playwright.projects.includes[playwright-js-tomcat90-mysql57][content-management]=${content.management.playwright.projects}

    test.batch.class.names.excludes[content-management]=\
        **/analytics/**/*Test.java,\
        **/asset/asset-display-page-*/**/*Test.java,\
        **/asset/asset-list-*/**/*Test.java,\
        **/calendar/**/*Test.java,\
        **/export-import/**/*Test.java,\
        **/layout/**/*Test.java,\
        **/object/**/*Test.java,\
        **/site-navigation/**/*Test.java

    test.batch.class.names.includes[content-management]=\
        **/adaptive-media/**/*Test.java,\
        **/ai-creator/**/*Test.java,\
        **/announcements/**/*Test.java,\
        **/asset/**/*Test.java,\
        **/asset-tags-validator/**/*Test.java,\
        **/blogs/**/*Test.java,\
        **/bookmarks/**/*Test.java,\
        **/bulk/**/*Test.java,\
        **/comment/**/*Test.java,\
        **/connected-app/**/*Test.java,\
        **/content-dashboard/**/*Test.java,\
        **/depot/**/*Test.java,\
        **/document-library/**/*Test.java,\
        **/document-library-google-docs/**/*Test.java,\
        **/headless/headless-admin-content/**/*Test.java,\
        **/headless/headless-admin-taxonomy/**/*Test.java,\
        **/headless/headless-delivery/**/*Test.java,\
        **/image/**/*Test.java,\
        **/item-selector/**/*Test.java,\
        **/journal/**/*Test.java,\
        **/knowledge-base/**/*Test.java,\
        **/mentions/**/*Test.java,\
        **/message-boards/**/*Test.java,\
        **/ratings-test/**/*Test.java,\
        **/reading-time/**/*Test.java,\
        **/repository/**/*Test.java,\
        **/sharing/**/*Test.java,\
        **/social/**/*Test.java,\
        **/translation/**/*Test.java,\
        **/trash/**/*Test.java,\
        **/wiki/**/*Test.java

    test.batch.dist.app.servers[content-management]=tomcat

    test.batch.names[content-management]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        playwright-js-tomcat90-mysql57,\
        semantic-versioning

    test.batch.run.property.query[functional-tomcat90-mysql57][content-management]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.name ~ "Web Content Administration") OR \
            (testray.component.names ~ "Blogs") OR \
            (testray.component.names ~ "Content Page Review") OR \
            (testray.component.names ~ "Document Management") OR \
            (testray.component.names ~ "Notifications") OR \
            (testray.main.component.name ~ "AI-Creator") OR \
            (testray.main.component.name ~ "Adaptive Media") OR \
            (testray.main.component.name ~ "Announcements") OR \
            (testray.main.component.name ~ "Asset Publisher Widget") OR \
            (testray.main.component.name ~ "Asset Sharing") OR \
            (testray.main.component.name ~ "Auto Tagging") OR \
            (testray.main.component.name ~ "Blogs") OR \
            (testray.main.component.name ~ "Categories") OR \
            (testray.main.component.name ~ "Comment") OR \
            (testray.main.component.name ~ "Content Dashboard") OR \
            (testray.main.component.name ~ "Content Management Headless") OR \
            (testray.main.component.name ~ "Content Page Review") OR \
            (testray.main.component.name ~ "Depot") OR \
            (testray.main.component.name ~ "Document Management") OR \
            (testray.main.component.name ~ "Headless Admin Taxonomy API") OR \
            (testray.main.component.name ~ "Invite Members") OR \
            (testray.main.component.name ~ "Item Selector") OR \
            (testray.main.component.name ~ "Knowledge Base") OR \
            (testray.main.component.name ~ "Mentions") OR \
            (testray.main.component.name ~ "Message Boards") OR \
            (testray.main.component.name ~ "My Subscriptions") OR \
            (testray.main.component.name ~ "Notifications") OR \
            (testray.main.component.name ~ "Questions") OR \
            (testray.main.component.name ~ "Ratings") OR \
            (testray.main.component.name ~ "Recycle Bin") OR \
            (testray.main.component.name ~ "Related Assets Widget") OR \
            (testray.main.component.name ~ "Social Bookmarks") OR \
            (testray.main.component.name ~ "Social Networking") OR \
            (testray.main.component.name ~ "Tags") OR \
            (testray.main.component.name ~ "Translations Management") OR \
            (testray.main.component.name ~ "Upgrades Content Management") OR \
            (testray.main.component.name ~ "Web Content Administration") OR \
            (testray.main.component.name ~ "Web Content Display") OR \
            (testray.main.component.name ~ "Wiki")\
        )

    #
    # Content Management Playwright
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][content-management-playwright]=${content.management.playwright.projects}

    test.batch.dist.app.servers[content-management-playwright]=tomcat

    test.batch.names[content-management-playwright]=\
        playwright-js-tomcat90-mysql57

    #
    # Content Page Review
    #

    test.batch.class.names.includes[content-page-review]=\
        **/layout-content-page-editor-web/**/*test.js

    test.batch.dist.app.servers[content-page-review]=tomcat

    test.batch.names[content-page-review]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][content-page-review]=\
        (portal.upstream == "true") AND \
        (\
            (testray.component.names ~ "Content Page Review") OR \
            (testray.main.component.name ~ "Content Page Review")\
        )

    #
    # Continuous Integration
    #

    test.batch.class.names.includes[modules-unit][continuous-integration]=\
        **/jenkins-results-parser/**/*Test.java,\
        **/poshi/**/*Test.java

    test.batch.dist.app.servers[continuous-integration]=tomcat

    test.batch.names[continuous-integration]=\
        modules-unit

    #
    # Cookies
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][cookies]=\
        cookies-banner-web

    test.batch.class.names.includes[cookies]=\
        **/cookies/**/*Test.java

    test.batch.dist.app.servers[cookies]=tomcat

    test.batch.names[cookies]=${test.batch.names[security]}

    test.batch.run.property.query[functional-tomcat90-mysql57][cookies]=\
        (portal.upstream == "true") AND \
        (testray.main.component.name ~ "Cookies")

    #
    # Core Infrastructure
    #

    test.batch.dist.app.servers[core-functional]=tomcat

    test.batch.names[core-functional]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][core-functional]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (testray.main.component.name == "Bean Portlet") OR \
            (testray.main.component.name == "Bundle Blacklist") OR \
            (testray.main.component.name == "Clustering") OR \
            (testray.main.component.name == "Core Infrastructure Util") OR \
            (testray.main.component.name == "Custom Fields") OR \
            (testray.main.component.name == "Deployment") OR \
            (testray.main.component.name == "Document Library Stores") OR \
            (testray.main.component.name == "Ext") OR \
            (testray.main.component.name == "File Install") OR \
            (testray.main.component.name == "Gogo Shell") OR \
            (testray.main.component.name == "IP Address") OR \
            (testray.main.component.name == "JSP Compiler") OR \
            (testray.main.component.name == "License") OR \
            (testray.main.component.name == "Liferay Faces") OR \
            (testray.main.component.name == "Locale") OR \
            (testray.main.component.name == "Localization") OR \
            (testray.main.component.name == "Logging") OR \
            (testray.main.component.name == "Mobile Device Rules") OR \
            (testray.main.component.name == "Module Framework Servlet") OR \
            (testray.main.component.name == "Portal Configuration") OR \
            (testray.main.component.name == "Portal List Type") OR \
            (testray.main.component.name == "Portal Services") OR \
            (testray.main.component.name == "Rolling Restart") OR \
            (testray.main.component.name == "Scheduler") OR \
            (testray.main.component.name == "Server Administration") OR \
            (testray.main.component.name == "Service Builder") OR \
            (testray.main.component.name == "Setup Wizard") OR \
            (testray.main.component.name == "Smoke") OR \
            (testray.main.component.name == "TCK") OR \
            (testray.main.component.name == "Templates Engine") OR \
            (testray.main.component.name == "User Tracker") OR \
            (testray.main.component.name == "Util") OR \
            (testray.main.component.name == "Virtual Instances")\
        )

    #
    # Customer Solutions
    #

    customer.solutions.playwright.projects=\
        customer

    playwright.projects.includes[playwright-js-tomcat90-mysql57][customer-solutions]=${customer.solutions.playwright.projects}

    test.batch.dist.app.servers[customer-solutions]=tomcat

    test.batch.names[customer-solutions]=\
        playwright-js-tomcat90-mysql57

    #
    # Data Engine
    #

    test.batch.class.names.includes[data-engine]=\
        **/data-engine/**/*Test.java,\
        **/dynamic-data-lists/**/*Test.java,\
        **/dynamic-data-mapping/**/*Test.java,\
        **/journal/**/*Test.java

    test.batch.dist.app.servers[data-engine]=tomcat

    test.batch.names[data-engine]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][data-engine]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names == "Dynamic Data Mapping") OR \
            (testray.main.component.name == "Data Engine") OR \
            (testray.main.component.name == "Dynamic Data Mapping")\
        )

    #
    # Data Engine With Database Partition
    #

    database.partition.enabled[data-engine-db-partition]=true
    test.batch.dist.app.servers[data-engine-db-partition]=tomcat

    test.batch.names[data-engine-db-partition]=functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][data-engine-db-partition]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57][data-engine]}

    #
    # Data Integration
    #

    test.batch.class.names.includes[modules-integration-*][data-integration]=\
        **/batch-engine/**/src/testIntegration/**/*Test.java,\
        **/batch-planner/**/src/testIntegration/**/*Test.java,\
        **/dispatch/**/src/testIntegration/**/*Test.java,\
        **/headless/headless-batch-engine/**/src/testIntegration/**/*Test.java

    test.batch.class.names.includes[modules-unit][data-integration]=\
        **/batch-engine/**/src/test/**/*Test.java,\
        **/batch-planner/**/src/test/**/*Test.java,\
        **/dispatch/**/src/test/**/*Test.java,\
        **/headless/headless-batch-engine/**/src/test/**/*Test.java

    test.batch.dist.app.servers[data-integration]=tomcat

    test.batch.names[data-integration]=\
        functional-tomcat90-mysql57,\
        modules-integration-mysql57,\
        modules-unit

    test.batch.run.property.query[functional-tomcat*-mysql*][data-integration]=\
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name == "Connectors") OR \
            (testray.main.component.name == "Data Migration Center") OR \
            (testray.main.component.name == "Export/Import") OR \
            (testray.main.component.name == "Headless Batch Engine API") OR \
            (testray.main.component.name == "Job Scheduler")\
        )

    #
    # Data Integration Functional
    #

    test.batch.dist.app.servers[data-integration-functional]=tomcat

    test.batch.names[data-integration-functional]=\
        functional-tomcat90-mysql57,\
        source-format

    test.batch.run.property.query[functional-tomcat*-mysql*][data-integration-functional]=\
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name == "Connectors") OR \
            (testray.main.component.name == "Data Migration Center") OR \
            (testray.main.component.name == "Export/Import") OR \
            (testray.main.component.name == "Headless Batch Engine API") OR \
            (testray.main.component.name == "Job Scheduler")\
        )

    #
    # Database Partitioning
    #

    test.batch.class.names.includes[db-partition]=\
        **/portal-db-partition-test/**/*Test.java,\
        **/portal-db-schema-definition-test/**/DBPartitionDBSchemaDefinitionExporterTest.java,\
        **/portal-tools-db-partition*/**/*Test.java,\
        **/testIntegration/**/CompanyLocalServiceDBPartitionTest.java,\
        **/testIntegration/**/UpgradeProcessDBPartitionTest.java,\
        **/testIntegration/**/v1_0_1/test/QuartzUpgradeProcessTest.java,\
        **/testIntegration/**/v1_0_3/test/QuartzDBPartitionUpgradeProcessTest.java

    test.batch.dist.app.servers[db-partition]=tomcat

    test.batch.names[db-partition]=\
        functional-tomcat90-mysql57,\
        functional-tomcat90-postgresql153,\
        functional-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-mysql57,\
        functional-upgrade-tomcat90-postgresql153,\
        functional-upgrade-tomcat90-postgresql163,\
        modules-integration-db-partition-mysql57,\
        modules-integration-db-partition-postgresql153,\
        modules-integration-db-partition-postgresql163,\
        modules-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][db-partition]=\
        (database.partition.enabled == true) AND \
        (database.types ~ mysql) AND \
        (portal.upstream == true) AND \
        (testray.main.component.name ~ "Database Partitioning")

    test.batch.run.property.query[functional-tomcat90-postgresql*][db-partition]=\
        (database.partition.enabled == true) AND \
        (database.types ~ postgresql) AND \
        (portal.upstream == true) AND \
        (testray.main.component.name ~ "Database Partitioning")

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][db-partition]=\
        (data.archive.type == "data-archive-portal-partition") AND \
        (database.types ~ mysql) AND \
        (testray.main.component.name ~ "Database Partitioning")

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][db-partition]=\
        (data.archive.type == "data-archive-portal-partition") AND \
        (database.types ~ postgresql) AND \
        (testray.main.component.name ~ "Database Partitioning")

    #
    # Dev Tools
    #

    test.batch.class.names.includes[dev-tools]=\
        **/modules/sdk/**/*Test.java,\
        **/project-templates/**/src/test/**/*Test.java,\
        **/source-formatter/**/*Test.java,\
        **/util/css-builder/**/*Test.java,\
        **/util/portal-tools-bundle-support/**/*Test.java,\
        **/util/portal-tools-soy-builder/**/*Test.java,\
        **/util/portal-tools-theme-builder/**/*Test.java

    test.batch.dist.app.servers[dev-tools]=tomcat

    test.batch.names[dev-tools]=\
        gradle-plugins-test,\
        modules-integration-project-templates,\
        modules-integration-project-templates-jdk21_zulu,\
        modules-unit,\
        modules-unit-project-templates,\
        modules-unit-project-templates-jdk21_zulu,\
        source-format-current-branch,\
        workspaces-compile-jdk11

    #
    # Digital Signature
    #

    test.batch.class.names.includes[digital-signature]=\
        **/digital-signature/**/*Test.java

    test.batch.dist.app.servers[digital-signature]=tomcat

    test.batch.names[digital-signature]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][digital-signature]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name == "Digital Signature")

    #
    # Document Antivirus
    #

    dl.store.antivirus.enabled[document-antivirus]=true

    test.batch.class.names.includes[document-antivirus]=\
        **/document-library-content-test/**/*Test.java,\
        **/document-library-document-conversion/**/*Test.java,\
        **/document-library-repository-cmis-api/**/*Test.java,\
        **/document-library-repository-cmis-impl/**/*Test.java,\
        **/document-library-repository-search/**/*Test.java,\
        **/document-library-service/**/*Test.java,\
        **/document-library-test/**/*Test.java,\
        **/document-library-test-util/**/*Test.java,\
        **/document-library-uad-test/**/*Test.java,\
        **/document-library-web-test/**/*Test.java

    test.batch.dist.app.servers[document-antivirus]=tomcat

    test.batch.names[document-antivirus]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][document-antivirus]=\
        (portal.upstream == "true") AND \
        (\
            (testray.component.name ~ "Document Management") OR \
            (testray.main.component.name ~ "Antivirus") OR \
            (testray.main.component.name ~ "Document Management")\
        )

    #
    # Document Library Store
    #

    test.batch.class.names.includes[dl-store]=\
        **/change-tracking-store-test/**/*Test.java,\
        **/portal-store/**/*Test.java

    test.batch.dist.app.servers[dl-store]=tomcat

    test.batch.names[dl-store]=\
        functional-tomcat90-mysql57,\
        modules-integration-aws-s3-mysql57,\
        modules-integration-mysql57,\
        modules-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][dl-store]=\
        (testray.main.component.name ~ "Document Library Stores")

    #
    # DROOLS
    #

    test.batch.class.names.includes[drools]=\
        **/portal-rules-engine/**/*Test.java,\
        **/portal-rules-engine-drools/**/*Test.java

    test.batch.dist.app.servers[drools]=tomcat

    test.batch.names[drools]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][drools]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name == "Rules")

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][drools]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name == "Upgrades Rules")

    #
    # Dummy
    #

    test.batch.class.names.includes[modules-integration-*][dummy]=**/jenkins-results-parser/**/DummyIntegrationTest.java
    test.batch.class.names.includes[modules-unit][dummy]=**/jenkins-results-parser/**/DummyUnitTest.java

    test.batch.dist.app.servers[dummy]=tomcat

    test.batch.names[dummy]=\
        functional-tomcat90-mysql57,\
        modules-integration-mysql57,\
        modules-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][dummy]=\
        portal.smoke == "dummy"

    #
    # Environments
    #

    test.batch.dist.app.servers[environments]=${test.batch.dist.app.servers}

    test.batch.names[environments]=\
        #        functional-alpine310-tomcat90-mysql57,\
#        functional-amazonlinux2-tomcat90-mysql57,\
#        functional-amazonlinux2022-tomcat90-mysql57,\
#        functional-centos8-tomcat90-mysql57,\
#        functional-fedora35-tomcat90-mysql57,\
        functional-jboss74-mysql57,\
        #        functional-orcllinux7-tomcat90-mysql57,\
#        functional-orcllinux8-tomcat90-mysql57,\
#        functional-orcllinux9-tomcat90-mysql57,\
#        functional-redhat8-tomcat90-mysql57,\
#        functional-redhat9-tomcat90-mysql57,\
#        functional-rockylinux91-tomcat90-mysql57,\
#        functional-suse15-tomcat90-mysql57,\
        functional-tomcat90-db2111,\
        functional-tomcat90-db2115,\
        functional-tomcat90-mariadb102,\
        functional-tomcat90-mariadb104,\
        functional-tomcat90-mariadb106,\
        functional-tomcat90-mysql57,\
        functional-tomcat90-mysql57-jdk11_open,\
        functional-tomcat90-mysql57-jdk11_oracle,\
        functional-tomcat90-mysql57-jdk11_zulu,\
        functional-tomcat90-mysql80,\
        functional-tomcat90-oracle193,\
        functional-tomcat90-postgresql121,\
        functional-tomcat90-postgresql134,\
        functional-tomcat90-postgresql144,\
        functional-tomcat90-postgresql153,\
        functional-tomcat90-postgresql163,\
        functional-tomcat90-sqlserver2017,\
        functional-tomcat90-sqlserver2019,\
        functional-tomcat90-sqlserver2022,\
        #        functional-ubuntu18-tomcat90-mysql57,\
#        functional-ubuntu20-tomcat90-mysql57,\
#        functional-ubuntu22-tomcat90-mysql57,\
        functional-weblogic141-mysql57,\
        functional-wildfly261-mysql57

    test.batch.run.property.query[functional-alpine*][environments]=\
        portal.smoke == true

    test.batch.run.property.query[functional-amazonlinux*][environments]=\
        portal.smoke == true

    test.batch.run.property.query[functional-centos*][environments]=\
        portal.smoke == true

    test.batch.run.property.query[functional-jboss*][environments]=\
        environment.acceptance == true

    test.batch.run.property.query[functional-orcllinux*][environments]=\
        portal.smoke == true

    test.batch.run.property.query[functional-redhat*][environments]=\
        portal.smoke == true

    test.batch.run.property.query[functional-rockylinux*][environments]=\
        portal.smoke == true

    test.batch.run.property.query[functional-suse*][environments]=\
        portal.smoke == true

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][environments]=\
        (${test.batch.run.property.query[functional-tomcat*][environments]}) OR \
        (environment.acceptance ~ openjdk11)

    test.batch.run.property.query[functional-tomcat*][environments]=\
        environment.acceptance == true

    test.batch.run.property.query[functional-ubuntu*][environments]=\
        portal.smoke == true

    test.batch.run.property.query[functional-weblogic*][environments]=\
        environment.acceptance == true

    test.batch.run.property.query[functional-wildfly*][environments]=\
        environment.acceptance == true

    #
    # Export Import
    #

    test.batch.class.names.includes[export-import]=\
        **/export-import/**/*Test.java,\
        **/portal-security-ldap-impl/**/LDAPUserImporterImplTest.java

    test.batch.dist.app.servers[export-import]=tomcat

    test.batch.names[export-import]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][export-import]=\
        (portal.upstream == true) AND \
        (testray.main.component.name ~ "Export/Import")

    #
    # External Document Repositories
    #

    test.batch.class.names.includes[external-document-repositories]=\
        **/document-library-opener-google-drive-test/**/*Test.java,\
        **/document-library-opener-google-drive-web/**/*Test.java,\
        **/document-library-opener-onedrive-test/**/*Test.java,\
        **/document-library-opener-onedrive-web/**/*Test.java,\
        **/document-library-opener-test/**/*Test.java,\
        **/document-library-opener-uad-test/**/*Test.java,\
        **/sharepoint-rest/**/*Test.java,\
        **/sharepoint-soap/**/*Test.java

    test.batch.dist.app.servers[external-document-repositories]=tomcat

    test.batch.names[external-document-repositories]=\
        functional-tomcat90-mysql57,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][external-document-repositories]=\
        (testray.main.component.name == "External Document Repositories")

    #
    # Forms
    #

    test.batch.class.names.includes[forms]=\
        **/dynamic-data-mapping-data-provider-impl/**/*Test.java,\
        **/dynamic-data-mapping-data-provider-instance/**/*Test.java,\
        **/dynamic-data-mapping-expression/**/*Test.java,\
        **/dynamic-data-mapping-form-builder/**/*Test.java,\
        **/dynamic-data-mapping-form-evaluator-impl/**/*Test.java,\
        **/dynamic-data-mapping-form-field-type/**/*Test.java,\
        **/dynamic-data-mapping-form-renderer/**/*Test.java,\
        **/dynamic-data-mapping-form-taglib/**/*Test.java,\
        **/dynamic-data-mapping-form-values-factory/**/*Test.java,\
        **/dynamic-data-mapping-form-values-query/**/*Test.java,\
        **/dynamic-data-mapping-form-web/**/*Test.java,\
        **/dynamic-data-mapping-service/**/*Test.java,\
        **/dynamic-data-mapping-test/**/*Test.java,\
        **/dynamic-data-mapping-validator/**/*Test.java,\
        **/google-places-test/**/*Test.java,\
        **/headless/headless-form/headless-form-test/**/*Test.java

    test.batch.dist.app.servers[forms]=tomcat

    test.batch.names[forms]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][forms]=\
        (portal.upstream == "true") AND \
        (\
            (testray.component.names == "Forms") OR \
            (testray.main.component.name == "Forms")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][forms]=\
        (data.archive.type != "data-archive-calendar") AND \
        (portal.release != "false") AND \
        (portal.upstream == true) AND \
        (testray.main.component.name == "Upgrades Forms")

    #
    # Forms Functional
    #

    test.batch.dist.app.servers[forms-functional]=tomcat

    test.batch.names[forms-functional]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][forms-functional]=\
        (forms.functional == "true") AND \
        (testray.main.component.name == "Data Engine") OR \
        (testray.main.component.name == "Dynamic Data Mapping") OR \
        (testray.main.component.name == "Forms")

    #
    # Forms With Database Partition
    #

    database.partition.enabled[forms-db-partition]=true
    test.batch.dist.app.servers[forms-db-partition]=tomcat

    test.batch.names[forms-db-partition]=functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][forms-db-partition]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57][forms]}

    #
    # Frontend Client Extensions (Previously known as Remote Apps)
    #

    test.batch.class.names.includes[frontend-client-extensions]=\
        **/client-extension/**/*Test.java

    test.batch.dist.app.servers[frontend-client-extensions]=tomcat

    test.batch.names[frontend-client-extensions]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-db2111,\
        functional-upgrade-tomcat90-mariadb102,\
        functional-upgrade-tomcat90-mariadb104,\
        functional-upgrade-tomcat90-mariadb106,\
        functional-upgrade-tomcat90-mysql57,\
        functional-upgrade-tomcat90-oracle193,\
        functional-upgrade-tomcat90-postgresql134,\
        functional-upgrade-tomcat90-postgresql144,\
        functional-upgrade-tomcat90-postgresql153,\
        functional-upgrade-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-sqlserver2017,\
        js-unit,\
        modules-integration-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][frontend-client-extensions]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.upstream == true) AND \
        (testray.main.component.name ~ "Client Extensions")

    #
    # Frontend Data Set
    #

    test.batch.dist.app.servers[frontend-data-set]=tomcat

    test.batch.names[frontend-data-set]=\
        functional-tomcat90-mysql57,\
        js-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][frontend-data-set]=\
        (portal.upstream == true) AND \
        (testray.main.component.name ~ "Frontend Data Set")

    #
    # Frontend Developer Experience
    #

    test.batch.class.names.includes[frontend-dev-exp]=\
        **/portal-portlet-bridge/**/*Test.java,\
        **/portal-template-react-renderer-api/**/*Test.java,\
        **/portal-template-react-renderer-impl/**/*Test.java,\
        **/portal-template-soy-context-contributor/**/*Test.java,\
        **/portal-template-soy-impl/**/*Test.java,\
        **/portal-template-soy-renderer-api/**/*Test.java,\
        **/portal-template-soy-renderer-impl/**/*Test.java,\
        **/portal-tools-rest-builder/**/*Test.java,\
        **/portal-url-builder/**/*Test.java

    test.batch.dist.app.servers[frontend-dev-exp]=tomcat

    test.batch.names[frontend-dev-exp]=\
        functional-tomcat90-mysql57,\
        js-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][frontend-dev-exp]]=\
        (portal.upstream == true) AND \
        (testray.component.names ~ "User Interface")

    #
    # Frontend Infra
    #

    modules.includes[js-unit][frontend]=\
        apps/client-extension/**,\
        apps/frontend-data-set/**,\
        apps/frontend-js/**,\
        apps/map/**

    test.batch.class.names.includes[frontend]=\
        **/client-extension/**/*Test.java,\
        **/frontend-css/**/*Test.java,\
        **/frontend-data-set/**/*Test.java,\
        **/frontend-editor/**/*Test.java,\
        **/frontend-js/**/*Test.java,\
        **/frontend-taglib/**/*Test.java,\
        **/frontend-theme/**/*Test.java,\
        **/frontend-token/**/*Test.java,\
        **/portal-portlet-bridge/**/*Test.java,\
        **/portal-template-react-renderer-api/**/*Test.java,\
        **/portal-template-react-renderer-impl/**/*Test.java,\
        **/portal-template-soy-context-contributor/**/*Test.java,\
        **/portal-template-soy-impl/**/*Test.java,\
        **/portal-template-soy-renderer-api/**/*Test.java,\
        **/portal-template-soy-renderer-impl/**/*Test.java,\
        **/portal-url-builder/**/*Test.java,\
        /portal-web/docroot/html/**/*Test.java,\
        /util-taglib/**/*Test.java

    test.batch.dist.app.servers[frontend]=tomcat

    test.batch.names[frontend]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][frontend]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (\
            (testray.main.component.name ~ "AMD Loader") OR \
            (testray.main.component.name ~ "Client Extensions") OR \
            (testray.main.component.name ~ "Frontend Custom Dialog") OR \
            (testray.main.component.name ~ "Frontend Data Set") OR \
            (testray.main.component.name ~ "Frontend JS API") OR \
            (testray.main.component.name ~ "Theme") OR \
            (testray.main.component.name ~ "User Interface")\
        )

    test.batch.run.property.query[functional-upgrade-*][frontend]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name == "Upgrades Remote Apps")

    #
    # Frontend User Interface
    #

    test.batch.class.names.includes[frontend-ui]=\
        **/frontend-css/**/*Test.java,\
        **/frontend-editor/**/*Test.java,\
        **/frontend-js/**/*Test.java,\
        **/frontend-taglib/**/*Test.java,\
        **/frontend-theme/**/*Test.java,\
        /portal-web/docroot/html/**/*Test.java,\
        /util-taglib/**/*Test.java

    test.batch.dist.app.servers[frontend-ui]=tomcat

    test.batch.names[frontend-ui]=\
        functional-tomcat90-mysql57,\
        js-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][frontend-ui]]=\
        (portal.upstream == true) AND \
        (testray.component.names ~ "User Interface")

    #
    # Frontend Walkthrough
    #

    test.batch.class.names.includes[frontend-walkthrough]=\
        **/client-extension/**/*Test.java

    test.batch.dist.app.servers[frontend-walkthrough]=tomcat

    test.batch.names[frontend-walkthrough]=\
        functional-tomcat90-mysql57,\
        js-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][frontend-walkthrough]=\
        (portal.upstream == true) AND \
        (testray.component.names ~ "Walkthrough")

    #
    # Gauntlet
    #

    test.batch.names[gauntlet]=\
        ${test.batch.names},\
        blade-samples

    test.batch.run.property.query[functional-tomcat*-mysql*][gauntlet]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (license.required != true)  AND \
        (liferay.online.properties != true)  AND \
        (\
            (portal.hotfix.release == false) OR \
            (portal.hotfix.release == null)\
        ) AND \
        (portal.release == true)

    #
    # Gauntlet Bucket
    #

    test.batch.names[gauntlet-bucket]=\
        archived-module-smoke-mysql57,\
        archived-modules-test-mysql57,\
        blade-samples,\
        bundle-blacklist-restart-mysql57,\
        central-requirements,\
        compile-jsp,\
        empty-osgi-core-dir-mysql57,\
        functional-smoke-jboss74-mysql57,\
        functional-smoke-tomcat90-db2111,\
        functional-smoke-tomcat90-db2115,\
        functional-smoke-tomcat90-mariadb102,\
        functional-smoke-tomcat90-mysql57,\
        functional-smoke-tomcat90-mysql57-jdk11_open,\
        functional-smoke-tomcat90-mysql80,\
        functional-smoke-tomcat90-oracle193,\
        functional-smoke-tomcat90-postgresql121,\
        functional-smoke-tomcat90-postgresql134,\
        functional-smoke-tomcat90-postgresql144,\
        functional-smoke-tomcat90-postgresql153,\
        functional-smoke-tomcat90-postgresql163,\
        functional-smoke-tomcat90-sqlserver2017,\
        functional-smoke-tomcat90-sqlserver2019,\
        functional-smoke-tomcat90-sqlserver2022,\
        functional-smoke-weblogic141-mysql57,\
        functional-smoke-wildfly261-mariadb104,\
        functional-smoke-wildfly261-mariadb106,\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57,\
        gogo-shell-client-mysql57,\
        javadoc-test,\
        js-unit,\
        jsp-runtime-compile-mysql57,\
        lpkg-container-mysql57,\
        lpkg-controller-mysql57,\
        lpkg-override-mysql57,\
        lpkg-persistence-mysql57,\
        lpkg-startup-mysql57,\
        modules-compile,\
        modules-functional,\
        modules-integration-mysql57,\
        modules-integration-project-templates,\
        modules-semantic-versioning,\
        modules-unit,\
        modules-unit-project-templates,\
        patching-tool-mysql57,\
        portal-renamed-tomcat-in-path-mysql57,\
        portal-second-startup-space-in-path-mysql57,\
        portal-startup-space-in-path-mysql57,\
        poshi-validation,\
        release-osgi-state-exploded-test-mysql57,\
        release-osgi-state-lpkg-change-directory-test-mysql57,\
        release-osgi-state-lpkg-test-mysql57,\
        rest-builder,\
        ruby-sass-compiler,\
        semantic-versioning,\
        service-builder,\
        source-format,\
        tck,\
        unit

    test.batch.run.property.query[functional-tomcat*-mysql*][gauntlet-bucket]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (license.required != true)  AND \
        (liferay.online.properties != true)  AND \
        (\
            (portal.hotfix.release == false) OR \
            (portal.hotfix.release == null)\
        ) AND \
        (portal.release == true)

    #
    # Gradle Plugins
    #

    test.batch.dist.app.servers[gradle-plugins]=tomcat
    test.batch.names[gradle-plugins]=gradle-plugins-test

    #
    # Headless
    #

    headless.playwright.projects=\
        batch-planner,\
        dispatch-web,\
        export-import-web,\
        headless-builder-impl,\
        headless-builder-web,\
        layout-set-prototype-web,\
        portal-tools-rest-builder-test-impl,\
        staging-configuration-web

    playwright.projects.includes[playwright-js-tomcat90-mysql57][headless]=${headless.playwright.projects}

    test.batch.class.names.includes[modules-integration-*][headless]=\
        **/batch-engine/**/src/testIntegration/**/*Test.java,\
        **/batch-planner/**/src/testIntegration/**/*Test.java,\
        **/dispatch/**/src/testIntegration/**/*Test.java,\
        **/export-import/**/src/testIntegration/**/*Test.java,\
        **/headless/headless-batch-engine/**/src/testIntegration/**/*Test.java,\
        **/headless/headless-builder/**/src/testIntegration/**/*Test.java,\
        **/headless/headless-discovery/**/src/testIntegration/**/*Test.java,\
        **/layout-set-prototype-test/src/testIntegration/**/*Test.java,\
        **/object/object-rest-test/src/testIntegration/**/*Test.java,\
        **/portal-tools-rest-builder/src/testIntegration/**/*Test.java,\
        **/portal-vulcan/**/src/testIntegration/**/*Test.java,\
        **/src/testIntegration/**/staging/**/*Test.java,\
        **/staging/**/src/testIntegration/**/*Test.java

    test.batch.class.names.includes[modules-unit][headless]=\
        **/batch-engine/**/src/test/**/*Test.java,\
        **/batch-planner/**/src/test/**/*Test.java,\
        **/dispatch/**/src/test/**/*Test.java,\
        **/export-import/**/src/test/**/*Test.java,\
        **/headless/headless-batch-engine/**/src/test/**/*Test.java,\
        **/headless/headless-builder/**/src/test/**/*Test.java,\
        **/headless/headless-discovery/**/src/test/**/*Test.java,\
        **/object/object-rest-test/src/test/**/*Test.java,\
        **/portal-security-ldap-impl/**/LDAPUserImporterImplTest.java,\
        **/portal-tools-rest-builder/src/test/**/*Test.java,\
        **/portal-vulcan/**/src/test/**/*Test.java,\
        **/src/test/**/staging/**/*Test.java,\
        **/staging/**/src/test/**/*Test.java

    test.batch.dist.app.servers[headless]=tomcat

    test.batch.names[headless]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-unit,\
        playwright-js-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat*-mysql*][headless]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Upgrades Staging") OR \
            (testray.main.component.name == "API Builder") OR \
            (testray.main.component.name == "Connectors") OR \
            (testray.main.component.name == "Data Migration Center") OR \
            (testray.main.component.name == "Export/Import") OR \
            (testray.main.component.name == "Headless Batch Engine API") OR \
            (testray.main.component.name == "Headless Discovery Application") OR \
            (testray.main.component.name == "Job Scheduler") OR \
            (testray.main.component.name == "Object Entries REST APIs") OR \
            (testray.main.component.name == "REST Builder") OR \
            (testray.main.component.name == "REST Infrastructure") OR \
            (testray.main.component.name == "Site Templates") OR \
            (testray.main.component.name == "Staging") OR \
            (testray.main.component.name == "Upgrades Staging")\
        )

    #
    # Headless Acceptance
    #

    test.batch.class.names.includes[modules-integration-*][headless-acceptance]=\
        **/batch-engine/**/src/testIntegration/**/*Test.java,\
        **/batch-planner/**/src/testIntegration/**/*Test.java,\
        **/dispatch/**/src/testIntegration/**/*Test.java,\
        **/headless/headless-batch-engine/**/src/testIntegration/**/*Test.java,\
        **/headless/headless-builder/**/src/testIntegration/**/*Test.java,\
        **/headless/headless-discovery/**/src/testIntegration/**/*Test.java,\
        **/object/object-rest-test/**/src/testIntegration/**/*Test.java,\
        **/portal-tools-rest-builder/**/src/testIntegration/**/*Test.java,\
        **/portal-vulcan/**/src/testIntegration/**/*Test.java

    test.batch.class.names.includes[modules-unit][headless-acceptance]=\
        **/batch-engine/**/src/test/**/*Test.java,\
        **/batch-planner/**/src/test/**/*Test.java,\
        **/dispatch/**/src/test/**/*Test.java,\
        **/headless/headless-batch-engine/**/src/test/**/*Test.java,\
        **/headless/headless-builder/**/src/test/**/*Test.java,\
        **/headless/headless-discovery/**/src/test/**/*Test.java,\
        **/object/object-rest-test/**/src/test/**/*Test.java,\
        **/portal-tools-rest-builder/**/src/test/**/*Test.java,\
        **/portal-vulcan/**/src/test/**/*Test.java

    test.batch.dist.app.servers[headless-acceptance]=tomcat

    test.batch.names[headless-acceptance]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-unit,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][headless-acceptance]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance == true) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name == "API Builder") OR \
            (testray.main.component.name == "Connectors") OR \
            (testray.main.component.name == "Data Migration Center") OR \
            (testray.main.component.name == "Export/Import") OR \
            (testray.main.component.name == "Headless Batch Engine API") OR \
            (testray.main.component.name == "Headless Discovery Application") OR \
            (testray.main.component.name == "Job Scheduler") OR \
            (testray.main.component.name == "Object Entries REST APIs") OR \
            (testray.main.component.name == "REST Builder") OR \
            (testray.main.component.name == "REST Infrastructure")\
        )

    #
    # Headless Acceptance Vulcan and Commerce Only
    #

    test.batch.class.names.includes[vulcan-acceptance]=\
        **/portal-vulcan/**/*Test.java

    test.batch.dist.app.servers[vulcan-acceptance]=tomcat

    test.batch.names[vulcan-acceptance]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-unit,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][vulcan-acceptance]=\
        (portal.acceptance == true) AND \
        (\
            (testray.main.component.name ~ "Commerce") OR \
            (testray.main.component.name ~ "Order Management") OR \
            (testray.main.component.name ~ "Product Info Management") OR \
            (testray.main.component.name ~ "Shopping Experience")\
        )

    #
    # Headless Functional
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][headless-functional]=${headless.playwright.projects}

    test.batch.dist.app.servers[headless-functional]=tomcat

    test.batch.names[headless-functional]=\
        functional-tomcat90-mysql57,\
        playwright-js-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat*-mysql*][headless-functional]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (testray.component.names ~ "Upgrades Staging") OR \
            (testray.main.component.name == "API Builder") OR \
            (testray.main.component.name == "Connectors") OR \
            (testray.main.component.name == "Data Migration Center") OR \
            (testray.main.component.name == "Export/Import") OR \
            (testray.main.component.name == "Headless Batch Engine API") OR \
            (testray.main.component.name == "Headless Discovery Application") OR \
            (testray.main.component.name == "Job Scheduler") OR \
            (testray.main.component.name == "Object Entries REST APIs") OR \
            (testray.main.component.name == "REST Builder") OR \
            (testray.main.component.name == "REST Infrastructure") OR \
            (testray.main.component.name == "Site Templates") OR \
            (testray.main.component.name == "Staging") OR \
            (testray.main.component.name == "Upgrades Staging")\
        )

    #
    # Headless Playwright
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][headless-playwright]=${headless.playwright.projects}

    test.batch.dist.app.servers[headless-playwright]=tomcat

    test.batch.names[headless-playwright]=\
        playwright-js-tomcat90-mysql57

    #
    # Hotel
    #

    test.batch.class.names.includes[modules-unit][hotel]=\
        **/source-formatter/src/test/**/UpgradeSourceProcessorTest.java

    test.batch.dist.app.servers[hotel]=tomcat

    test.batch.names[hotel]=\
        modules-unit

    #
    # JDK 11
    #

    test.batch.dist.app.servers[jdk11]=\
        jboss,\
        tomcat,\
        wildfly

    test.batch.names[jdk11]=\
        functional-smoke-jboss74-mysql57-jdk11_open,\
        functional-smoke-tomcat90-db2111-jdk11_open,\
        functional-smoke-tomcat90-mariadb102-jdk11_open,\
        functional-smoke-tomcat90-mysql57-jdk11_open,\
        functional-smoke-tomcat90-mysql80-jdk11_open,\
        functional-smoke-tomcat90-oracle193-jdk11_open,\
        functional-smoke-tomcat90-postgresql134-jdk11_open,\
        functional-smoke-tomcat90-postgresql144-jdk11_open,\
        functional-smoke-tomcat90-postgresql153-jdk11_open,\
        functional-smoke-tomcat90-postgresql163-jdk11_open,\
        functional-smoke-tomcat90-sqlserver2017-jdk11_open,\
        functional-smoke-wildfly261-mariadb104-jdk11_open,\
        functional-smoke-wildfly261-mariadb106-jdk11_open,\
        functional-tomcat90-mysql57-jdk11_open,\
        functional-upgrade-jboss74-mysql57-jdk11_open,\
        functional-upgrade-tomcat90-db2111-jdk11_open,\
        functional-upgrade-tomcat90-mariadb102-jdk11_open,\
        functional-upgrade-tomcat90-mariadb104-jdk11_open,\
        functional-upgrade-tomcat90-mariadb106-jdk11_open,\
        functional-upgrade-tomcat90-mysql57-jdk11_open,\
        functional-upgrade-tomcat90-oracle193-jdk11_open,\
        functional-upgrade-tomcat90-postgresql134-jdk11_open,\
        functional-upgrade-tomcat90-postgresql144-jdk11_open,\
        functional-upgrade-tomcat90-postgresql153-jdk11_open,\
        functional-upgrade-tomcat90-postgresql163-jdk11_open,\
        functional-upgrade-tomcat90-sqlserver2017-jdk11_open,\
        functional-upgrade-wildfly261-mariadb102-jdk11_open,\
        modules-integration-db2111-jdk11_open,\
        modules-integration-hypersonic20-jdk11_open,\
        modules-integration-mariadb102-jdk11_open,\
        modules-integration-mysql57-jdk11_open,\
        modules-integration-oracle193-jdk11_open,\
        modules-integration-postgresql134-jdk11_open,\
        modules-integration-postgresql144-jdk11_open,\
        modules-integration-postgresql153-jdk11_open,\
        modules-integration-postgresql163-jdk11_open

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][jdk11]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open]}) OR \
        (portal.upstream ~ openjdk11)

    #
    # JDK 21
    #

    test.batch.dist.app.servers[jdk21]=\
        jboss,\
        tomcat,\
        weblogic,\
        wildfly

    test.batch.names[jdk21]=\
        functional-smoke-jboss74-mysql57-jdk21_zulu,\
        functional-smoke-weblogic141-mysql57-jdk21_zulu,\
        functional-smoke-wildfly261-mariadb106-jdk21_zulu,\
        functional-tomcat90-mysql57-jdk21_zulu,\
        functional-upgrade-tomcat90-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu,\
        modules-unit-jdk21_zulu,\
        unit-jdk21_zulu

    #
    # JDK 21 Functional
    #

    test.batch.dist.app.servers[jdk21-functional]=\
        jboss,\
        tomcat,\
        weblogic,\
        wildfly

    test.batch.names[jdk21-functional]=\
        functional-smoke-jboss74-mysql57-jdk21_zulu,\
        functional-smoke-weblogic141-mysql57-jdk21_zulu,\
        functional-smoke-wildfly261-mariadb106-jdk21_zulu,\
        functional-tomcat90-mysql57-jdk21_zulu,\
        functional-upgrade-tomcat90-mysql57-jdk21_zulu

    #
    # JDK 21 Integration
    #

    test.batch.dist.app.servers[jdk21-integration]=tomcat

    test.batch.names[jdk21-integration]=\
        modules-integration-mysql57-jdk21_zulu

    #
    # JDK 21 Unit
    #

    test.batch.dist.app.servers[jdk21-unit]=tomcat

    test.batch.names[jdk21-unit]=\
        modules-unit-jdk21_zulu,\
        unit-jdk21_zulu

    #
    # JSF
    #

    test.batch.dist.app.servers[jsf]=tomcat

    test.batch.names[jsf]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][jsf]=\
        (testray.main.component.name == "Liferay Faces")

    #
    # Kaleo Forms Admin
    #

    test.batch.class.names.includes[kaleo-forms]=\
        **/apps/portal-workflow/**/*Test.java,\
        **/dxp/apps/portal-workflow/**/*Test.java

    test.batch.dist.app.servers[kaleo-forms]=tomcat

    test.batch.names[kaleo-forms]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][kaleo-forms]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name == "Kaleo Forms Admin")

    #
    # LDAP
    #

    test.batch.class.names.includes[ldap]=\
        **/portal-security-ldap-api/**/*Test.java,\
        **/portal-security-ldap-impl/**/*Test.java,\
        **/portal-security-ldap-test/**/*Test.java

    test.batch.dist.app.servers[ldap]=tomcat

    test.batch.names[ldap]=${test.batch.names[security]}

    test.batch.run.property.query[functional-tomcat90-mysql57][ldap]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "LDAP") OR \
            (testray.main.component.name ~ "LDAP")\
        )

    #
    # License
    #

    dist.type[license]=release

    test.batch.dist.app.servers[license]=tomcat

    test.batch.names[license]=\
        empty-osgi-core-dir-mysql57,\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat*-mysql*][license]=\
        (\
            (license.required == true) AND \
            (testray.main.component.name != "Clustering")\
        ) OR \
        (\
            (\
                (app.server.types == null) OR \
                (app.server.types ~ tomcat)\
            ) AND \
            (\
                (database.types == null) OR \
                (database.types ~ mysql)\
            ) AND \
            (portal.smoke == true)\
        )

    #
    # License Cluster
    #

    dist.type[license-cluster]=release

    test.batch.dist.app.servers[license-cluster]=tomcat

    test.batch.names[license-cluster]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat*-mysql*][license-cluster]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (license.required == true) AND \
        (testray.main.component.name == "Clustering")

    #
    # Liferay OSB Site Initializer
    #

    test.batch.dist.app.servers[liferay-osb-site-initializer]=tomcat

    test.batch.names[liferay-osb-site-initializer]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][liferay-osb-site-initializer]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name ~ "OSB Site Initializer EVP")

    #
    # Liferay Sample Workspace
    #

    test.batch.dist.app.servers[liferay-sample-workspace]=tomcat

    test.batch.names[liferay-sample-workspace]=\
        functional-tomcat90-mysql57,\
        functional-workspaces-mysql57

    test.batch.run.property.query[functional-*-mysql57][liferay-sample-workspace]=\
        (testray.main.component.name == "Liferay Sample Workspace")

    #
    # Liferay Site Initializer
    #

    test.batch.dist.app.servers[liferay-site-initializer]=tomcat

    test.batch.names[liferay-site-initializer]=\
        functional-smoke-tomcat90-mysql57,\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57][liferay-site-initializer]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (liferay.online.smoke == "true")

    test.batch.run.property.query[functional-tomcat90-mysql57][liferay-site-initializer]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (liferay.online.smoke != true) AND \
        (\
            (testray.main.component.name ~ "Liferay Learn Site Initializer") OR \
            (testray.main.component.name ~ "Liferay Online") OR \
            (testray.main.component.name ~ "Liferaybotics") OR \
            (testray.main.component.name ~ "Masterclass") OR \
            (testray.main.component.name ~ "Site Initializer Liferay Marketplace") OR \
            (testray.main.component.name ~ "Site Initializer Raylife AP") OR \
            (testray.main.component.name ~ "Site Initializer Raylife D2C") OR \
            (testray.main.component.name ~ "Site Initializer Testray") OR \
            (testray.main.component.name ~ "Team Extranet")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][liferay-ite-initializer]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (data.archive.type == "data-archive-portal-partition")

    #
    # LPKG
    #

    test.batch.dist.app.servers[lpkg]=tomcat

    test.batch.names[lpkg]=\
        lpkg-container-mysql57,\
        lpkg-controller-mysql57,\
        lpkg-override-mysql57,\
        lpkg-persistence-mysql57,\
        lpkg-startup-mysql57

    #
    # Multi Factor Authentication
    #

    test.batch.class.names.includes[mfa]=\
        **/multi-factor-authentication/**/*Test.java

    test.batch.dist.app.servers[mfa]=tomcat

    test.batch.names[mfa]=${test.batch.names[security]}

    test.batch.run.property.query[functional-tomcat90-mysql57][mfa]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Multi Factor Authentication") OR \
            (testray.main.component.name ~ "Multi Factor Authentication")\
        )

    #
    # OAuth 2
    #

    test.batch.class.names.includes[oauth2]=\
        **/oauth-client/**/*Test.java,\
        **/oauth2-provider/**/*Test.java

    test.batch.dist.app.servers[oauth2]=tomcat

    test.batch.names[oauth2]=${test.batch.names[security]}

    test.batch.run.property.query[functional-tomcat90-mysql57][oauth2]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "OAuth 2") OR \
            (testray.main.component.name ~ "OAuth 2")\
        )

    #
    # Object
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][object]=\
        notification-web,\
        object-web

    test.batch.class.names.includes[modules-integration-*][object]=\
        **/list-type/**/src/testIntegration/**/*Test.java,\
        **/notification/**/src/testIntegration/**/*Test.java,\
        **/object/**/src/testIntegration/**/*Test.java

    test.batch.class.names.includes[modules-unit][object]=\
        **/list-type/**/src/test/**/*Test.java,\
        **/notification/**/src/test/**/*Test.java,\
        **/object/**/src/test/**/*Test.java

    test.batch.dist.app.servers[object]=tomcat

    test.batch.names[object]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mariadb102,\
        functional-upgrade-tomcat90-mysql57,\
        functional-upgrade-tomcat90-postgresql134,\
        functional-upgrade-tomcat90-sqlserver2017,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        playwright-js-tomcat90-mysql57,\
        semantic-versioning

    test.batch.run.property.query[functional-tomcat90-mysql57][object]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (\
            (testray.component.names ~ "Digital Signature") OR \
            (testray.component.names ~ "Object") OR \
            (testray.main.component.name ~ "Object")\
        )

    test.batch.run.property.query[functional-upgrade-*][object]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name == "Upgrades Object")

    #
    # Object Functional
    #

    test.batch.dist.app.servers[object-functional]=tomcat

    test.batch.names[object-functional]=\
        functional-tomcat90-mysql57,\
        source-format-current-branch

    test.batch.run.property.query[functional-tomcat90-mysql57][object-functional]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (\
            (testray.component.names == "Object") OR \
            (testray.main.component.name == "Object")\
        )

    #
    # Object Integration Tests With Different Databases
    #

    test.batch.class.names.includes[object-db-integration]=\
        **/object/**/src/testIntegration/**/*Test.java

    test.batch.dist.app.servers[object-db-integration]=tomcat

    test.batch.names[object-db-integration]=\
        modules-integration-db2111,\
        modules-integration-hypersonic20,\
        modules-integration-mariadb106,\
        modules-integration-mysql57,\
        modules-integration-mysql80,\
        modules-integration-oracle193,\
        modules-integration-postgresql121,\
        modules-integration-sqlserver2019

    #
    # Object With Database Partitioning
    #

    database.partition.enabled[object-db-partition]=true
    test.batch.dist.app.servers[object-db-partition]=tomcat

    test.batch.names[object-db-partition]=\
        functional-tomcat90-mysql57,\
        functional-tomcat90-mysql80

    test.batch.run.property.query[functional-tomcat90-mysql57][object-db-partition]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57][object]}

    #
    # Object With Different Application Server Environments
    #

    test.batch.dist.app.servers[object-as]=${test.batch.dist.app.servers}

    test.batch.names[object-as]=\
        functional-jboss74-mysql57,\
        functional-upgrade-jboss74-mysql57,\
        functional-upgrade-weblogic141-mysql57,\
        functional-weblogic141-mysql57,\
        functional-wildfly261-mysql57

    test.batch.run.property.query[functional-jboss*][object-as]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        ) AND \
        (testray.main.component.name == "Object")

    test.batch.run.property.query[functional-upgrade-jboss*][object-as]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        ) AND \
        (testray.main.component.name == "Upgrades Object")

    test.batch.run.property.query[functional-weblogic*-mysql57][object-as]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ weblogic)\
        ) AND \
        (testray.main.component.name == "Object")

    test.batch.run.property.query[functional-wildfly*][object-as]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ wildfly)\
        ) AND \
        (testray.main.component.name == "Object")

    #
    # Object With Different Database Environments
    #

    test.batch.class.names.includes[object-db]=${test.batch.class.names.includes[object]}
    test.batch.dist.app.servers[object-db]=tomcat

    test.batch.names[object-db]=\
        functional-tomcat90-db2111,\
        functional-tomcat90-hypersonic20,\
        functional-tomcat90-mariadb106,\
        functional-tomcat90-mysql80,\
        functional-tomcat90-oracle193,\
        functional-tomcat90-postgresql121,\
        functional-tomcat90-sqlserver2019,\
        functional-upgrade-tomcat90-db2111,\
        functional-upgrade-tomcat90-mariadb102,\
        functional-upgrade-tomcat90-oracle193,\
        functional-upgrade-tomcat90-postgresql144,\
        functional-upgrade-tomcat90-postgresql153,\
        functional-upgrade-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-sqlserver2017,\
        modules-integration-db2111,\
        modules-integration-hypersonic20,\
        modules-integration-mariadb106,\
        modules-integration-oracle193,\
        modules-integration-postgresql121,\
        modules-integration-sqlserver2019

    test.batch.run.property.query[functional-tomcat90-db2111][object-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        ) AND \
        (testray.main.component.name == "Object")

    test.batch.run.property.query[functional-tomcat90-hypersonic20][object-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ hypersonic)\
        ) AND \
        (testray.main.component.name == "Object")

    test.batch.run.property.query[functional-tomcat90-mariadb*][object-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (testray.main.component.name == "Object")

    test.batch.run.property.query[functional-tomcat90-oracle193][object-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        ) AND \
        (testray.main.component.name == "Object")

    test.batch.run.property.query[functional-tomcat90-postgresql121][object-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (testray.main.component.name == "Object")

    test.batch.run.property.query[functional-tomcat90-sqlserver2019][object-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ sqlserver)\
        ) AND \
        (testray.main.component.name == "Object")

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111][object-db]=\
        (database.types ~ db2) AND \
        (testray.main.component.name == "Upgrades Object")

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][object-db]=\
        (database.types ~ mariadb) AND \
        (testray.main.component.name == "Upgrades Object")

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][object-db]=\
        (database.types ~ oracle) AND \
        (testray.main.component.name == "Upgrades Object")

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][object-db]=\
        (database.types ~ postgresql) AND \
        (testray.main.component.name == "Upgrades Object")

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][object-db]=\
        (database.types ~ sqlserver) AND \
        (testray.main.component.name == "Upgrades Object")

    #
    # Object With Liferay Experience Cloud Configurations
    #

    liferay.online.properties[object-lxc]=true
    test.batch.dist.app.servers[object-lxc]=tomcat

    test.batch.names[object-lxc]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][object-lxc]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57][object]}) AND \
        (test.liferay.virtual.instance != false)

    #
    # OneDrive
    #

    test.batch.class.names.includes[onedrive]=\
        **/document-library-opener-onedrive-web/**/*Test.java

    test.batch.dist.app.servers[onedrive]=tomcat

    test.batch.names[onedrive]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][onedrive]=\
        (testray.component.names ~ "OneDrive")

    #
    # OpenID Connect
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][oidc]=\
        openid-link

    test.batch.class.names.includes[oidc]=\
        **/portal-security-sso/**/*Test.java

    test.batch.dist.app.servers[oidc]=tomcat

    test.batch.names[oidc]=${test.batch.names[security]}

    test.batch.run.property.query[functional-tomcat90-mysql57][oidc]=\
        (portal.upstream == "true") AND \
        (\
            (testray.component.names ~ "OpenID Connect") OR \
            (testray.main.component.name ~ "OpenID Connect")\
        )

    #
    # Page Management
    #

    modules.excludes[modules-semantic-versioning][page-management]=\
        apps/layout/layout-set-prototype-web

    modules.excludes.public[modules-semantic-versioning][page-management]=\
        apps/layout/layout-set-prototype-web

    modules.includes[js-unit][page-management]=${page.management.testing.modules}

    modules.includes[modules-semantic-versioning][page-management]=${page.management.testing.modules}

    modules.includes.public[modules-semantic-versioning][page-management]=${page.management.testing.modules}

    page.management.playwright.projects=\
        fragment-web,\
        iframe-web,\
        layout-admin-web,\
        layout-content-page-editor-web,\
        layout-locked-layouts-web,\
        layout-page-template-admin-web,\
        nested-portlets-web,\
        portlet-configuration-css-web,\
        rss-web,\
        site-navigation-language-web,\
        template-web

    page.management.testing.modules=\
        apps/asset/asset-display-**,\
        apps/fragment/**,\
        apps/info/info-**,\
        apps/layout/layout-**,\
        apps/nested-portlets/**,\
        apps/portlet-configuration/**,\
        apps/portlet-display-template/**,\
        apps/rss/**,\
        apps/segments/segments-api/**,\
        apps/site-navigation/site-navigation-language-**,\
        apps/template/**

    playwright.projects.includes[playwright-js-tomcat90-postgresql155][page-management]=${page.management.playwright.projects}

    test.batch.class.names.excludes[page-management]=\
        **/journal-test/**/*Test.java,\
        **/layout-set-prototype-**/**/*Test.java,\
        **/portal-fragment-bundle-watcher-test/**/*Test.java

    test.batch.class.names.includes[page-management]=\
        **/asset/asset-display-page-**/**/*Test.java,\
        **/fragment/**/*Test.java,\
        **/headless/headless-admin-site/**/*Test.java,\
        **/headless/headless-delivery/**/*SitePage*Test.java,\
        **/iframe/iframe-web/**/*Test.java,\
        **/info/info-**/**/*Test.java,\
        **/layout/layout-**/**/*Test.java,\
        **/map/map-google-maps/**/*Test.java,\
        **/nested-portlets/**/*Test.java,\
        **/portlet-configuration/**/*Test.java,\
        **/portlet-display-template/**/*Test.java,\
        **/rss/**/*Test.java,\
        **/segments-test/**/*SegmentsExperience*Test.java,\
        **/site-navigation/site-navigation-language-**/**/*Test.java,\
        **/template-test/**/*Test.java

    test.batch.dist.app.servers[page-management]=tomcat

    test.batch.names[page-management]=\
        functional-tomcat90-postgresql155,\
        js-unit,\
        modules-integration-postgresql155,\
        modules-semantic-versioning,\
        modules-unit,\
        playwright-js-tomcat90-postgresql155

    test.batch.run.property.query[functional-tomcat90-postgresql155][page-management]=\
        (\
            (testray.main.component.name == "Content Pages") OR \
            (testray.main.component.name == "Display Page Templates") OR \
            (testray.main.component.name == "Fragment Administration") OR \
            (testray.main.component.name == "Master Pages") OR \
            (testray.main.component.name == "Page Administration")\
        )

    #
    # Page Management Playwright
    #

    playwright.projects.includes[playwright-js-tomcat90-postgresql155][page-management-playwright]=${page.management.playwright.projects}

    test.batch.dist.app.servers[page-management-playwright]=tomcat

    test.batch.names[page-management-playwright]=\
        playwright-js-tomcat90-postgresql155

    #
    # Password Policies
    #

    test.batch.class.names.includes[password-policies]=\
        **/password-policies-admin-test/**/*Test.java,\
        **/password-policies-admin-uad-test/**/*Test.java

    test.batch.dist.app.servers[password-policies]=tomcat

    test.batch.names[password-policies]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][password-policies]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Password Policies") OR \
            (testray.main.component.name ~ "Password Policies")\
        )

    #
    # Platform Experience
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][platform-experience]=\
        configuration-admin-web,\
        feature-flag-web,\
        portal-language-override-web,\
        style-book-web

    test.batch.class.names.includes[platform-experience]=\
        **/feature-flag/**/*Test.java,\
        **/frontend-css/**/*Test.java,\
        **/frontend-taglib/**/*Test.java,\
        **/frontend-theme/**/*Test.java,\
        **/portal-instances/**/*Test.java,\
        **/portal-language-override-test/**/*Test.java,\
        **/product-navigation/**/*Test.java,\
        **/style-book/**/*Test.java

    test.batch.dist.app.servers[platform-experience]=tomcat

    test.batch.names[platform-experience]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-unit,\
        playwright-js-tomcat90-mysql57,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][platform-experience]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (\
            (testray.main.component.name ~ "Accessibility Framework") OR \
            (testray.main.component.name ~ "Accessibility Menu") OR \
            (testray.main.component.name ~ "Clay") OR \
            (testray.main.component.name ~ "Feature Flag") OR \
            (testray.main.component.name ~ "Instance Settings") OR \
            (testray.main.component.name ~ "Language Override") OR \
            (testray.main.component.name ~ "Style Books") OR \
            (testray.main.component.name ~ "System Settings") OR \
            (testray.main.component.name ~ "Theme")\
        )

    #
    # Platform Experience Acceptance
    #

    test.batch.class.names.includes[platform-experience-acceptance]=\
        **/feature-flag/**/*Test.java,\
        **/frontend-css/**/*Test.java,\
        **/frontend-taglib/**/*Test.java,\
        **/frontend-theme/**/*Test.java,\
        **/portal-instances/**/*Test.java,\
        **/portal-language-override-test/**/*Test.java,\
        **/product-navigation/**/*Test.java,\
        **/style-book/**/*Test.java

    test.batch.dist.app.servers[platform-experience-acceptance]=tomcat

    test.batch.names[platform-experience-acceptance]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][platform-experience-acceptance]=\
        (\
            (portal.acceptance == true) AND \
            (portal.upstream == true)\
        ) AND \
        (\
            (testray.main.component.name ~ "Accessibility Framework") OR \
            (testray.main.component.name ~ "Accessibility Menu") OR \
            (testray.main.component.name ~ "Clay") OR \
            (testray.main.component.name ~ "Control Menu") OR \
            (testray.main.component.name ~ "Feature Flag") OR \
            (testray.main.component.name ~ "Instance Settings") OR \
            (testray.main.component.name ~ "Language Override") OR \
            (testray.main.component.name ~ "Product Menu") OR \
            (testray.main.component.name ~ "Style Books") OR \
            (testray.main.component.name ~ "System Settings") OR \
            (testray.main.component.name ~ "Theme")\
        )

    #
    # Platform Experience Accessibility
    #

    test.batch.dist.app.servers[platform-experience-accessibility]=tomcat

    test.batch.names[platform-experience-accessibility]=\
        functional-tomcat90-mysql57,\
        js-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][platform-experience-accessibility]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.accessibility == true)\
        ) AND \
        (testray.component.names ~ "Accessibility Framework")

    #
    # Platform Experience Configuration Framework
    #

    test.batch.class.names.includes[configuration-framework]=\
        **/feature-flag/**/*Test.java,\
        **/portal-instances/**/*Test.java,\
        **/portal-language-override-test/**/*Test.java

    test.batch.dist.app.servers[configuration-framework]=tomcat

    test.batch.names[configuration-framework]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][configuration-framework]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (\
            (testray.main.component.name ~ "Feature Flag") OR \
            (testray.main.component.name ~ "Instance Settings") OR \
            (testray.main.component.name ~ "Language Override") OR \
            (testray.main.component.name ~ "System Settings")\
        )

    #
    # Platform Experience Database Partition
    #

    database.partition.enabled[platform-experience-db-partition]=true

    test.batch.class.names.includes[platform-experience-db-partition]=\
        **/product-navigation/**/*Test.java

    #
    # Platform Experience Navigation Framework
    #

    test.batch.class.names.includes[navigation-framework]=\
        **/application-list/**/*Test.java,\
        **/product-navigation-control-panel/**/*Test.java

    test.batch.dist.app.servers[navigation-framework]=tomcat

    test.batch.names[navigation-framework]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-unit

    test.batch.run.property.query[functional-tomcat90-mysql57][navigation-framework]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (\
            (testray.main.component.name ~ "Control Menu") OR \
            (testray.main.component.name ~ "Product Menu")\
        )

    #
    # Playwright
    #

    test.batch.dist.app.servers[playwright]=tomcat

    test.batch.names[playwright]=\
        playwright-compile,\
        playwright-js-tomcat90-mysql57

    #
    # Plugins Extra Apps
    #

    test.batch.names[test-plugins-extraapps]=\
        functional-jboss74-mysql57,\
        functional-tomcat90-mysql57,\
        functional-tomcat90-postgresql121,\
        functional-weblogic141-oracle122,\
        functional-wildfly261-mariadb104,\
        functional-wildfly261-mariadb106

    test.batch.names[test-plugins-extraapps][release]=\
        functional-jboss-mysql57,\
        functional-tomcat-mysql57,\
        functional-tomcat-postgresql10,\
        #functional-weblogic141-oracle122,\
        functional-wildfly-mysql57

    test.batch.run.property.query[test-plugins-extraapps][functional-*]=\
        portal.smoke == true

    #
    # Plugins Marketplace App
    #

    test.batch.names[test-plugins-marketplaceapp]=\
        functional-marketplaceapp-smoke-tomcat-mysql57

    test.batch.names[test-plugins-marketplaceapp][liferay]=\
        ${test.batch.names[test-plugins-marketplaceapp]},\
        functional-tomcat-mysql57

    test.batch.run.property.query[test-plugins-marketplaceapp][functional-marketplaceapp-smoke-tomcat-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (marketplace.app.acceptance == true)

    test.batch.run.property.query[test-plugins-marketplaceapp][functional-tomcat-mysql57]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (marketplace.app.acceptance == true) OR \
            (portal.acceptance == true)\
        )

    #
    # Portal App Release
    #

    test.batch.names[test-portal-app-release]=\
        functional-tomcat-hypersonic20-jdk21_zulu,\
        functional-tomcat-mariadb102-jdk21_zulu,\
        functional-tomcat-mysql57-jdk21_zulu,\
        functional-tomcat-postgresql121-jdk21_zulu,\
        functional-wildfly-mysql57-jdk21_zulu

    test.batch.names[test-portal-app-release][dxp]=\
        ${test.batch.names[test-portal-app-release]},\
        functional-jboss-mysql57-jdk21_zulu,\
        functional-tomcat-db2111-jdk21_zulu,\
        functional-tomcat-db2115-jdk21_zulu,\
        functional-tomcat-mysql57-jdk17_open,\
        functional-tomcat-oracle193-jdk21_zulu,\
        functional-weblogic141-mysql57-jdk21_zulu

    test.batch.run.property.query[test-portal-app-release][functional-*]=\
        portal.smoke == true

    #
    # Portal Context Path
    #

    portal.context[portal-context-path]=liferay
    skip.clean-app-server-deploy-dir[portal-context-path]=true
    test.batch.dist.app.servers[portal-context-path]=tomcat

    test.batch.names[portal-context-path]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][portal-context-path]=\
        environment.acceptance == true

    #
    # Portal Fixpack Release
    #

    test.batch.names[portal-fixpack-release]=\
        functional-smoke-jboss-mysql57-jdk21_zulu,\
        functional-smoke-tomcat-db2111-jdk21_zulu,\
        functional-smoke-tomcat-db2115-jdk21_zulu,\
        functional-smoke-tomcat-hypersonic20-jdk21_zulu,\
        functional-smoke-tomcat-mariadb102-jdk21_zulu,\
        functional-smoke-tomcat-mysql57-jdk17_open,\
        functional-smoke-tomcat-oracle193-jdk21_zulu,\
        functional-smoke-tomcat-postgresql134-jdk21_zulu,\
        functional-smoke-tomcat-postgresql144-jdk21_zulu,\
        functional-smoke-tomcat-postgresql153-jdk21_zulu,\
        functional-smoke-tomcat-postgresql163-jdk21_zulu,\
        functional-smoke-weblogic141-mysql57-jdk21_zulu,\
        functional-smoke-wildfly-mysql57-jdk21_zulu,\
        functional-tomcat-mysql57-jdk17_open,\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu,\
        patching-tool-custom-scripts

    test.batch.names.smoke[portal-fixpack-release]=\
        functional-smoke-tomcat-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-jboss-mysql57-jdk21_zulu][portal-fixpack-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ jboss) AND \
            (\
                (database.types == null) OR \
                (database.types ~ mysql)\
            ) AND \
            (\
                (portal.fixpack.release == true) OR \
                (portal.release == true)\
            )\
        )

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-fixpack-release]=\
        ${test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu]}

    test.batch.run.property.query[functional-tomcat-db2111-jdk21_zulu][portal-fixpack-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ db2) AND \
            (\
                (portal.fixpack.release == true) OR \
                (portal.release == true)\
            )\
        )

    test.batch.run.property.query[functional-tomcat-db2115-jdk21_zulu][portal-fixpack-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ db2) AND \
            (\
                (portal.fixpack.release == true) OR \
                (portal.release == true)\
            )\
        )

    test.batch.run.property.query[functional-tomcat-hypersonic20-jdk21_zulu][portal-fixpack-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (\
                (database.types == null) OR \
                (database.types ~ hypersonic)\
            ) AND \
            (\
                (portal.fixpack.release == true) OR \
                (portal.release == true)\
            )\
        )

    test.batch.run.property.query[functional-tomcat-mariadb102-jdk21_zulu][portal-fixpack-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ mariadb) AND \
            (\
                (portal.fixpack.release == true) OR \
                (portal.release == true)\
            )\
        )

    test.batch.run.property.query[functional-tomcat-mysql57-jdk17_open][portal-fixpack-release]=\
        (portal.release ~ openjdk11)

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-fixpack-release]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.fixpack.release == true) OR \
            (portal.release == true)\
        ) AND \
        (\
            (portal.hotfix.release == false) OR \
            (portal.hotfix.release == null)\
        )

    test.batch.run.property.query[functional-tomcat-oracle193-jdk21_zulu][portal-fixpack-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ oracle) AND \
            (\
                (portal.fixpack.release == true) OR \
                (portal.release == true)\
            )\
        )

    test.batch.run.property.query[functional-tomcat-postgresql*-jdk21_zulu][portal-fixpack-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ postgresql) AND \
            (\
                (portal.fixpack.release == true) OR \
                (portal.release == true)\
            )\
        )

    test.batch.run.property.query[functional-weblogic141-mysql57-jdk21_zulu][portal-fixpack-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ weblogic) AND \
            (\
                (database.types == null) OR \
                (database.types ~ mysql)\
            ) AND \
            (\
                (portal.fixpack.release == true) OR \
                (portal.release == true)\
            )\
        )

    test.batch.run.property.query[functional-wildfly-mysql57-jdk21_zulu][portal-fixpack-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ wildfly) AND \
            (\
                (database.types == null) OR \
                (database.types ~ mysql)\
            ) AND \
            (\
                (portal.fixpack.release == true) OR \
                (portal.release == true)\
            )\
        )

    test.release.bundle[portal-fixpack-release]=true

    #
    # Portal Fixpack Release Backend
    #

    test.batch.names[portal-fixpack-release-backend]=\
        modules-integration-mysql57-jdk21_zulu

    test.release.bundle[portal-fixpack-release-backend]=true

    #
    # Portal Fixpack Release Functional
    #

    test.batch.names[portal-fixpack-release-functional]=\
        functional-tomcat-mysql57-jdk21_zulu

    test.batch.names.smoke[portal-fixpack-release-functional]=\
        ${test.batch.names.smoke[portal-fixpack-release]}

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-fixpack-release-functional]=\
        ${test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-fixpack-release]}

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-fixpack-release-functional]=\
        ${test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-fixpack-release]}

    test.release.bundle[portal-fixpack-release-functional]=true

    #
    # Portal Fixpack Release Smoke
    #

    test.batch.names.smoke[portal-fixpack-release-smoke]=\
        ${test.batch.names.smoke[portal-fixpack-release]}

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-fixpack-release-smoke]=\
        ${test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-fixpack-release]}

    test.release.bundle[portal-fixpack-release-smoke]=true

    #
    # Portal Fixpack Release Tomcat
    #

    test.batch.names[portal-fixpack-release-tomcat]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu,\
        patching-tool-custom-scripts

    test.batch.names.smoke[portal-fixpack-release-tomcat]=\
        ${test.batch.names.smoke[portal-fixpack-release]}

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-fixpack-release-tomcat]=\
        ${test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-fixpack-release]}

    test.release.bundle[portal-fixpack-release-tomcat]=true

    #
    # Portal Hotfix Release
    #

    test.batch.names[portal-hotfix-release]=\
        functional-smoke-jboss-mysql57-jdk21_zulu,\
        functional-smoke-tomcat-db2111-jdk21_zulu,\
        functional-smoke-tomcat-db2115-jdk21_zulu,\
        functional-smoke-tomcat-hypersonic20-jdk21_zulu,\
        functional-smoke-tomcat-mariadb102-jdk21_zulu,\
        functional-smoke-tomcat-mysql57-jdk17_open,\
        functional-smoke-tomcat-oracle193-jdk21_zulu,\
        functional-smoke-tomcat-postgresql134-jdk21_zulu,\
        functional-smoke-tomcat-postgresql144-jdk21_zulu,\
        functional-smoke-tomcat-postgresql153-jdk21_zulu,\
        functional-smoke-tomcat-postgresql163-jdk21_zulu,\
        functional-smoke-weblogic141-mysql57-jdk21_zulu,\
        functional-smoke-wildfly-mysql57-jdk21_zulu,\
        functional-tomcat-mysql57-jdk21_zulu,\
        patching-tool-custom-scripts

    test.batch.names.smoke[portal-hotfix-release]=\
        functional-smoke-tomcat-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-hotfix-release]=\
        ${test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu]}

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-hotfix-release]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.hotfix.release == true)

    test.release.bundle[portal-hotfix-release]=true

    #
    # Portal Hotfix Release Functional
    #

    test.batch.names[portal-hotfix-release-functional]=\
        functional-tomcat-mysql57-jdk21_zulu

    test.batch.names.smoke[portal-hotfix-release-functional]=\
        ${test.batch.names.smoke[portal-hotfix-release]}

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-hotfix-release-functional]=\
        ${test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-hotfix-release]}

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-hotfix-release-functional]=\
        ${test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-hotfix-release]}

    test.release.bundle[portal-hotfix-release-functional]=true

    #
    # Portal Hotfix Release Smoke
    #

    test.batch.names.smoke[portal-hotfix-release-smoke]=\
        ${test.batch.names.smoke[portal-hotfix-release]}

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-hotfix-release-smoke]=\
        ${test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-hotfix-release]}

    test.release.bundle[portal-hotfix-release-smoke]=true

    #
    # Portal Hotfix Release Tomcat
    #

    test.batch.names[portal-hotfix-release-tomcat]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        patching-tool-custom-scripts

    test.batch.names.smoke[portal-hotfix-release-tomcat]=\
        ${test.batch.names.smoke[portal-hotfix-release]}

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-hotfix-release-tomcat]=\
        ${test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-hotfix-release]}

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-hotfix-release-tomcat]=\
        ${test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-hotfix-release]}

    test.release.bundle[portal-hotfix-release-tomcat]=true

    #
    # Portal Proxy Path
    #

    portal.proxy.path[portal-proxy-path]=liferay
    skip.clean-app-server-deploy-dir[portal-proxy-path]=true
    test.batch.dist.app.servers[portal-proxy-path]=tomcat

    test.batch.names[portal-proxy-path]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][portal-proxy-path]=\
        environment.acceptance == true

    #
    # Portal Release
    #

    test.batch.class.names.excludes[modules-integration-sqlserver*][test-portal-release]=\
        ${test.batch.class.names.excludes},\
        **/change/tracking/**/*Test.java,\
        **/portal-file-install-test/**/FileInstallCfgTest.java

    test.batch.class.names.excludes[test-portal-release]=\
        ${test.batch.class.names.excludes},\
        **/commerce-qualifier-test/**/CommerceQualifierEntryPersistenceTest.java,\
        **/portal-file-install-test/**/FileInstallCfgTest.java,\
        **/site-initializer-extender-test/**/BundleSiteInitializerTest.java

    test.batch.names[portal-release][dxp]=\
        ${test.batch.names[portal-release][portal]},\
        #        functional-alpine310-tomcat90-mysql57,\
#        functional-amazonlinux2-tomcat90-mysql57,\
#        functional-amazonlinux2022-tomcat90-mysql57,\
#        functional-centos8-tomcat90-mysql57,\
#        functional-fedora35-tomcat90-mysql57,\
        functional-jboss74-mysql57-jdk21_zulu,\
        #        functional-orcllinux7-tomcat90-mysql57,\
#        functional-orcllinux8-tomcat90-mysql57,\
#        functional-orcllinux9-tomcat90-mysql57,\
#        functional-redhat8-tomcat90-mysql57,\
#        functional-redhat9-tomcat90-mysql57,\
#        functional-rockylinux91-tomcat90-mysql57,\
#        functional-suse15-tomcat90-mysql57,\
        functional-tomcat-db2111-jdk21_zulu,\
        functional-tomcat-db2115-jdk21_zulu,\
        functional-tomcat-mariadb104-jdk21_zulu,\
        functional-tomcat-mariadb106-jdk21_zulu,\
        functional-tomcat-oracle193-jdk21_zulu,\
        functional-tomcat-postgresql134-jdk21_zulu,\
        functional-tomcat-postgresql144-jdk21_zulu,\
        functional-tomcat-postgresql153-jdk21_zulu,\
        functional-tomcat-postgresql163-jdk21_zulu,\
        functional-tomcat-sqlserver2017-jdk21_zulu,\
        functional-tomcat-sqlserver2019-jdk21_zulu,\
        functional-tomcat-sqlserver2022-jdk21_zulu,\
        functional-weblogic141-mysql57-jdk21_zulu,\
        functional-wildfly261-mysql57-jdk21_zulu,\
        modules-integration-db2111-jdk21_zulu,\
        modules-integration-hypersonic20-jdk21_zulu,\
        modules-integration-mariadb102-jdk21_zulu,\
        modules-integration-mysql57-jdk17_open,\
        modules-integration-mysql57-jdk21_zulu,\
        modules-integration-oracle193-jdk21_zulu,\
        modules-integration-postgresql121-jdk21_zulu,\
        modules-integration-sqlserver2017-jdk21_zulu,\
        portal-renamed-tomcat-in-path-mysql57-jdk21_zulu,\
        portal-startup-space-in-path-mysql57-jdk21_zulu

    test.batch.names[portal-release][portal]=\
        empty-osgi-core-dir-mysql57-jdk21_zulu,\
        functional-smoke-wildfly261-mysql57-jdk21_zulu,\
        functional-tomcat-hypersonic20-jdk21_zulu,\
        functional-tomcat-mariadb102-jdk21_zulu,\
        functional-tomcat-mysql57-jdk17_open,\
        functional-tomcat-mysql57-jdk21_zulu,\
        functional-tomcat-mysql80-jdk21_zulu,\
        functional-tomcat-postgresql121-jdk21_zulu,\
        #        functional-ubuntu18-tomcat90-mysql57,\
        patching-tool-mysql57,\
        playwright-js-tomcat90-mysql57-jdk21_zulu

    test.batch.names.smoke[portal-release]=\
        functional-smoke-tomcat-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-alpine310-tomcat90-mysql57][portal-release]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-amazonlinux*-tomcat90-mysql57][portal-release]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-centos8-tomcat90-mysql57][portal-release]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-fedora35-tomcat90-mysql57][portal-release]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-jboss74-mysql57-jdk21_zulu][portal-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ jboss) AND \
            (\
                (database.types == null) OR \
                (database.types ~ mysql)\
            ) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-orcllinux*][portal-release]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-redhat8-tomcat90-mysql57][portal-release]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-redhat9-tomcat90-mysql57][portal-release]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-rockylinux*][portal-release]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-release]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-suse15-tomcat90-mysql57][portal-release]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-tomcat-db2111-jdk21_zulu][portal-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ db2) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-tomcat-db2115-jdk21_zulu][portal-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ db2) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        ) AND \
        (data.archive.type == null)

    test.batch.run.property.query[functional-tomcat-hypersonic20-jdk21_zulu][portal-release][dxp]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (\
                (database.types == null) OR \
                (database.types ~ hypersonic)\
            ) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-tomcat-hypersonic20-jdk21_zulu][portal-release][portal]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-tomcat-mariadb10*-jdk21_zulu][portal-release][dxp]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ mariadb) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-tomcat-mariadb10*-jdk21_zulu][portal-release][portal]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-tomcat-mysql57-jdk17_open][portal-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (\
                (database.types == null) OR \
                (database.types ~ mysql)\
            ) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release][dxp]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.hotfix.release == false) OR \
            (portal.hotfix.release == null)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.release == true) AND \
        (portal.upstream != quarantine)

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release][portal]=\
        (portal.smoke == true) OR \
        (\
            (\
                (app.server.types == null) OR \
                (app.server.types ~ tomcat)\
            ) AND \
            (\
                (database.types == null) OR \
                (database.types ~ mysql)\
            ) AND \
            (portal.smoke.upgrades == true)\
        )

    test.batch.run.property.query[functional-tomcat-mysql80-jdk21_zulu][portal-release][dxp]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (\
                (database.types == null) OR \
                (database.types ~ mysql)\
            ) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        ) AND \
        (database.partition.enabled == null) AND \
        (testray.main.component.name != "Database Partitioning")

    test.batch.run.property.query[functional-tomcat-mysql80-jdk21_zulu][portal-release][portal]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-tomcat-oracle193-jdk21_zulu][portal-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ oracle) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-tomcat-postgresql121-jdk21_zulu][portal-release][dxp]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ postgresql) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-tomcat-postgresql121-jdk21_zulu][portal-release][portal]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-tomcat-postgresql*][portal-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ postgresql) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-tomcat-sqlserver2017-jdk21_zulu][portal-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ sqlserver) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-tomcat-sqlserver2019-jdk21_zulu][portal-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ sqlserver) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-tomcat-sqlserver2022-jdk21_zulu][portal-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ sqlserver) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-ubuntu18-tomcat90-mysql57][portal-release]=\
        (portal.smoke == true)

    test.batch.run.property.query[functional-weblogic141-mysql57-jdk21_zulu][portal-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ weblogic) AND \
            (\
                (database.types == null) OR \
                (database.types ~ mysql)\
            ) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.batch.run.property.query[functional-wildfly261-mysql57-jdk21_zulu][portal-release]=\
        (\
            (environment.acceptance == true) AND \
            (portal.release == true)\
        ) OR \
        (\
            (app.server.types ~ wildfly) AND \
            (\
                (database.types == null) OR \
                (database.types ~ mysql)\
            ) AND \
            (portal.acceptance != quarantine) AND \
            (portal.release == true) AND \
            (portal.upstream != quarantine)\
        )

    test.release.bundle[portal-release]=true

    test.release.post.startup.dependency.modules=\
        apps/commerce

    #
    # Portal Release Acceptance
    #

    test.batch.dist.app.servers[portal-release-acceptance]=tomcat

    test.batch.names[portal-release-acceptance]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu,\
        playwright-js-tomcat90-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-acceptance]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.acceptance == true) AND \
            (portal.release == true)\
        )

    #
    # Portal Release Backend
    #

    test.batch.names[portal-release-backend]=\
        modules-integration-mysql57-jdk21_zulu

    test.release.bundle[portal-release-backend]=true

    #
    # Portal Release Commerce
    #

    test.batch.class.names.includes[modules-integration-mysql57-jdk21_zulu][portal-release-commerce]=\
        ${test.batch.class.names.includes[commerce]}

    test.batch.dist.app.servers[portal-release-commerce]=\
        ${test.batch.dist.app.servers[commerce]}

    test.batch.names[portal-release-commerce]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-commerce]=\
        (${test.batch.run.property.query[functional-tomcat*-mysql*][commerce]}) AND \
        (portal.release == true)

    #
    # Portal Release Data Engine
    #

    test.batch.class.names.includes[modules-integration-mysql57-jdk21_zulu][portal-release-data-engine]=\
        ${test.batch.class.names.includes[data-engine]}

    test.batch.dist.app.servers[portal-release-data-engine]=\
        ${test.batch.dist.app.servers[data-engine]}

    test.batch.names[portal-release-data-engine]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-data-engine]=\
        (\
            (${test.batch.run.property.query[functional-tomcat90-mysql57][data-engine]}) OR \
            (${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57]})\
        ) AND \
        (portal.release == true)

    #
    # Portal Release Forms
    #

    test.batch.class.names.includes[modules-integration-mysql57-jdk21_zulu][portal-release-forms]=\
        ${test.batch.class.names.includes[forms]}

    test.batch.dist.app.servers[portal-release-forms]=\
        ${test.batch.dist.app.servers[forms]}

    test.batch.names[portal-release-forms]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-forms]=\
        (\
            (${test.batch.run.property.query[functional-tomcat90-mysql57][forms]}) OR \
            (${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][forms]})\
        ) AND \
        (portal.release == true)

    #
    # Portal Release Frontend Infra
    #

    test.batch.class.names.includes[modules-integration-mysql57-jdk21_zulu][portal-release-frontend]=\
        ${test.batch.class.names.includes[frontend]}

    test.batch.dist.app.servers[portal-release-frontend]=\
        ${test.batch.dist.app.servers[frontend]}

    test.batch.names[portal-release-frontend]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-frontend]=\
        (\
            (${test.batch.run.property.query[functional-tomcat90-mysql57][frontend]}) OR \
            (${test.batch.run.property.query[functional-upgrade-*][frontend]})\
        ) AND \
        (portal.release == true)

    #
    # Portal Release Functional
    #

    test.batch.names[portal-release-functional]=\
        functional-tomcat-mysql57-jdk21_zulu

    test.batch.names.smoke[portal-release-functional]=\
        ${test.batch.names.smoke[portal-release]}

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-release-functional]=\
        ${test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-release]}

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-functional]=\
        ${test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release]}

    test.release.bundle[portal-release-functional]=true

    #
    # Portal Release Headless Acceptance
    #

    test.batch.class.names.includes[modules-integration-mysql57-jdk21_zulu][portal-release-headless-acceptance]=\
        ${test.batch.class.names.includes[headless-acceptance]}

    test.batch.dist.app.servers[portal-release-headless-acceptance]=\
        ${test.batch.dist.app.servers[headless-acceptance]}

    test.batch.names[portal-release-headless-acceptance]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-headless-acceptance]=\
        (\
            (${test.batch.run.property.query[functional-tomcat90-mysql57][headless-acceptance]}) OR \
            (${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][headless-acceptance]})\
        ) AND \
        (portal.release == true)

    #
    # Portal Release Object
    #

    test.batch.class.names.includes[modules-integration-*-jdk21_zulu][portal-release-object]=\
        ${test.batch.class.names.includes[modules-integration-*][object]}

    test.batch.dist.app.servers[portal-release-object]=${test.batch.dist.app.servers[object]}

    test.batch.names[portal-release-object]=\
        functional-tomcat-mariadb102-jdk21_zulu,\
        functional-tomcat-mysql57-jdk21_zulu,\
        functional-tomcat-postgresql134-jdk21_zulu,\
        functional-tomcat-sqlserver2017-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-mariadb102-jdk21_zulu][portal-release-object]=\
        (${test.batch.run.property.query[functional-upgrade-*][object]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-object]=\
        (\
            (${test.batch.run.property.query[functional-tomcat90-mysql57][object]}) OR \
            (${test.batch.run.property.query[functional-upgrade-*][object]})\
        ) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-postgresql134-jdk21_zulu][portal-release-object]=\
        (${test.batch.run.property.query[functional-upgrade-*][object]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-sqlserver2017-jdk21_zulu][portal-release-object]=\
        (${test.batch.run.property.query[functional-upgrade-*][object]}) AND \
        (portal.release == true)

    #
    # Portal Release Page Management Acceptance
    #

    test.batch.class.names.excludes[modules-integration-mysql57-jdk21_zulu][portal-release-page-management-acceptance]=\
        ${test.batch.class.names.excludes[page-management]}

    test.batch.class.names.includes[modules-integration-mysql57-jdk21_zulu][portal-release-page-management-acceptance]=\
        ${test.batch.class.names.includes[page-management]}

    test.batch.dist.app.servers[portal-release-page-management-acceptance]=\
        ${test.batch.dist.app.servers[page-management]}

    test.batch.names[portal-release-page-management-acceptance]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu,\
        playwright-js-tomcat90-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-page-management-acceptance]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57][page-management]}) AND \
        (portal.release == true)

    #
    # Portal Release Playwright
    #

    test.batch.names[portal-release-playwright]=\
        playwright-js-tomcat90-mysql57-jdk21_zulu

    #
    # Portal Release Publications
    #

    test.batch.class.names.includes[portal-release-publications]=\
        ${test.batch.class.names.includes[publications]}

    test.batch.dist.app.servers[portal-release-publications]=\
        ${test.batch.dist.app.servers[publications]}

    test.batch.names[portal-release-publications]=\
        functional-tomcat-db2111-jdk21_zulu,\
        functional-tomcat-mariadb102-jdk21_zulu,\
        functional-tomcat-mysql57-jdk21_zulu,\
        functional-tomcat-oracle193-jdk21_zulu,\
        functional-tomcat-postgresql144-jdk21_zulu,\
        functional-tomcat-postgresql153-jdk21_zulu,\
        functional-tomcat-postgresql163-jdk21_zulu,\
        functional-tomcat-sqlserver2017-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-db2111-jdk21_zulu][portal-release-publications]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-db2111][publications]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-mariadb102-jdk21_zulu][portal-release-publications]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][publications]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-publications]=\
        (\
            (${test.batch.run.property.query[functional-tomcat90-mysql57][publications]}) OR \
            (${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][publications]})\
        ) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-oracle193-jdk21_zulu][portal-release-publications]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][publications]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-postgresql*-jdk21_zulu][portal-release-publications]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][publications]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-sqlserver2017-jdk21_zulu][portal-release-publications]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][publications]}) AND \
        (portal.release == true)

    #
    # Portal Release Search
    #

    test.batch.class.names.includes[modules-integration-mysql57-jdk21_zulu][portal-release-search]=\
        ${test.batch.class.names.includes[search]}

    test.batch.dist.app.servers[portal-release-search]=\
        ${test.batch.dist.app.servers[search]}

    test.batch.names[portal-release-search]=\
        functional-tomcat-db2111-jdk21_zulu,\
        functional-tomcat-hypersonic20-jdk21_zulu,\
        functional-tomcat-mariadb106-jdk21_zulu,\
        functional-tomcat-mysql57-jdk21_zulu,\
        functional-tomcat-oracle193-jdk21_zulu,\
        functional-tomcat-postgresql121-jdk21_zulu,\
        functional-tomcat-sqlserver2019-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-db2111-jdk21_zulu][portal-release-search]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-db2111][search]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-hypersonic20-jdk21_zulu][portal-release-search]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-hypersonic20][search]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-mariadb106-jdk21_zulu][portal-release-search]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-mariadb106][search]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-search]=\
        (\
            (${test.batch.run.property.query[functional-tomcat90-mysql57][search]}) OR \
            (${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search]})\
        ) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-oracle193-jdk21_zulu][portal-release-search]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][search]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-postgresql121-jdk21_zulu][portal-release-search]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-postgresql121][search]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-sqlserver2019-jdk21_zulu][portal-release-search]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2019][search]}) AND \
        (portal.release == true)

    #
    # Portal Release Security
    #

    test.batch.class.names.includes[modules-integration-mysql57-jdk21_zulu][portal-release-security]=\
        ${test.batch.class.names.includes[security]}

    test.batch.dist.app.servers[portal-release-security]=\
        ${test.batch.dist.app.servers[security]}

    test.batch.names[portal-release-security]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-security]=\
        (\
            (${test.batch.run.property.query[functional-tomcat90-mysql57][security]}) OR \
            (${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][security]})\
        ) AND \
        (portal.release == true)

    #
    # Portal Release Site Management
    #

    test.batch.class.names.includes[portal-release-site-management]=\
        ${test.batch.class.names.includes[site-management]}

    test.batch.dist.app.servers[portal-release-site-management]=\
        ${test.batch.dist.app.servers[site-management]}

    test.batch.names[portal-release-site-management]=\
        functional-tomcat-db2111-jdk21_zulu,\
        functional-tomcat-mariadb102-jdk21_zulu,\
        functional-tomcat-mysql57-jdk21_zulu,\
        functional-tomcat-oracle193-jdk21_zulu,\
        functional-tomcat-postgresql144-jdk21_zulu,\
        functional-tomcat-postgresql153-jdk21_zulu,\
        functional-tomcat-postgresql163-jdk21_zulu,\
        functional-tomcat-sqlserver2017-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-db2111-jdk21_zulu][portal-release-site-management]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-db2111][site-management]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-mariadb102-jdk21_zulu][portal-release-site-management]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][site-management]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-site-management]=\
        (\
            (${test.batch.run.property.query[functional-tomcat90-mysql57][site-management]}) OR \
            (${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][site-management]})\
        ) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-oracle193-jdk21_zulu][portal-release-site-management]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][site-management]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-postgresql*-jdk21_zulu][portal-release-site-management]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][site-management]}) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-tomcat-sqlserver2017-jdk21_zulu][portal-release-site-management]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][site-management]}) AND \
        (portal.release == true)

    #
    # Portal Release Smoke
    #

    test.batch.names.smoke[portal-release-smoke]=\
        ${test.batch.names.smoke[portal-release]}

    test.release.bundle[portal-release-smoke]=true

    #
    # Portal Release Tomcat
    #

    test.batch.names[portal-release-tomcat]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu,\
        portal-renamed-tomcat-in-path-mysql57-jdk21_zulu,\
        portal-startup-space-in-path-mysql57-jdk21_zulu

    test.batch.names.smoke[portal-release-tomcat]=\
        ${test.batch.names.smoke[portal-release]}

    test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-release-tomcat]=\
        ${test.batch.run.property.query[functional-smoke-tomcat-mysql57-jdk21_zulu][portal-release]}

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-tomcat]=\
        ${test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release]}

    test.release.bundle[portal-release-tomcat]=true

    #
    # Portal Release Workflow
    #

    test.batch.class.names.includes[modules-integration-mysql57-jdk21_zulu][portal-release-workflow]=\
        ${test.batch.class.names.includes[workflow]}

    test.batch.dist.app.servers[portal-release-workflow]=\
        ${test.batch.dist.app.servers[workflow]}

    test.batch.names[portal-release-workflow]=\
        functional-tomcat-mysql57-jdk21_zulu,\
        modules-integration-mysql57-jdk21_zulu

    test.batch.run.property.query[functional-tomcat-mysql57-jdk21_zulu][portal-release-workflow]=\
        (\
            (${test.batch.run.property.query[functional-tomcat90-mysql57][workflow]}) OR \
            (${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][workflow]})\
        ) AND \
        (portal.release == true)

    #
    # Portlet Deployment
    #

    test.batch.dist.app.servers[portlet-deployment]=tomcat

    test.batch.names[portlet-deployment]=\
        functional-tomcat90-mysql57,\
        modules-integration-project-templates

    test.batch.run.property.query[functional-tomcat90-mysql57][portlet-deployment]=\
        (testray.main.component.name == "Liferay Faces")

    #
    # Project Templates
    #

    test.batch.dist.app.servers[project-templates]=tomcat

    test.batch.names[project-templates]=\
        modules-integration-project-templates

    #
    # Publications
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][publications]=\
        change-tracking-web

    test.batch.class.names.includes[publications]=\
        **/apps/**/src/testIntegration/**/mvcc/**/*Test.java,\
        **/change/tracking/**/*Test.java

    test.batch.dist.app.servers[publications]=tomcat

    test.batch.names[publications]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-db2111,\
        functional-upgrade-tomcat90-mariadb102,\
        functional-upgrade-tomcat90-mysql57,\
        functional-upgrade-tomcat90-oracle193,\
        functional-upgrade-tomcat90-postgresql144,\
        functional-upgrade-tomcat90-postgresql153,\
        functional-upgrade-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-sqlserver2017,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        playwright-js-tomcat90-mysql57,\
        semantic-versioning,\
        service-builder

    test.batch.run.property.query[functional-tomcat90-mysql57][publications]=\
        (testray.main.component.name == "Publications")

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111][publications]=\
        (database.types ~ db2) AND \
        (test.class.method.name == PublicationsUpgrade#ViewOutOfDatePublicationsArchive7310)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][publications]=\
        (database.types ~ mariadb) AND \
        (test.class.method.name == PublicationsUpgrade#ViewOutOfDatePublicationsArchive7310)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][publications]=\
        (testray.main.component.name == "Upgrades Publications")

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][publications]=\
        (database.types ~ oracle) AND \
        (test.class.method.name == PublicationsUpgrade#ViewOutOfDatePublicationsArchive7310)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][publications]=\
        (database.types ~ postgresql) AND \
        (test.class.method.name == PublicationsUpgrade#ViewOutOfDatePublicationsArchive7310)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][publications]=\
        (database.types ~ sqlserver) AND \
        (test.class.method.name == PublicationsUpgrade#ViewOutOfDatePublicationsArchive7310)

    #
    # Publications With Database Partition
    #

    database.partition.enabled[publications-db-partition]=true
    test.batch.dist.app.servers[publications-db-partition]=tomcat

    test.batch.names[publications-db-partition]=functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][publications-db-partition]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57][publications]}

    #
    # Publications With Different Application Server Environments
    #

    test.batch.class.names.includes[publications-as]=${test.batch.class.names.includes[publications]}
    test.batch.dist.app.servers[publications-as]=${test.batch.dist.app.servers}

    test.batch.names[publications-as]=\
        functional-jboss74-mysql57,\
        functional-upgrade-jboss74-mysql57,\
        #functional-upgrade-weblogic141-mysql57,\
        functional-weblogic141-mysql57,\
        functional-wildfly261-mysql57

    test.batch.run.property.query[functional-jboss*][publications-as]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        ) AND \
        (testray.main.component.name == "Publications")

    test.batch.run.property.query[functional-upgrade-jboss*][publications-as]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        ) AND \
        (testray.main.component.name == "Upgrades Publications")

    test.batch.run.property.query[functional-weblogic*-mysql57][publications-as]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ weblogic)\
        ) AND \
        (testray.main.component.name == "Publications")

    test.batch.run.property.query[functional-wildfly*][publications-as]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ wildfly)\
        ) AND \
        (testray.main.component.name == "Publications")

    #
    # Publications With Different Database Environments
    #

    test.batch.class.names.excludes[publications-db]=${test.batch.class.names.excludes.permanent}
    test.batch.class.names.includes[publications-db]=${test.batch.class.names.includes[publications]}
    test.batch.dist.app.servers[publications-db]=tomcat

    test.batch.names[publications-db]=\
        functional-tomcat90-db2111,\
        functional-tomcat90-hypersonic20,\
        functional-tomcat90-mariadb106,\
        functional-tomcat90-oracle193,\
        functional-tomcat90-postgresql121,\
        functional-tomcat90-sqlserver2019,\
        functional-upgrade-tomcat90-db2111,\
        functional-upgrade-tomcat90-mariadb102,\
        functional-upgrade-tomcat90-oracle193,\
        functional-upgrade-tomcat90-postgresql144,\
        functional-upgrade-tomcat90-postgresql153,\
        functional-upgrade-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-sqlserver2017,\
        modules-integration-db2111,\
        modules-integration-hypersonic20,\
        modules-integration-mariadb106,\
        modules-integration-oracle193,\
        modules-integration-postgresql121
        #modules-integration-sqlserver2019

    test.batch.run.property.query[functional-tomcat90-db2111][publications-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        ) AND \
        (test.class.method.name != Publications#ViewPublicationsChangeDetails) AND \
        (test.class.method.name != PublicationsConflict#ConflictingPublicationsAutomaticallyResolved) AND \
        (test.class.method.name != PublicationsConflict#ResolveDeletionModificationConflictPublicationsByDiscarding) AND \
        (test.class.method.name != PublicationsMB#PublishNewMessageBoardThreadAndMessage) AND \
        (test.class.method.name != PublicationsSites#PublishSiteCreatedInPublication) AND \
        (test.class.method.name != PublicationsWebContent#PublishWebContentWithCategory) AND \
        (testray.main.component.name == "Publications")

    test.batch.run.property.query[functional-tomcat90-hypersonic20][publications-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ hypersonic)\
        ) AND \
        (test.class.method.name != ManagePublications#AssertDependenciesMovePublicationsWithParentChange) AND \
        (test.class.method.name != ManagePublications#CanMoveChangeBetweenPublications) AND \
        (test.class.method.name != ManagePublications#CanPreventSystemChangesFromBeingMoved) AND \
        (test.class.method.name != ManagePublications#CannotMoveChangesBetweenPublicationsIfConflictsArePresent) AND \
        (test.class.method.name != ManagePublications#CannotMoveTheChangeWithoutParentsChange) AND \
        (testray.main.component.name == "Publications")

    test.batch.run.property.query[functional-tomcat90-mariadb*][publications-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (testray.main.component.name == "Publications")

    test.batch.run.property.query[functional-tomcat90-oracle193][publications-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        ) AND \
        (test.class.method.name != PublicationsWebContent#PublishWebContentWithCategory) AND \
        (testray.main.component.name == "Publications")

    test.batch.run.property.query[functional-tomcat90-postgresql121][publications-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (testray.main.component.name == "Publications")

    test.batch.run.property.query[functional-tomcat90-sqlserver2019][publications-db]=\
        (\
            (database.types == null) OR \
            (database.types ~ sqlserver)\
        ) AND \
        (test.class.method.name != PublicationsWebContent#PublishWebContentWithCategory) AND \
        (testray.main.component.name == "Publications")

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111][publications-db]=\
        (database.types ~ db2) AND \
        (testray.main.component.name == "Upgrades Publications")

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][publications-db]=\
        (database.types ~ mariadb) AND \
        (testray.main.component.name == "Upgrades Publications")

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][publications-db]=\
        (database.types ~ oracle) AND \
        (test.class.method.name != PublicationsUpgrade#ViewTemplateAndCreatePublicationWithItArchive7413u63) AND \
        (testray.main.component.name == "Upgrades Publications")

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][publications-db]=\
        (database.types ~ postgresql) AND \
        (testray.main.component.name == "Upgrades Publications")

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][publications-db]=\
        (database.types ~ sqlserver) AND \
        (testray.main.component.name == "Upgrades Publications")

    #
    # Publications With Liferay Experience Cloud Configurations
    #

    liferay.online.properties[publications-lxc]=true
    test.batch.dist.app.servers[publications-lxc]=tomcat

    test.batch.names[publications-lxc]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][publications-lxc]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57][publications]}) AND \
        (test.liferay.virtual.instance != false)

    #
    # Reports
    #

    test.batch.class.names.includes[reports]=\
        **/portal-reports-engine/**/*Test.java,\
        **/portal-reports-engine-console/**/*Test.java

    test.batch.dist.app.servers[reports]=tomcat

    test.batch.names[reports]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][reports]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name == "Reports")

    #
    # Roles
    #

    test.batch.class.names.includes[roles]=\
        **/portlet-configuration/**/*Test.java,\
        **/roles-admin-test/**/*Test.java,\
        **/roles-test/**/*Test.java,\
        **/roles-uad-test/**/*Test.java

    test.batch.dist.app.servers[roles]=tomcat

    test.batch.names[roles]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][roles]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Roles") OR \
            (testray.main.component.name ~ "Roles")\
        )

    #
    # SAML
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][saml]=\
        saml-web

    test.batch.class.names.includes[saml]=\
        **/saml/**/*Test.java

    test.batch.dist.app.servers[saml]=tomcat

    test.batch.names[saml]=${test.batch.names[security]}

    test.batch.run.property.query[functional-tomcat90-mysql57][saml]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "SAML") OR \
            (testray.main.component.name ~ "SAML")\
        )

    #
    # SCIM
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][scim]=\
        scim-configuration-web

    test.batch.class.names.includes[scim]=\
        **/scim/**/*Test.java

    test.batch.dist.app.servers[scim]=tomcat

    test.batch.names[scim]=${test.batch.names[security]}

    test.batch.run.property.query[functional-tomcat90-mysql57][scim]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "SCIM") OR \
            (testray.main.component.name ~ "SCIM")\
        )

    #
    # Search With Database Partitioning
    #

    database.partition.enabled[search-db-partition]=true
    test.batch.dist.app.servers[search-db-partition]=tomcat

    test.batch.names[search-db-partition]=\
        functional-tomcat90-mysql57,\
        functional-tomcat90-mysql57-jdk11_open

    test.batch.run.property.query[functional-tomcat90-mysql57][search-db-partition]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57][search]}

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search-db-partition]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search]}

    #
    # Search With Different Application Server Environments
    #

    test.batch.dist.app.servers[search-as]=${test.batch.dist.app.servers}

    test.batch.names[search-as]=\
        functional-jboss74-mysql57,\
        functional-upgrade-jboss74-mysql57,\
        functional-upgrade-weblogic141-mysql57,\
        functional-weblogic141-mysql57,\
        functional-wildfly261-mysql57

    test.batch.run.property.query[functional*][search-as]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57][search]}) AND \
        (search.environment.suite.exclude != true)

    test.batch.run.property.query[functional-jboss*][search-as]=\
        (${test.batch.run.property.query[functional*][search-as]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        ) AND \
        (test.class.method.name != Blueprints#ViewBlueprintsPreviewLocalizedResults) AND \
        (test.class.method.name != Search#SortAccentedWords) AND \
        (test.class.method.name != SearchTuningES7#EnableAndDisableResultRankings)

    test.batch.run.property.query[functional-upgrade*][search-as]=\
        (custom.properties != "upgrade.database.auto.run=true") AND \
        (testray.main.component.name ~ "Upgrades Search")

    test.batch.run.property.query[functional-upgrade-jboss*][search-as]=\
        (${test.batch.run.property.query[functional-upgrade*][search-as]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        )

    test.batch.run.property.query[functional-upgrade-weblogic*][search-as]=\
        (${test.batch.run.property.query[functional-upgrade*][search-as]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ weblogic)\
        )

    test.batch.run.property.query[functional-weblogic*][search-as]=\
        (${test.batch.run.property.query[functional*][search-as]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ weblogic)\
        ) AND \
        (test.class.method.name != SearchTuningES7#AssertCannotAddDuplicateQueriesAndAliases)

    test.batch.run.property.query[functional-wildfly*][search-as]=\
        (${test.batch.run.property.query[functional*][search-as]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ wildfly)\
        ) AND \
        (test.class.method.name != Blueprints#ViewBlueprintsPreviewLocalizedResults) AND \
        (test.class.method.name != Search#SortAccentedWords) AND \
        (test.class.method.name != SearchTuningES7#EnableAndDisableResultRankings)

    #
    # Search With Different Database Environments
    #

    test.batch.class.names.excludes[search-db]=\
        ${test.batch.class.names.excludes},\
        **/object-test/**/ObjectEntryLocalServiceTest.java

    test.batch.class.names.includes[modules-integration-*][search-db]=${test.batch.class.names.includes[modules-integration-*][search]}
    test.batch.dist.app.servers[search-db]=tomcat

    test.batch.names[search-db]=\
        functional-tomcat90-db2111,\
        functional-tomcat90-hypersonic20,\
        functional-tomcat90-mariadb106,\
        functional-tomcat90-oracle193,\
        functional-tomcat90-postgresql121,\
        functional-tomcat90-sqlserver2019,\
        functional-upgrade-tomcat90-db2111,\
        functional-upgrade-tomcat90-mariadb102,\
        functional-upgrade-tomcat90-oracle193,\
        functional-upgrade-tomcat90-postgresql144,\
        functional-upgrade-tomcat90-postgresql153,\
        functional-upgrade-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-sqlserver2017,\
        modules-integration-db2111,\
        modules-integration-hypersonic20,\
        modules-integration-mariadb106,\
        modules-integration-oracle193,\
        modules-integration-postgresql121,\
        modules-integration-sqlserver2019

    test.batch.run.property.query[functional*][search-db]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57][search]}) AND \
        (search.environment.suite.exclude != true)

    test.batch.run.property.query[functional-tomcat*][search-db]=\
        (${test.batch.run.property.query[functional*][search-db]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        )

    test.batch.run.property.query[functional-upgrade*][search-db]=\
        (custom.properties != "upgrade.database.auto.run=true") AND \
        (testray.main.component.name ~ "Upgrades Search")

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111][search-db]=\
        (${test.batch.run.property.query[functional-upgrade*][search-db]}) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][search-db]=\
        (${test.batch.run.property.query[functional-upgrade*][search-db]}) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][search-db]=\
        (${test.batch.run.property.query[functional-upgrade*][search-db]}) AND \
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][search-db]=\
        (${test.batch.run.property.query[functional-upgrade*][search-db]}) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][search-db]=\
        (${test.batch.run.property.query[functional-upgrade*][search-db]}) AND \
        (\
            (database.types == null) OR \
            (database.types ~ sqlserver)\
        )

    #
    # Search With Elasticsearch 7
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][search]=\
        portal-search-admin-web,\
        portal-search-web,\
        search-experiences-web

    test.batch.class.names.excludes[search]=\
        ${test.batch.class.names.excludes},\
        **/portal-search-opensearch2/**/*Test.java,\
        **/portal-search-solr8/**/*Test.java,\
        **/sharing-search-test/**/SharingEntrySearchDLTest.java

    test.batch.class.names.includes[modules-integration-*][search]=\
        **/apps/**/src/testIntegration/**/search/**/*Test.java,\
        **/asset/asset-list-item-selector-web/**/*Test.java,\
        **/asset/asset-list-test/**/*Test.java,\
        **/asset/asset-list-web/**/*Test.java,\
        **/asset-publisher-test/**/AssetPublisherExportImportTest.java,\
        **/asset-test/**/AssetHelperTest.java,\
        **/asset-test/**/AssetVocabularyServiceTest.java,\
        **/blogs-test/**/BlogsEntryAssetSearchTest.java,\
        **/blogs-test/**/BlogsEntryStatusTransitionTest.java,\
        **/blogs-test/**/BlogsEntryTrashHandlerTest.java,\
        **/bookmarks-test/**/BookmarksEntryTrashHandlerTest.java,\
        **/bookmarks-test/**/BookmarksFolderServiceTest.java,\
        **/bookmarks-test/**/BookmarksFolderTrashHandlerTest.java,\
        #**/data-engine-rest-test/**/DataDefinitionResourceTest.java,\
        **/document-library-test/**/DLFileEntryTrashHandlerTest.java,\
        **/document-library-test/**/DLFolderTrashHandlerTest.java,\
        **/headless/headless-delivery/**/*ContentSetElement*Test.java,\
        #**/headless-admin-taxonomy-test/**/TaxonomyVocabularyResourceTest.java,\
        **/journal-test/**/JournalArticleAssetSearchTest.java,\
        **/journal-test/**/JournalArticleExpirationTest.java,\
        **/journal-test/**/JournalArticleIndexVersionsTest.java,\
        **/journal-test/**/JournalArticleScheduledTest.java,\
        **/journal-test/**/JournalArticleTrashHandlerTest.java,\
        **/journal-test/**/JournalFolderTrashHandlerTest.java,\
        **/message-boards-test/**/MBThreadTrashHandlerTest.java,\
        #**/module-configuration-localization-test/**/ModuleConfigurationLocalizationTest.java,\
        #**/object-test/**/ObjectEntryLocalServiceTest.java,\
        **/portal-workflow-kaleo-test/**/WorkflowTaskManagerImplTest.java,\
        **/portlet-title-localization-test/**/PortletTitleTest.java,\
        **/segments/**/DefaultSegmentsEntryProviderTest.java,\
        **/segments/**/odata/retriever/**/*Test.java,\
        **/sharing-search-test/**/*Test.java,\
        **/user-test/**/UserLocalServiceTest.java,\
        **/users-admin-test/**/indexer/test/*Test.java,\
        **/wiki-test/**/WikiPageTrashHandlerTest.java

    test.batch.class.names.includes[modules-unit][search]=\
        **/dynamic-data-mapping-test/**/DDMIndexerImplTest.java,\
        **/portal-workflow-metrics-service/**/WorkflowMetricsSLAProcessorTest.java,\
        **/src/test/**/search/**Test.java

    test.batch.class.names.includes[unit][search]=\
        **/test/unit/**/search/**Test.java

    test.batch.dist.app.servers[search]=tomcat

    test.batch.names[search]=\
        functional-jboss74-mysql57,\
        functional-tomcat90-mysql57,\
        functional-tomcat90-mysql57-jdk11_open,\
        functional-upgrade-tomcat90-mysql57,\
        functional-weblogic141-mysql57,\
        functional-wildfly261-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        playwright-js-tomcat90-mysql57,\
        semantic-versioning,\
        service-builder,\
        unit

    test.batch.run.property.query[functional-jboss74-mysql57][search]=\
        test.class.method.name == Blueprints#ApplyBlueprintIDToSearchViaLLSO

    test.batch.run.property.query[functional-tomcat90-mysql57][search]=\
        (portal.suite.search.engine ~ elasticsearch7) AND \
        (testray.main.component.name != "Upgrades Search")

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search]=\
        (portal.suite.search.engine ~ openjdk11)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search]=\
        (custom.properties != "upgrade.database.auto.run=true") AND \
        (portal.suite.search.engine ~ elasticsearch7) AND \
        (testray.main.component.name ~ "Upgrades Search")

    test.batch.run.property.query[functional-weblogic141-mysql57][search]=\
        test.class.method.name == Blueprints#ApplyBlueprintIDToSearchViaLLSO

    test.batch.run.property.query[functional-wildfly261-mysql57][search]=\
        test.class.method.name == Blueprints#ApplyBlueprintIDToSearchViaLLSO

    #
    # Search With Liferay Experience Cloud Configurations
    #

    liferay.online.properties[search-lxc]=true
    test.batch.dist.app.servers[search-lxc]=tomcat

    test.batch.names[search-lxc]=\
        functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][search-lxc]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57][search]}) AND \
        (test.liferay.virtual.instance != false)

    #
    # Search With Minimum Compatible Elasticsearch 7 Version
    #

    search.engine[search-remote-minimum]=remote-elasticsearch
    suite.elastic.version[search-remote-minimum]=7.17.0
    test.batch.class.names.excludes[search-remote-minimum]=${test.batch.class.names.excludes[search-remote]}
    test.batch.class.names.includes[modules-integration-*][search-remote-minimum]=${test.batch.class.names.includes[modules-integration-*][search]}
    test.batch.dist.app.servers[search-remote-minimum]=tomcat
    test.batch.names[search-remote-minimum]=${test.batch.names[search-remote]}

    test.batch.run.property.query[functional-tomcat90-mysql57][search-remote-minimum]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57][search-remote]}

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search-remote-minimum]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search]}

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search-remote-minimum]=\
        ${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search]}

    #
    # Search With Minimum Compatible Elasticsearch 8 Version
    #

    search.engine[search-es8-remote-minimum]=remote-elasticsearch
    suite.elastic.version[search-es8-remote-minimum]=8.8.0
    test.batch.class.names.excludes[search-es8-remote-minimum]=${test.batch.class.names.excludes[search-es8-remote]}
    test.batch.class.names.includes[modules-integration-*][search-es8-remote-minimum]=${test.batch.class.names.includes[modules-integration-*][search-es8-remote]}
    test.batch.dist.app.servers[search-es8-remote-minimum]=tomcat
    test.batch.names[search-es8-remote-minimum]=${test.batch.names[search-es8-remote]}

    test.batch.run.property.query[functional-tomcat90-mysql57][search-es8-remote-minimum]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57][search-es8-remote]}

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search-es8-remote-minimum]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search-es8-remote]}

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search-es8-remote-minimum]=\
        ${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search-es8-remote]}

    #
    # Search With OpenSearch 2
    #

    search.engine[search-opensearch2]=opensearch2

    test.batch.class.names.excludes[search-opensearch2]=\
        ${test.batch.class.names.excludes},\
        **/portal-search-elasticsearch7/**/*Test.java,\
        **/portal-search-solr8/**/*Test.java

    test.batch.class.names.includes[modules-integration-*][search-opensearch2]=${test.batch.class.names.includes[modules-integration-*][search-remote]}
    test.batch.class.names.includes[modules-unit][search-opensearch2]=${test.batch.class.names.includes[modules-unit][search]}
    test.batch.class.names.includes[unit][search-opensearch2]=${test.batch.class.names.includes[unit][search]}
    test.batch.dist.app.servers[search-opensearch2]=tomcat

    test.batch.names[search-opensearch2]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][search-opensearch2]=\
        (elastic.xpack.enabled != "true") AND \
        (elasticsearch.ccr.enabled != "true") AND \
        (elasticsearch.ltr.enabled != "true") AND \
        (embedded.elasticsearch.only != "true") AND \
        (portal.suite.search.engine ~ opensearch2) AND \
        (test.class.method.name != Blueprints#ViewSearchResultsScoreViaBlueprintsPreview) AND \
        (test.class.method.name != Elasticsearch7#AssertSearchAdmin) AND \
        (test.class.method.name != Elasticsearch7#BulkExecutionFailuresAreLoggedCorrectly) AND \
        (test.class.method.name != Elasticsearch7#ElasticsearchClusteringSmokeTest) AND \
        (test.class.method.name != Elasticsearch7#MultipleConnectionsSmokeTest) AND \
        (test.class.method.name != Elasticsearch7#SearchAfterRedeployingElasticsearchConnector) AND \
        (test.class.method.name != SemanticSearch#AssertSearchUsingTxtaiWithTextEmbeddingElementHasNoError) AND \
        (test.class.method.name != SemanticSearch#AssertTxtaiWithTextEmbeddingElementAffectsBlueprintPreview) AND \
        (testray.main.component.name != "Upgrades Search")

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search-opensearch2]=${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search-remote]}

    #
    # Search With OpenSearch 2 and Different Application Servers
    #

    search.engine[search-opensearch2-as]=opensearch2
    test.batch.dist.app.servers[search-opensearch2-as]=${test.batch.dist.app.servers}
    test.batch.names[search-opensearch2-as]=${test.batch.names[search-as]}

    test.batch.run.property.query[functional*][search-opensearch2-as]=\
        (elastic.xpack.enabled != true) AND \
        (elasticsearch.ccr.enabled != "true") AND \
        (elasticsearch.ltr.enabled != "true")

    test.batch.run.property.query[functional-jboss*][search-opensearch2-as]=\
        (${test.batch.run.property.query[functional*][search-opensearch2-as]}) AND \
        (${test.batch.run.property.query[functional-jboss*][search-as]})

    test.batch.run.property.query[functional-upgrade-jboss*][search-opensearch2-as]=${test.batch.run.property.query[functional-upgrade-jboss*][search-as]}
    test.batch.run.property.query[functional-upgrade-weblogic*][search-opensearch2-as]=${test.batch.run.property.query[functional-upgrade-weblogic*][search-as]}

    test.batch.run.property.query[functional-weblogic*][search-opensearch2-as]=\
        ${test.batch.run.property.query[functional*][search-opensearch2-as]} AND \
        ${test.batch.run.property.query[functional-weblogic*][search-as]}

    test.batch.run.property.query[functional-wildfly*][search-opensearch2-as]=\
        ${test.batch.run.property.query[functional*][search-opensearch2-as]} AND \
        ${test.batch.run.property.query[functional-wildfly*][search-as]}

    #
    # Search With OpenSearch 2 and Different Database Environments
    #

    search.engine[search-opensearch2-db]=opensearch2
    test.batch.class.names.excludes[search-opensearch2-db]=${test.batch.class.names.excludes[search-db]}
    test.batch.class.names.includes[modules-integration-*][search-opensearch2-db]=${test.batch.class.names.includes[modules-integration-*][search-db]}
    test.batch.dist.app.servers[search-opensearch2-db]=tomcat
    test.batch.names[search-opensearch2-db]=${test.batch.names[search-db]}

    test.batch.run.property.query[functional-tomcat*][search-opensearch2-db]=\
        (${test.batch.run.property.query[functional-tomcat*][search-db]}) AND \
        (elastic.xpack.enabled != true) AND \
        (elasticsearch.ccr.enabled != "true") AND \
        (elasticsearch.ltr.enabled != "true")

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111][search-opensearch2-db]=${test.batch.run.property.query[functional-upgrade-tomcat90-db2111][search-db]}
    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][search-opensearch2-db]=${test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][search-db]}
    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][search-opensearch2-db]=${test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][search-db]}
    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][search-opensearch2-db]=${test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][search-db]}
    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][search-opensearch2-db]=${test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][search-db]}

    #
    # Search With Remote Elasticsearch 7
    #

    search.engine[search-remote]=remote-elasticsearch

    test.batch.class.names.excludes[search-remote]=\
        ${test.batch.class.names.excludes},\
        **/portal-search-opensearch2/**/*Test.java,\
        **/portal-search-solr8/**/*Test.java,\
        **/portal-search-test/**/BackupAndRestoreIndexesTest.java,\
        **/sharing-search-test/**/SharingEntrySearchDLTest.java

    test.batch.class.names.includes[modules-integration-*][search-remote]=${test.batch.class.names.includes[modules-integration-*][search]}
    test.batch.dist.app.servers[search-remote]=tomcat

    test.batch.names[search-remote]=\
        functional-tomcat90-mysql57,\
        functional-tomcat90-mysql57-jdk11_open,\
        functional-upgrade-tomcat90-mysql57,\
        modules-integration-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][search-remote]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57][search]}) AND \
        (embedded.elasticsearch.only != "true")

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search-remote]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search]}

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search-remote]=\
        ${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search]}

    #
    # Search With Remote Elasticsearch 8
    #

    search.engine[search-es8-remote]=remote-elasticsearch
    suite.elastic.version[search-es8-remote]=8.15.0
    test.batch.class.names.excludes[search-es8-remote]=${test.batch.class.names.excludes[search-remote]}
    test.batch.class.names.includes[modules-integration-*][search-es8-remote]=${test.batch.class.names.includes[modules-integration-*][search-remote]}
    test.batch.dist.app.servers[search-es8-remote]=tomcat
    test.batch.names[search-es8-remote]=${test.batch.names[search-remote]}

    test.batch.run.property.query[functional-tomcat90-mysql57][search-es8-remote]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57][search-remote]}) AND \
        (elastic.xpack.enabled != "true")

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search-es8-remote]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search-remote]}) AND \
        (elastic.xpack.enabled != "true")

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search-es8-remote]=\
        ${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search-remote]}

    #
    # Search With Remote Elasticsearch 8 and Different Application Servers
    #

    search.engine[search-es8-as]=remote-elasticsearch
    suite.elastic.version[search-es8-as]=8.15.0
    test.batch.dist.app.servers[search-es8-as]=${test.batch.dist.app.servers}
    test.batch.names[search-es8-as]=${test.batch.names[search-as]}

    test.batch.run.property.query[functional*][search-es8-as]=\
        (elastic.xpack.enabled != true)

    test.batch.run.property.query[functional-jboss*][search-es8-as]=\
        (${test.batch.run.property.query[functional*][search-es8-as]}) AND \
        (${test.batch.run.property.query[functional-jboss*][search-as]})

    test.batch.run.property.query[functional-upgrade-jboss*][search-es8-as]=\
        ${test.batch.run.property.query[functional-upgrade-jboss*][search-as]}

    test.batch.run.property.query[functional-upgrade-weblogic*][search-es8-as]=\
        ${test.batch.run.property.query[functional-upgrade-weblogic*][search-as]}

    test.batch.run.property.query[functional-weblogic*][search-es8-as]=\
        ${test.batch.run.property.query[functional*][search-es8-as]} AND \
        ${test.batch.run.property.query[functional-weblogic*][search-as]}

    test.batch.run.property.query[functional-wildfly*][search-es8-as]=\
        ${test.batch.run.property.query[functional*][search-es8-as]} AND \
        ${test.batch.run.property.query[functional-wildfly*][search-as]}

    #
    # Search With Remote Elasticsearch 8 and Different Database Environments
    #

    search.engine[search-es8-db]=remote-elasticsearch
    suite.elastic.version[search-es8-db]=8.15.0
    test.batch.class.names.excludes[search-es8-db]=${test.batch.class.names.excludes[search-db]}
    test.batch.class.names.includes[modules-integration-*][search-es8-db]=${test.batch.class.names.includes[modules-integration-*][search-db]}
    test.batch.dist.app.servers[search-es8-db]=tomcat
    test.batch.names[search-es8-db]=${test.batch.names[search-db]}

    test.batch.run.property.query[functional-tomcat*][search-es8-db]=\
        (${test.batch.run.property.query[functional-tomcat*][search-db]}) AND \
        (elastic.xpack.enabled != true)

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111][search-es8-db]=\
        ${test.batch.run.property.query[functional-upgrade-tomcat90-db2111][search-db]}

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][search-es8-db]=\
        ${test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][search-db]}

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][search-es8-db]=\
        ${test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][search-db]}

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][search-es8-db]=\
        ${test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][search-db]}

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][search-es8-db]=\
        ${test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][search-db]}

    #
    # Search With Solr 8
    #

    search.engine[search-solr]=solr

    test.batch.class.names.excludes[search-solr]=\
        ${test.batch.class.names.excludes},\
        **/change-tracking-test/**/SearchCTTest.java,\
        **/commerce/**/*Test.java,\
        #**/headless-admin-taxonomy-test/**/TaxonomyVocabularyResourceTest.java,\
        **/module-configuration-localization-test/**/ModuleConfigurationLocalizationTest.java,\
        **/object/**/*Test.java,\
        **/portal-search-elasticsearch7/**/*Test.java,\
        **/portal-search-opensearch2/**/*Test.java,\
        **/portal-search-tuning-rankings-web-test/**/*Test.java,\
        **/portal-search-tuning-synonyms-web-test/**/*Test.java,\
        **/portal-workflow/**/*Test.java,\
        **/search-experiences/**/*Test.java,\
        **/segments/**/DefaultSegmentsEntryProviderTest.java,\
        **/segments/**/OrganizationODataRetrieverCustomFieldsTest.java,\
        **/segments/**/OrganizationODataRetrieverTest.java,\
        **/segments/**/UserODataRetrieverCustomFieldsTest.java,\
        **/segments/**/UserODataRetrieverTest.java

    test.batch.class.names.includes[modules-integration-*][search-solr]=${test.batch.class.names.includes[modules-integration-*][search]}
    test.batch.class.names.includes[modules-unit][search-solr]=${test.batch.class.names.includes[modules-unit][search]}
    test.batch.class.names.includes[unit][search-solr]=${test.batch.class.names.includes[unit][search]}
    test.batch.dist.app.servers[search-solr]=tomcat

    test.batch.names[search-solr]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][search-solr]=\
        (portal.suite.search.engine ~ solr) AND \
        (testray.main.component.name != "Search Experiences") AND \
        (testray.main.component.name != "Upgrades Search")

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search-solr]=\
        (portal.suite.search.engine ~ solr) AND \
        (testray.main.component.name ~ "Upgrades Search") AND \
        (test.class.method.name !~ SearchUpgrade#ViewResultRankings) AND \
        (test.class.method.name !~ SearchUpgrade#ViewSXP) AND \
        (test.class.method.name !~ SearchUpgrade#ViewSynonyms)

    #
    # Search With Solr 8 and Different Application Servers
    #

    search.engine[search-solr-as]=solr
    test.batch.dist.app.servers[search-solr-as]=${test.batch.dist.app.servers}

    test.batch.names[search-solr-as]=\
        functional-jboss74-mysql57,\
        functional-upgrade-jboss74-mysql57,\
        functional-upgrade-weblogic141-mysql57,\
        functional-weblogic141-mysql57,\
        functional-wildfly261-mysql57

    test.batch.run.property.query[functional*][search-solr-as]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57][search-solr]}) AND \
        (search.environment.suite.exclude != true)

    test.batch.run.property.query[functional-jboss*][search-solr-as]=\
        (${test.batch.run.property.query[functional*][search-solr-as]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        ) AND \
        (test.class.method.name != Solr#SolrWithSolrCloudSmokeTest)

    test.batch.run.property.query[functional-upgrade*][search-solr-as]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search-solr]}) AND \
        (custom.properties != "upgrade.database.auto.run=true")

    test.batch.run.property.query[functional-upgrade-jboss*][search-solr-as]=\
        (${test.batch.run.property.query[functional-upgrade*][search-solr-as]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ jboss)\
        )

    test.batch.run.property.query[functional-upgrade-weblogic*][search-solr-as]=\
        (${test.batch.run.property.query[functional-upgrade*][search-solr-as]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ weblogic)\
        )

    test.batch.run.property.query[functional-weblogic*][search-solr-as]=\
        (${test.batch.run.property.query[functional*][search-solr-as]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ weblogic)\
        )

    test.batch.run.property.query[functional-wildfly*][search-solr-as]=\
        (${test.batch.run.property.query[functional*][search-solr-as]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ wildfly)\
        )

    #
    # Search With Solr 8 and Different Database Environments
    #

    search.engine[search-solr-db]=solr

    test.batch.class.names.excludes[search-solr-db]=\
        ${test.batch.class.names.excludes},\
        **/change-tracking-test/**/SearchCTTest.java,\
        **/commerce/**/*Test.java,\
        #**/headless-admin-taxonomy-test/**/TaxonomyVocabularyResourceTest.java,\
        **/module-configuration-localization-test/**/ModuleConfigurationLocalizationTest.java,\
        **/object/**/*Test.java,\
        **/portal-search-elasticsearch7/**/*Test.java,\
        **/portal-search-opensearch2/**/*Test.java,\
        **/portal-search-tuning-synonyms-web-test/**/*Test.java,\
        **/portal-workflow/**/*Test.java,\
        **/search-experiences/**/*Test.java,\
        **/segments/**/DefaultSegmentsEntryProviderTest.java,\
        **/segments/**/OrganizationODataRetrieverCustomFieldsTest.java,\
        **/segments/**/OrganizationODataRetrieverTest.java,\
        **/segments/**/UserODataRetrieverCustomFieldsTest.java,\
        **/segments/**/UserODataRetrieverTest.java

    test.batch.class.names.includes[modules-integration-*][search-solr-db]=${test.batch.class.names.includes[modules-integration-*][search-solr]}
    test.batch.dist.app.servers[search-solr-db]=tomcat

    test.batch.names[search-solr-db]=\
        functional-tomcat90-db2111,\
        functional-tomcat90-hypersonic20,\
        functional-tomcat90-mariadb106,\
        functional-tomcat90-oracle193,\
        functional-tomcat90-postgresql121,\
        functional-tomcat90-sqlserver2019,\
        functional-upgrade-tomcat90-db2111,\
        functional-upgrade-tomcat90-mariadb102,\
        functional-upgrade-tomcat90-oracle193,\
        functional-upgrade-tomcat90-postgresql144,\
        functional-upgrade-tomcat90-sqlserver2017,\
        modules-integration-db2111,\
        modules-integration-hypersonic20,\
        modules-integration-mariadb106,\
        modules-integration-oracle193,\
        modules-integration-postgresql121,\
        modules-integration-sqlserver2019

    test.batch.run.property.query[functional*][search-solr-db]=\
        (${test.batch.run.property.query[functional-tomcat90-mysql57][search-solr]}) AND \
        (search.environment.suite.exclude != true)

    test.batch.run.property.query[functional-tomcat*][search-solr-db]=\
        (${test.batch.run.property.query[functional*][search-solr-db]}) AND \
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        )

    test.batch.run.property.query[functional-upgrade*][search-solr-db]=\
        (${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][search-solr]}) AND \
        (custom.properties != "upgrade.database.auto.run=true")

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111][search-solr-db]=\
        (${test.batch.run.property.query[functional-upgrade*][search-solr-db]}) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][search-solr-db]=\
        (${test.batch.run.property.query[functional-upgrade*][search-solr-db]}) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][search-solr-db]=\
        (${test.batch.run.property.query[functional-upgrade*][search-solr-db]}) AND \
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][search-solr-db]=\
        (${test.batch.run.property.query[functional-upgrade*][search-solr-db]}) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][search-solr-db]=\
        (${test.batch.run.property.query[functional-upgrade*][search-solr-db]}) AND \
        (\
            (database.types == null) OR \
            (database.types ~ sqlserver)\
        )

    #
    # Security
    #

    modules.includes[modules-semantic-versioning][security]=${security.testing.modules}

    modules.includes.private[modules-semantic-versioning][security]=\
        ${security.testing.modules},\
        dxp/apps/antivirus/**,\
        dxp/apps/multi-factor-authentication/**,\
        dxp/apps/saml/**,\
        dxp/apps/scim/**

    modules.includes.public[modules-semantic-versioning][security]=${security.testing.modules}

    playwright.projects.includes[playwright-js-tomcat90-mysql57][security]=${security.playwright.projects}

    security.playwright.projects=\
        cookies-banner-web,\
        login-web,\
        openid-link,\
        portal-security-service-access-policy-service,\
        saml-web,\
        scim-configuration-web

    security.testing.modules=\
        apps/captcha/**,\
        apps/cookies/**,\
        apps/login/**,\
        apps/oauth-client/**,\
        apps/oauth2-provider/**,\
        apps/password-policies-admin/**,\
        apps/portal-security/**,\
        apps/portal-security-audit/**,\
        apps/portal-security-sso/**,\
        apps/portal-settings/**

    test.batch.class.names.includes[security]=\
        **/antivirus-async-store-test/**/*Test.java,\
        **/cookies/**/*Test.java,\
        **/multi-factor-authentication/**/*Test.java,\
        **/oauth-client/**/*Test.java,\
        **/oauth2-provider/**/*Test.java,\
        **/password-policies-admin/**/*Test.java,\
        **/portal-crypto-hash/**/*Test.java,\
        **/portal-remote-cors-test/**/*Test.java,\
        **/portal-security/**/*Test.java,\
        **/portal-security-audit/**/*Test.java,\
        **/portal-security-ldap-api/**/*Test.java,\
        **/portal-security-ldap-impl/**/*Test.java,\
        **/portal-security-ldap-test/**/*Test.java,\
        **/portal-security-sso/**/*Test.java,\
        **/saml/**/*Test.java,\
        **/scim/**/*Test.java,\
        **/test/unit/**/security/*Test.java

    test.batch.dist.app.servers[security]=tomcat

    test.batch.names[security]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        playwright-js-tomcat90-mysql57,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][security]=\
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Password Policies") OR \
            (testray.main.component.name == "Audit") OR \
            (testray.main.component.name ~ "AntiSamy") OR \
            (testray.main.component.name ~ "Antivirus") OR \
            (testray.main.component.name ~ "CAPTCHA") OR \
            (testray.main.component.name ~ "Content Security Policy") OR \
            (testray.main.component.name ~ "Cookies") OR \
            (testray.main.component.name ~ "LDAP") OR \
            (testray.main.component.name ~ "Login") OR \
            (testray.main.component.name ~ "Multi Factor Authentication") OR \
            (testray.main.component.name ~ "OAuth 2") OR \
            (testray.main.component.name ~ "OpenID Connect") OR \
            (testray.main.component.name ~ "Password Policies") OR \
            (testray.main.component.name ~ "Permissions") OR \
            (testray.main.component.name ~ "SAML") OR \
            (testray.main.component.name ~ "SCIM") OR \
            (testray.main.component.name ~ "Security") OR \
            (testray.main.component.name ~ "Upgrades Security") OR \
            (testray.main.component.name ~ "XSS")\
        )

    #
    # Security Playwright
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][security-playwright]=${security.playwright.projects}

    test.batch.dist.app.servers[security-playwright]=tomcat

    test.batch.names[security-playwright]=\
        playwright-js-tomcat90-mysql57

    #
    # Service Builder
    #

    test.batch.class.names.excludes[modules-integration-mysql57][service-builder]=\
        **/portal-tools-service-builder-test-sequence-test/**/SequenceEntryLocalServiceTest.java

    test.batch.class.names.includes[service-builder]=\
        **/portal-tools-service-builder-test-sequence-service/**/*Test.java,\
        **/portal-tools-service-builder-test-sequence-test/**/*Test.java,\
        **/portal-tools-service-builder-test-service/**/*Test.java,\
        **/portal-tools-service-builder-test-test/**/*Test.java

    test.batch.dist.app.servers[service-builder]=tomcat

    test.batch.names[service-builder]=\
        functional-tomcat90-db2111,\
        functional-tomcat90-hypersonic20,\
        functional-tomcat90-mariadb104,\
        functional-tomcat90-mysql57,\
        functional-tomcat90-oracle193,\
        functional-tomcat90-postgresql121,\
        functional-tomcat90-sqlserver2019,\
        modules-integration-db2111,\
        modules-integration-hypersonic20,\
        modules-integration-mariadb104,\
        modules-integration-mysql57,\
        modules-integration-oracle193,\
        modules-integration-postgresql121,\
        modules-integration-sqlserver2019,\
        modules-unit

    test.batch.run.property.query[functional-tomcat*][service-builder]=\
        testray.main.component.name == "Service Builder"

    #
    # Setup Wizard
    #

    test.batch.dist.app.servers[setup-wizard]=tomcat

    test.batch.names[setup-wizard]=\
        functional-tomcat90-db2111,\
        functional-tomcat90-hypersonic20,\
        functional-tomcat90-mariadb104,\
        functional-tomcat90-mysql57,\
        functional-tomcat90-oracle193,\
        functional-tomcat90-postgresql121,\
        functional-tomcat90-sqlserver2019

    test.batch.run.property.query[functional-tomcat90-db2111][setup-wizard]=\
        (database.types ~ db2) AND \
        (testray.main.component.name == "Setup Wizard")

    test.batch.run.property.query[functional-tomcat90-hypersonic20][setup-wizard]=\
        (database.types ~ hypersonic) AND \
        (testray.main.component.name == "Setup Wizard")

    test.batch.run.property.query[functional-tomcat90-mariadb104][setup-wizard]=\
        (database.types ~ mariadb) AND \
        (testray.main.component.name == "Setup Wizard")

    test.batch.run.property.query[functional-tomcat90-mysql57][setup-wizard]=\
        (database.types ~ mysql) AND \
        (testray.main.component.name == "Setup Wizard")

    test.batch.run.property.query[functional-tomcat90-oracle193][setup-wizard]=\
        (database.types ~ oracle) AND \
        (testray.main.component.name == "Setup Wizard")

    test.batch.run.property.query[functional-tomcat90-postgresql121][setup-wizard]=\
        (database.types ~ postgresql) AND \
        (testray.main.component.name == "Setup Wizard")

    test.batch.run.property.query[functional-tomcat90-sqlserver2019][setup-wizard]=\
        (database.types ~ sqlserver) AND \
        (testray.main.component.name == "Setup Wizard")

    #
    # Site Management
    #

    modules.includes[js-unit][site-management]=${site.management.testing.modules}

    modules.includes[modules-semantic-versioning][site-management]=${site.management.testing.modules}

    modules.includes.public[modules-semantic-versioning][site-management]=${site.management.testing.modules}

    playwright.projects.includes[playwright-js-tomcat90-mysql57][site-management]=\
        site-admin-web,\
        site-navigation-admin-web,\
        site-navigation-breadcrumb-web

    site.management.testing.modules=\
        apps/click-to-chat/**,\
        apps/friendly-url/**,\
        apps/portal-url-builder/**,\
        apps/redirect/**,\
        apps/site/**,\
        apps/site-initializer/**,\
        apps/site-navigation/**

    test.batch.class.names.includes[site-management]=\
        **/click-to-chat/**/*Test.java,\
        **/friendly-url-**/**/*Test.java,\
        **/headless/headless-delivery/**/*Language*Test.java,\
        **/headless/headless-delivery/**/*NavigationMenu*Test.java,\
        **/headless/headless-site/**/*Test.java,\
        **/portal-url-builder/**/*Test.java,\
        **/redirect-**/**/*Test.java,\
        **/site/site-admin-**/**/*Test.java,\
        **/site/site-memberships-test/**/*Test.java,\
        **/site/site-test/**/*Test.java,\
        **/site-initializer/site-initializer-extender/**/**/*Test.java,\
        **/site-navigation/**/*Test.java

    test.batch.dist.app.servers[site-management]=tomcat

    test.batch.names[site-management]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-db2111,\
        functional-upgrade-tomcat90-mariadb102,\
        functional-upgrade-tomcat90-mysql57,\
        functional-upgrade-tomcat90-oracle193,\
        functional-upgrade-tomcat90-postgresql144,\
        functional-upgrade-tomcat90-postgresql153,\
        functional-upgrade-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-sqlserver2017,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        playwright-js-tomcat90-mysql57,\
        semantic-versioning,\
        service-builder

    test.batch.run.property.query[functional-tomcat90-mysql57][site-management]=\
        (testray.main.component.name == "Breadcrumb Widget") OR \
        (testray.main.component.name == "Click to Chat") OR \
        (testray.main.component.name == "Friendly URL Service") OR \
        (testray.main.component.name == "Navigation Menus") OR \
        (testray.main.component.name == "Sitemap Protocol") OR \
        (testray.main.component.name == "Sites Administration") OR \
        (testray.main.component.name == "Sites Directory Widget") OR \
        (testray.main.component.name == "URL Redirections")

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111][site-management]=\
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        ) AND \
        (testray.main.component.name == "Upgrades Site Management")

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][site-management]=\
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (testray.main.component.name == "Upgrades Site Management")

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][site-management]=\
        (testray.main.component.name == "Upgrades Site Management")

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][site-management]=\
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        ) AND \
        (testray.main.component.name == "Upgrades Site Management")

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][site-management]=\
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (testray.main.component.name == "Upgrades Site Management")

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][site-management]=\
        (\
            (database.types == null) OR \
            (database.types ~ sqlserver)\
        ) AND \
        (testray.main.component.name == "Upgrades Site Management")

    #
    # Site Template
    #

    test.batch.class.names.includes[site-template]=\
        **/layout-set-prototype-test/**/*Test.java

    test.batch.dist.app.servers[site-template]=tomcat

    test.batch.names[site-template]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][site-template]=\
        (testray.component.names ~ "Site Templates") OR \
        (testray.main.component.name ~ "Site Templates")

    #
    # Smoke
    #

    test.batch.dist.app.servers[smoke]=tomcat

    test.batch.names[smoke]=\
        functional-smoke-tomcat90-mysql57

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57][smoke]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.smoke == false) OR \
            (portal.smoke == true)\
        )

    #
    # Source Formatter
    #

    test.batch.dist.app.servers[sf]=
    test.batch.names[sf]=source-format-current-branch

    #
    # Stable
    #

    test.batch.dist.app.servers[stable]=tomcat

    test.batch.names[stable]=\
        build-iw,\
        central-requirements,\
        functional-smoke-tomcat90-mysql57_stable,\
        functional-tomcat90-mysql57-chrome100_stable,\
        functional-upgrade-tomcat90-mysql57_stable,\
        js-unit,\
        modules-compile,\
        modules-integration-mysql57_stable,\
        modules-unit_stable,\
        playwright-compile,\
        playwright-js-tomcat90-mysql57_stable,\
        rest-builder,\
        service-builder,\
        unit_stable,\
        workspaces-compile

    workspaces.names[workspaces-compile][stable]=\
        #liferay-customer-workspace,\
        #liferay-dotcom-workspace,\
        liferay-jethr0-workspace,\
        #liferay-learn-workspace,\
        #liferay-marketplace-workspace,\
        #liferay-partner-workspace,\
        liferay-sample-workspace,\
        #liferay-testray-workspace

    #
    # Staging
    #

    test.batch.class.names.includes[headless-staging]=\
        **/export-import/**/*Test.java,\
        **/layout-set-prototype-test/**/*Test.java,\
        **/portal-security-ldap-impl/**/LDAPUserImporterImplTest.java,\
        **/staging/**/*Test.java

    test.batch.dist.app.servers[headless-staging]=tomcat

    test.batch.names[headless-staging]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][headless-staging]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Upgrades Staging") OR \
            (testray.main.component.name ~ "Export/Import") OR \
            (testray.main.component.name ~ "Site Templates") OR \
            (testray.main.component.name ~ "Staging") OR \
            (testray.main.component.name ~ "Upgrades Staging")\
        )

    #
    # Staging With Custom Database
    #

    custom.database.name[headless-staging-custom-db]=custom_db
    custom.database.zip.url[headless-staging-custom-db]=http://test-1-1/userContent/${custom.database.name}.zip

    test.batch.dist.app.servers[headless-staging-custom-db]=tomcat

    test.batch.names[headless-staging-custom-db]=functional-tomcat90-oracle193

    test.batch.run.property.query[functional-tomcat90-oracle193][headless-staging-custom-db]=\
        (portal.upstream == true) AND \
        (rebuild.staging.database == true) AND \
        (\
            (testray.main.component.name ~ "Export/Import") OR \
            (testray.main.component.name ~ "Site Templates") OR \
            (testray.main.component.name ~ "Staging")\
        )

    #
    # Startup
    #

    test.batch.dist.app.servers[startup]=tomcat

    test.batch.names[startup]=\
        functional-smoke-startup-cold-tomcat90-hypersonic20,\
        functional-smoke-startup-cold-tomcat90-mysql57,\
        functional-smoke-startup-warm-tomcat90-hypersonic20,\
        functional-smoke-startup-warm-tomcat90-mysql57

    test.batch.run.property.query[functional-smoke-cold-warm-tomcat90-mysql57][startup]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.smoke == false) OR \
            (portal.smoke == true)\
        )

    test.batch.run.property.query[functional-smoke-startup-cold-tomcat90-hypersonic20][startup]=\
        (testray.main.component.name == "Web Content Display")

    test.batch.run.property.query[functional-smoke-startup-cold-tomcat90-mysql57][startup]=\
        (\
            (testray.main.component.name  == "Web Content Administration") OR \
            (testray.main.component.name == "Web Content Display")\
        )

    test.batch.run.property.query[functional-smoke-startup-warm-tomcat90-hypersonic20][startup]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ hypersonic)\
        ) AND \
        (\
            (portal.smoke == false) OR \
            (portal.smoke == true)\
        )

    test.batch.run.property.query[functional-smoke-startup-warm-tomcat90-mysql57][startup]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.smoke == false) OR \
            (portal.smoke == true)\
        )

    #
    # System
    #

    test.batch.class.names.includes[system]=\
        **/apps/configuration-admin/**/*Test.java

    test.batch.dist.app.servers[system]=tomcat

    test.batch.names[system]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][system]=\
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "Instance Settings") OR \
            (testray.main.component.name ~ "Virtual Instances")\
        )

    #
    # TCK
    #

    test.batch.dist.app.servers[tck]=tomcat
    test.batch.names[tck]=tck
    test.context.base[tck]=group/portlet-tck/
    test.server.password[tck]=test
    test.server.password.id[tck]=_com_liferay_login_web_portlet_LoginPortlet_password
    test.server.username[tck]=test@liferay.com
    test.server.username.id[tck]=_com_liferay_login_web_portlet_LoginPortlet_login
    test.session.timeout[tck]=-1
    test.timeout[tck]=5

    #
    # Themes
    #

    test.batch.class.names.includes[themes]=\
        **/frontend-css/**/*Test.java,\
        **/frontend-theme/**/*Test.java

    test.batch.dist.app.servers[themes]=tomcat

    test.batch.names[themes]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][themes]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name ~ "Theme")

    #
    # UM
    #

    playwright.projects.includes[playwright-js-tomcat90-mysql57][um]=\
        account-admin-web,\
        portal-default-permissions-web,\
        portlet-configuration-web,\
        product-navigation-user-personal-bar-web,\
        users-admin-web

    test.batch.class.names.includes[um]=\
        **/account/**/*Test.java,\
        **/address-test/**/*Test.java,\
        **/contacts-test/**/*Test.java,\
        **/contacts-uad-test/**/*Test.java,\
        **/headless/headless-admin-address/**/*Test.java,\
        **/headless/headless-admin-user/**/*Test.java,\
        **/headless/headless-user-notification/**/*Test.java,\
        **/on-demand-admin-test/**/*Test.java,\
        **/organizations-test/**/*Test.java,\
        **/roles/**/*Test.java,\
        **/site/site-teams-test/**/*Test.java,\
        **/site/site-teams-uad-test/**/*Test.java,\
        **/text-localizer-taglib-test/**/*Test.java,\
        **/user/**/*Test.java,\
        **/user-associated-data/**/*Test.java,\
        **/user-groups-admin/**/*Test.java,\
        **/users-admin/**/*Test.java,\
        **/website-test/**/*Test.java

    test.batch.dist.app.servers[um]=tomcat

    test.batch.names[um]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        playwright-js-tomcat90-mysql57,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][um]=\
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "Account") OR \
            (testray.main.component.name ~ "Address") OR \
            (testray.main.component.name ~ "App Management") OR \
            (testray.main.component.name ~ "Contacts Center") OR \
            (testray.main.component.name ~ "On Demand Admin") OR \
            (testray.main.component.name ~ "Personal Data") OR \
            (testray.main.component.name ~ "Roles") OR \
            (testray.main.component.name ~ "Site Teams") OR \
            (testray.main.component.name ~ "Upgrades User and System Management") OR \
            (testray.main.component.name ~ "User Groups") OR \
            (testray.main.component.name ~ "User Notifications") OR \
            (testray.main.component.name ~ "Users and Organizations")\
        )

    #
    # UM With Database Partition
    #

    database.partition.enabled[um-db-partition]=true
    test.batch.dist.app.servers[um-db-partition]=tomcat

    test.batch.names[um-db-partition]=functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][um-db-partition]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57][um]}

    #
    # Upgrade
    #

    test.batch.class.names.includes[upgrade]=\
        **/data-cleanup-test/**/*Test.java,\
        **/portal-dao-test/**/*Test.java,\
        **/portal-scheduler-quartz-test/**/*UpgradeProcessTest.java,\
        **/portal-upgrade-impl/**/*Test.java,\
        **/portal-upgrade-test/**/*Test.java

    test.batch.dist.app.servers[upgrade]=tomcat

    test.batch.names[upgrade]=\
        functional-tomcat90-db2111,\
        functional-tomcat90-mariadb102,\
        functional-tomcat90-mysql57,\
        functional-tomcat90-mysql80,\
        functional-tomcat90-oracle193,\
        functional-tomcat90-postgresql144,\
        functional-tomcat90-postgresql153,\
        functional-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-db2111,\
        functional-upgrade-tomcat90-mariadb102,\
        functional-upgrade-tomcat90-mysql57,\
        functional-upgrade-tomcat90-oracle193,\
        functional-upgrade-tomcat90-postgresql144,\
        functional-upgrade-tomcat90-postgresql153,\
        functional-upgrade-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-sqlserver2017,\
        modules-integration-db2111,\
        modules-integration-mariadb102,\
        modules-integration-mysql57,\
        modules-integration-oracle193,\
        modules-integration-postgresql144,\
        modules-integration-postgresql153,\
        modules-integration-postgresql163,\
        modules-integration-sqlserver2017,\
        modules-unit

    test.batch.run.property.query[functional-tomcat90-db2111][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type == null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (testray.main.component.name == "Database Upgrade Framework")

    test.batch.run.property.query[functional-tomcat90-mariadb102][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type == null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (testray.main.component.name == "Database Upgrade Framework")

    test.batch.run.property.query[functional-tomcat90-mysql57][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type == null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (testray.main.component.name == "Database Upgrade Framework")

    test.batch.run.property.query[functional-tomcat90-mysql80][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type == null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (database.partition.enabled == null) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (testray.main.component.name == "Database Upgrade Framework")

    test.batch.run.property.query[functional-tomcat90-oracle193][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type == null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (testray.main.component.name == "Database Upgrade Framework")

    test.batch.run.property.query[functional-tomcat90-postgresql*][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type == null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (testray.main.component.name == "Database Upgrade Framework")

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name == "Database Upgrade Framework") OR \
            (testray.main.component.name == "Database Upgrade Tool") OR \
            (testray.main.component.name == "Upgrade Logging")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name == "Database Upgrade Framework") OR \
            (testray.main.component.name == "Database Upgrade Tool")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name == "Database Upgrade Framework") OR \
            (testray.main.component.name == "Database Upgrade Tool") OR \
            (testray.main.component.name == "Upgrade Logging")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name == "Database Upgrade Framework") OR \
            (testray.main.component.name == "Database Upgrade Tool") OR \
            (testray.main.component.name == "Upgrade Logging")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name == "Database Upgrade Framework") OR \
            (testray.main.component.name == "Database Upgrade Tool") OR \
            (testray.main.component.name == "Upgrade Logging")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][upgrade]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ sqlserver)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name == "Database Upgrade Framework") OR \
            (testray.main.component.name == "Database Upgrade Tool") OR \
            (testray.main.component.name == "Upgrade Logging")\
        )

    #
    # Upgrade All
    #

    test.batch.class.names.includes[upgrade-all]=\
        **/data-cleanup-test/**/*Test.java,\
        **/test/**/*Upgrade*Test.java,\
        **/testIntegration/**/*Upgrade*Test.java

    test.batch.dist.app.servers[upgrade-all]=${test.batch.dist.app.servers}

    test.batch.names[upgrade-all]=\
        functional-upgrade-jboss74-mysql57,\
        functional-upgrade-tomcat90-db2111,\
        #functional-upgrade-tomcat90-db2115,\
        functional-upgrade-tomcat90-mariadb102,\
        functional-upgrade-tomcat90-mariadb104,\
        functional-upgrade-tomcat90-mariadb106,\
        functional-upgrade-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql80,\
        functional-upgrade-tomcat90-oracle193,\
        functional-upgrade-tomcat90-postgresql121,\
        functional-upgrade-tomcat90-postgresql134,\
        functional-upgrade-tomcat90-postgresql144,\
        functional-upgrade-tomcat90-postgresql153,\
        functional-upgrade-tomcat90-postgresql163,\
        functional-upgrade-tomcat90-sqlserver2017,\
        functional-upgrade-weblogic141-mysql57,\
        functional-upgrade-wildfly261-mariadb102,\
        modules-integration-db2111,\
        modules-integration-db2115,\
        modules-integration-mariadb102,\
        modules-integration-mysql57,\
        modules-integration-oracle193,\
        modules-integration-postgresql134,\
        modules-integration-postgresql144,\
        modules-integration-postgresql153,\
        modules-integration-postgresql163,\
        modules-integration-sqlserver2017,\
        modules-unit

    test.batch.run.property.query[functional-upgrade-tomcat90-db2*][upgrade-all]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102][upgrade-all]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][upgrade-all]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != "data-archive-portal-partition-large") AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql80][upgrade-all]=\
        (data.archive.type == "data-archive-portal-partition-large")

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193][upgrade-all]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql*][upgrade-all]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017][upgrade-all]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ sqlserver)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true)

    #
    # Upgrade Application Servers
    #

    test.batch.dist.app.servers[upgrade-app-servers]=${test.batch.dist.app.servers}

    test.batch.names[upgrade-app-servers]=\
        functional-upgrade-tomcat90-mysql57,\
        functional-upgrade-wildfly261-mariadb106

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][upgrade-app-servers]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name == "Database Upgrade Framework") OR \
            (testray.main.component.name == "Database Upgrade Tool")\
        )

    test.batch.run.property.query[functional-upgrade-wildfly261-mariadb106][upgrade-app-servers]=\
        (app.server.types ~ wildfly) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name == "Database Upgrade Framework") OR \
            (testray.main.component.name == "Database Upgrade Tool")\
        )

    #
    # Upgrade Client
    #

    test.batch.class.names.includes[upgrade-client]=\
        **/portal-tools-db-upgrade-client/**/*Test.java

    test.batch.dist.app.servers[upgrade-client]=tomcat

    test.batch.names[upgrade-client]=\
        functional-upgrade-tomcat90-mysql57,\
        modules-unit

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][upgrade-client]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (data.archive.type != null) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.acceptance != quarantine) AND \
        (portal.upstream == true) AND \
        (testray.main.component.name == "Database Upgrade Tool")

    #
    # Upgrade Performance
    #

    test.batch.dist.app.servers[upgrade-performance]=tomcat

    test.batch.names[upgrade-performance]=\
        functional-upgrade-tomcat90-mysql80

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql80][upgrade-performance]=\
        (data.archive.type == "data-archive-portal-partition-large")

    #
    # Upstream DXP
    #

    test.batch.class.names.excludes[upstream-dxp]=\
        ${test.batch.class.names.excludes},\
        **/mulesoft/**/*Test.java,\
        **/portal-search-opensearch2/**/*Test.java,\
        **/talend/**/*Test.java

    test.batch.names[upstream-dxp]=\
        bundle-blacklist-restart-mysql57,\
        empty-osgi-core-dir-mysql57,\
        functional-smoke-jboss74-mysql57,\
        functional-smoke-startup-cold-tomcat90-hypersonic20,\
        functional-smoke-startup-cold-tomcat90-mysql57,\
        functional-smoke-startup-warm-tomcat90-hypersonic20,\
        functional-smoke-startup-warm-tomcat90-mysql57,\
        functional-smoke-weblogic141-mysql57,\
        functional-smoke-wildfly261-mysql57,\
        functional-tomcat90-db2,\
        functional-tomcat90-hypersonic,\
        functional-tomcat90-mariadb,\
        functional-tomcat90-mysql,\
        functional-tomcat90-oracle,\
        functional-tomcat90-postgresql,\
        functional-tomcat90-sqlserver,\
        functional-upgrade-tomcat90-db2111,\
        functional-upgrade-tomcat90-mariadb,\
        functional-upgrade-tomcat90-mysql,\
        functional-upgrade-tomcat90-oracle,\
        functional-upgrade-tomcat90-postgresql,\
        functional-upgrade-tomcat90-sqlserver,\
        js-unit,\
        lpkg-container-mysql57,\
        lpkg-controller-mysql57,\
        lpkg-override-mysql57,\
        lpkg-persistence-mysql57,\
        lpkg-startup-mysql57,\
        modules-integration-aws-s3-mysql57,\
        modules-integration-db-partition-mysql,\
        modules-integration-db-partition-postgresql,\
        modules-integration-db2,\
        modules-integration-hypersonic,\
        modules-integration-mariadb,\
        modules-integration-mysql,\
        modules-integration-oracle,\
        modules-integration-postgresql,\
        modules-integration-sqlserver,\
        modules-semantic-versioning,\
        modules-unit,\
        playwright-js-tomcat90-mysql57,\
        portal-license-smoke-mysql57,\
        release-osgi-state-exploded-test-mysql57,\
        release-osgi-state-lpkg-change-directory-test-mysql57,\
        release-osgi-state-lpkg-test-mysql57,\
        rest-builder,\
        semantic-versioning,\
        service-builder,\
        source-format,\
        unit

    test.batch.names.smoke[upstream-dxp]=\
        functional-smoke-tomcat90-mysql57

    test.batch.run.property.query[functional-smoke-startup-cold-tomcat90-hypersonic20][upstream-dxp]=\
        ${test.batch.run.property.query[functional-smoke-startup-cold-tomcat90-hypersonic20][startup]}

    test.batch.run.property.query[functional-smoke-startup-cold-tomcat90-mysql57][upstream-dxp]=\
        ${test.batch.run.property.query[functional-smoke-startup-cold-tomcat90-mysql57][startup]}

    test.batch.run.property.query[functional-smoke-startup-warm-tomcat90-hypersonic20][upstream-dxp]=\
        ${test.batch.run.property.query[functional-smoke-startup-warm-tomcat90-hypersonic20][startup]}

    test.batch.run.property.query[functional-smoke-startup-warm-tomcat90-mysql57][upstream-dxp]=\
        ${test.batch.run.property.query[functional-smoke-startup-warm-tomcat90-mysql57][startup]}

    test.batch.run.property.query[functional-tomcat90-db2*][upstream-dxp]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ db2)\
        ) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-hypersonic*][upstream-dxp]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ hypersonic)\
        ) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mariadb*][upstream-dxp]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mariadb)\
        ) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql*][upstream-dxp]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (\
            (portal.upstream == quarantine) OR \
            (portal.upstream == true)\
        )

    test.batch.run.property.query[functional-tomcat90-oracle*][upstream-dxp]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ oracle)\
        ) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql*][upstream-dxp]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ postgresql)\
        ) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sqlserver*][upstream-dxp]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ sqlserver)\
        ) AND \
        (environment.acceptance == true)

    #
    # Upstream Functional
    #

    test.batch.dist.app.servers[upstream-functional]=tomcat

    test.batch.names[upstream-functional]=\
        functional-tomcat90-mysql57-chrome100,\
        poshi-validation

    test.batch.run.property.query[functional-tomcat90-mysql57-chrome100][upstream-functional]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (portal.upstream == true)

    #
    # Upstream Functional - Database Partitioning
    #

    database.partition.enabled[upstream-functional-db-partition]=true
    test.batch.dist.app.servers[upstream-functional-db-partition]=tomcat

    test.batch.names[upstream-functional-db-partition]=\
        functional-tomcat90-mysql57-chrome100

    test.batch.run.property.query[functional-tomcat90-mysql57-chrome100][upstream-functional-db-partition]=\
        (\
            (app.server.types == null) OR \
            (app.server.types ~ tomcat)\
        ) AND \
        (\
            (database.types == null) OR \
            (database.types ~ mysql)\
        ) AND \
        (data.archive.type == null) AND \
        (portal.upstream == true)

    #
    # Users
    #

    test.batch.class.names.includes[users]=\
        **/user/**/*Test.java,\
        **/user-associated-data/**/*Test.java,\
        **/user-groups-admin/**/*Test.java,\
        **/users-admin/**/*Test.java

    test.batch.dist.app.servers[users]=tomcat

    test.batch.names[users]=\
        functional-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][users]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Users and Organizations") OR \
            (testray.main.component.name ~ "Users and Organizations")\
        )

    #
    # Workflow
    #

    playwright.test.project[playwright-js-tomcat90-mysql57][workflow]=\
        portal-workflow-kaleo-designer-web,\
        portal-workflow-task-web

    test.batch.class.names.includes[workflow]=\
        **/apps/portal-workflow/**/*Test.java,\
        **/dxp/apps/portal-workflow/**/*Test.java,\
        **/headless/headless-admin-workflow/**/*Test.java

    test.batch.dist.app.servers[workflow]=tomcat

    test.batch.names[workflow]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57,\
        js-unit,\
        modules-integration-mysql57,\
        modules-semantic-versioning,\
        modules-unit,\
        playwright-js-tomcat90-mysql57,\
        semantic-versioning,\
        unit

    test.batch.run.property.query[functional-tomcat90-mysql57][workflow]=\
        (portal.upstream == "true") AND \
        (\
            (testray.component.name == "Workflow") OR \
            (testray.main.component.name == "Kaleo Designer") OR \
            (testray.main.component.name == "Kaleo Forms Admin") OR \
            (testray.main.component.name == "Workflow") OR \
            (testray.main.component.name == "Workflow Metrics")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][workflow]=\
        (portal.upstream == true) AND \
        (testray.main.component.name == "Upgrades Workflow")

    #
    # Workflow With Database Partition
    #

    database.partition.enabled[workflow-db-partition]=true
    test.batch.dist.app.servers[workflow-db-partition]=tomcat

    test.batch.names[workflow-db-partition]=functional-tomcat90-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][workflow-db-partition]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57][workflow]}

    #
    # Workflow With OpenSearch 2
    #

    search.engine[workflow-opensearch2]=opensearch2

    test.batch.class.names.includes[workflow-opensearch2]=\
        **/apps/portal-workflow/**/*Test.java,\
        **/dxp/apps/portal-workflow/**/*Test.java

    test.batch.dist.app.servers[workflow-opensearch2]=tomcat

    test.batch.names[workflow-opensearch2]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57,\
        modules-integration-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][workflow-opensearch2]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (\
            (testray.main.component.name == "Kaleo Designer") OR \
            (testray.main.component.name == "Workflow") OR \
            (testray.main.component.name == "Workflow Metrics")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][workflow-opensearch2]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name == "Upgrades Workflow")

    #
    # Workflow With Remote Elasticsearch 7
    #

    search.engine[workflow-es7-remote]=remote-elasticsearch

    test.batch.class.names.includes[workflow-es7-remote]=\
        **/apps/portal-workflow/**/*Test.java,\
        **/dxp/apps/portal-workflow/**/*Test.java

    test.batch.dist.app.servers[workflow-es7-remote]=tomcat

    test.batch.names[workflow-es7-remote]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57,\
        modules-integration-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][workflow-es7-remote]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (\
            (testray.main.component.name == "Kaleo Designer") OR \
            (testray.main.component.name == "Workflow") OR \
            (testray.main.component.name == "Workflow Metrics")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][workflow-es7-remote]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name == "Upgrades Workflow")

    #
    # Workflow With Remote Elasticsearch 8
    #

    search.engine[workflow-es8-remote]=remote-elasticsearch
    suite.elastic.version[workflow-es8-remote]=8.15.0

    test.batch.class.names.includes[workflow-es8-remote]=\
        **/apps/portal-workflow/**/*Test.java,\
        **/dxp/apps/portal-workflow/**/*Test.java

    test.batch.dist.app.servers[workflow-es8-remote]=tomcat

    test.batch.names[workflow-es8-remote]=\
        functional-tomcat90-mysql57,\
        functional-upgrade-tomcat90-mysql57,\
        modules-integration-mysql57

    test.batch.run.property.query[functional-tomcat90-mysql57][workflow-es8-remote]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (\
            (testray.main.component.name == "Kaleo Designer") OR \
            (testray.main.component.name == "Workflow") OR \
            (testray.main.component.name == "Workflow Metrics")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57][workflow-es8-remote]=\
        (\
            (portal.acceptance != quarantine) AND \
            (portal.upstream == true)\
        ) AND \
        (testray.main.component.name == "Upgrades Workflow")

    #
    # Workspaces
    #

    test.batch.names[workspaces]=\
        workspaces-compile-jdk11

    workspaces.names[workspaces-compile-jdk11][workspaces]=\
        liferay-clarity-workspace,\
        liferay-customer-workspace,\
        liferay-dlfoldertemplate-workspace,\
        liferay-dotcom-workspace,\
        liferay-evp-workspace,\
        liferay-jethr0-workspace,\
        liferay-learn-workspace,\
        liferay-marketplace-workspace,\
        #liferay-partner-workspace,\
        liferay-sample-workspace,\
        liferay-stripe-workspace,\
        liferay-testray-workspace,\
        liferay-ticket-workspace,\
        liferay-tryitnow-workspace

##
## Test Case
##

    test.case.available.property.names=\
        ${test.case.required.property.names},\
        \
        analytics.cloud.enabled,\
        apacheds.blank.user.password.enabled,\
        apacheds.enabled,\
        apacheds.multiple.users.enabled,\
        app.server.bundles.size,\
        app.server.types,\
        asset.publisher.selection.style,\
        aws.store.enabled,\
        azure.store.enabled,\
        blacklist.saml.algorithms,\
        captcha.enabled,\
        cluster.enabled,\
        cluster.jdbc.ping,\
        cluster.node.ip,\
        cluster.session.replicated,\
        commerce.enabled,\
        configure.read.write.database,\
        create.osgi.hidden.file,\
        custom.mysql.sql.statement,\
        custom.properties,\
        custom.startup.log.message,\
        custom.system.properties,\
        custom.upgrade.properties,\
        data.archive.type,\
        database.auto.upgrade.enabled,\
        database.bare.enabled,\
        database.hypersonic.embedded,\
        database.jndi.enabled,\
        database.lowercase.enabled,\
        database.partition.enabled,\
        database.types,\
        database.upgrade.enabled,\
        databases.size,\
        delete.precompiled.jsps,\
        delete.sidecar.bundle,\
        deploy.latest.marketplace.app.disabled,\
        dummy.socket.proxy.disabled,\
        dxp.license.file,\
        elastic.pki.authentication.enabled,\
        elastic.xpack.configure.tls.cipher.suites,\
        elastic.xpack.enabled,\
        elasticsearch.ccr.enabled,\
        elasticsearch.cluster.size,\
        elasticsearch.jdk11.enabled,\
        elasticsearch.ltr.enabled,\
        elasticsearch.multiple.connections,\
        embedded.elasticsearch.only,\
        environment.acceptance,\
        external.database.enabled,\
        hot.deploy.osgi.app.includes,\
        ibm.store.enabled,\
        ignore.errors,\
        ignore.errors.delimiter,\
        index.search.spell.checker.enabled,\
        jmxremote.enabled,\
        license.required,\
        liferay.online.properties,\
        liferay.online.smoke,\
        liferay.training.dependency.jars,\
        log.context.enabled,\
        marketplace.app.acceptance,\
        minimum.slave.ram,\
        ms.exchange.enabled,\
        oauth2.application.enabled,\
        openam.enabled,\
        opensearch.security.enabled,\
        operating.system.types,\
        osgi.app.includes,\
        osgi.module.configuration.file.names,\
        osgi.module.configurations,\
        osgi.modules.includes,\
        plugins.deployment.type,\
        portal.acceptance,\
        portal.accessibility,\
        portal.context,\
        portal.fixpack.release,\
        portal.hotfix.release,\
        portal.proxy.path,\
        portal.release,\
        portal.smoke,\
        portal.smoke.upgrades,\
        portal.ssl.enabled,\
        portal.stable,\
        portal.suite.search.engine,\
        portal.upstream,\
        portal.version,\
        portlet.plugins.includes,\
        property.group,\
        rebuild.staging.database,\
        remote.elasticsearch.enabled,\
        rewrite.batch.statements,\
        search.environment.suite.exclude,\
        setup.wizard.enabled,\
        skip.clean-app-server-deploy-dir,\
        skip.install-patch,\
        skip.start.app.server.index,\
        skip.upgrade-legacy-database,\
        slave.label,\
        solr.enabled,\
        solr.solrcloud.enabled,\
        solr.ssl.authentication.enabled,\
        solutions.acceptance,\
        store.migration.test,\
        test.assert.javascript.errors,\
        test.assert.warning.exceptions,\
        test.ignore.tomcat.ext.environment,\
        test.prepare.bundle.properties,\
        test.run.environment,\
        test.smtp.server.enabled,\
        testcase.url,\
        testray.component.names,\
        testray.testcase.product.edition,\
        timeout.explicit.wait,\
        txtai.enabled,\
        web.xml.timeout,\
        websphere.ssl.truststore.enabled,\
        workspaces.client.extension.names

    test.case.available.property.values[minimum.slave.ram]=\
        12,\
        24

    test.case.available.property.values[property.group]=\
        analytics.cloud.profile

    test.case.available.property.values[slave.label]=\
        slave-1,\
        slave-2

    test.case.available.property.values[testray.main.component.name]=\
        ${testray.available.component.names}

    test.case.property.group[analytics.cloud.profile][analytics.cloud.enabled]=true
    test.case.property.group[analytics.cloud.profile][ci.retries.disabled]=true
    test.case.property.group[analytics.cloud.profile][minimum.slave.ram]=24
    test.case.property.group[analytics.cloud.profile][slave.label]=slave-1

    test.case.required.property.names=\
        testray.main.component.name

##
## Test Class Groups
##

    test.class.groups.size=40

    #test.class.modules.base.dir=
    #test.class.names.auto.balance=

    test.class.timeout.minutes=120

##
## Test Module Groups
##

    test.module.groups.size=50

##
## Test Plugin Groups
##

    test.plugin.groups.size=10

##
## Testray
##

    testray.available.component.names=\
        ${testray.team.analytics-cloud.component.names},\
        ${testray.team.business-process-management.component.names},\
        ${testray.team.ci-infrastructure.component.names},\
        ${testray.team.commerce.component.names},\
        ${testray.team.content-management.component.names},\
        ${testray.team.core-infrastructure.component.names},\
        ${testray.team.customer-solutions.component.names},\
        ${testray.team.database-infrastructure.component.names},\
        ${testray.team.developer-tools.component.names},\
        ${testray.team.frontend-infrastructure.component.names},\
        ${testray.team.headless.component.names},\
        ${testray.team.internal.component.names},\
        ${testray.team.page-management.component.names},\
        ${testray.team.platform-experience.component.names},\
        ${testray.team.publications.component.names},\
        ${testray.team.search.component.names},\
        ${testray.team.security.component.names},\
        ${testray.team.site-management.component.names},\
        ${testray.team.solutions.component.names}

    testray.build.name=$(jenkins.job.name) - $(jenkins.build.number) - $(jenkins.build.start)
    testray.build.name[test-plugins-acceptance-pullrequest(*)]=$(portal.branch.name) - $(pull.request.sender.username) > $(pull.request.receiver.username) - PR#$(pull.request.number) - $(jenkins.build.start)
    testray.build.name[test-plugins-marketplaceapp]=$(plugin.name) - $(portal.release.name) - $(jenkins.build.number) - $(jenkins.build.start)
    testray.build.name[test-plugins-release]=$(plugins.custom.branch.username)/$(plugins.custom.branch.name) - $(plugins.sha) - $(jenkins.build.start)
    testray.build.name[test-plugins-upstream]=$(plugins.custom.branch.username)/$(plugins.custom.branch.name) - $(plugins.sha) - $(jenkins.build.start)
    testray.build.name[test-portal-acceptance-pullrequest(*)]=[$(portal.branch.name)] ci:test:$(ci.test.suite) - $(pull.request.sender.username) > $(pull.request.receiver.username) - PR#$(pull.request.number) - $(jenkins.build.start)
    testray.build.name[test-portal-acceptance-upstream-dxp(*)]=EE Development Acceptance ($(portal.branch.name)) - $(jenkins.build.number) - $(jenkins.build.start)
    testray.build.name[test-portal-app-release]=$(portal.app.name) - $(portal.release.name) - $(jenkins.build.number) - $(jenkins.build.start)
    testray.build.name[test-portal-environment(*)]=Environment Acceptance ($(portal.branch.name)) - $(jenkins.build.number) - $(jenkins.build.start)
    testray.build.name[test-portal-environment-release(*)]=$(portal.type) Environment Package Tester - $(jenkins.build.number) - $(jenkins.build.start)
    testray.build.name[test-portal-fixpack-environment(*)]=Fix Pack Tester - $(portal.fixpack.release.name) - $(portal.release.name) - $(jenkins.build.number) - $(jenkins.build.start)
    testray.build.name[test-portal-fixpack-release]=Fix Pack Tester - $(portal.fixpack.release.name) - $(portal.release.name) - $(jenkins.build.number) - $(jenkins.build.start)
    testray.build.name[test-portal-hotfix-release]=Hotfix Tester - $(portal.hotfix.release.name) - $(portal.release.name) - $(jenkins.build.number) - $(jenkins.build.start)
    testray.build.name[test-portal-release]=$(portal.type) Package Tester - $(portal.release.build.version) - $(jenkins.build.number) - $(jenkins.build.start)
    testray.build.name[test-portal-source-format]=[$(portal.branch.name)] ci:test:$(ci.test.suite) - $(pull.request.sender.username) > $(pull.request.receiver.username) - PR#$(pull.request.number) - $(jenkins.build.start)
    testray.build.name[test-portal-testsuite-upstream(*)]=[$(portal.branch.name)] ci:test:$(ci.test.suite) - $(jenkins.build.number) - $(jenkins.build.start)
    testray.build.name[test-portal-upstream]=${testray.build.name[test-portal-testsuite-upstream(*)]}
    testray.build.name[test-subrepository-acceptance-pullrequest]=$(repository.name)[$(github.upstream.branch.name)] - ci:test:$(ci.test.suite) - $(pull.request.sender.username) > $(pull.request.receiver.username) - PR#$(pull.request.number) - $(jenkins.build.start)
    testray.build.name[test-subrepository-acceptance-pullrequest(*)]=$(repository.name)[$(github.upstream.branch.name)] - ci:test:$(ci.test.suite) - $(pull.request.sender.username) > $(pull.request.receiver.username) - PR#$(pull.request.number) - $(jenkins.build.start)

    testray.environment.factor.value[app_server]=Tomcat 9.0
    testray.environment.factor.value[browser]=Chrome 100.0
    testray.environment.factor.value[database]=MySQL 5.7
    testray.environment.factor.value[java_jdk]=Oracle JDK 8 64-Bit
    testray.environment.factor.value[operating_system]=CentOS 7 64-Bit

    testray.product.version.name=$(portal.version).x

    testray.project.name=Liferay Portal $(portal.version)
    testray.project.name[test-portal-testsuite-upstream(*)][analytics-cloud]=Analytics Cloud
    testray.project.name[test-portal-testsuite-upstream(*)][calendar]=${testray.project.name[test-portal-testsuite-upstream(*)][workflow]}
    testray.project.name[test-portal-testsuite-upstream(*)][drools]=${testray.project.name[test-portal-testsuite-upstream(*)][workflow]}
    testray.project.name[test-portal-testsuite-upstream(*)][forms]=App Builder
    testray.project.name[test-portal-testsuite-upstream(*)][headless-staging]=Staging
    testray.project.name[test-portal-testsuite-upstream(*)][reports]=${testray.project.name[test-portal-testsuite-upstream(*)][workflow]}
    testray.project.name[test-portal-testsuite-upstream(*)][search]=Search Infrastructure
    testray.project.name[test-portal-testsuite-upstream(*)][upgrade]=Upgrades
    testray.project.name[test-portal-testsuite-upstream(*)][workflow]=Workflow
    testray.project.name[test-portal-upstream][analytics-cloud]=${testray.project.name[test-portal-testsuite-upstream(*)][analytics-cloud]}
    testray.project.name[test-portal-upstream][calendar]=${testray.project.name[test-portal-testsuite-upstream(*)][calendar]}
    testray.project.name[test-portal-upstream][drools]=${testray.project.name[test-portal-testsuite-upstream(*)][drools]}
    testray.project.name[test-portal-upstream][forms]=${testray.project.name[test-portal-testsuite-upstream(*)][forms]}
    testray.project.name[test-portal-upstream][headless-staging]=${testray.project.name[test-portal-testsuite-upstream(*)][headless-staging]}
    testray.project.name[test-portal-upstream][reports]=${testray.project.name[test-portal-testsuite-upstream(*)][reports]}
    testray.project.name[test-portal-upstream][search]=${testray.project.name[test-portal-testsuite-upstream(*)][search]}
    testray.project.name[test-portal-upstream][upgrade]=${testray.project.name[test-portal-testsuite-upstream(*)][upgrade]}
    testray.project.name[test-portal-upstream][workflow]=${testray.project.name[test-portal-testsuite-upstream(*)][workflow]}

    testray.routine.name=$(portal.type) Development ($(portal.branch.name))
    testray.routine.name[sanitize-lang*]=Sanitize Language
    testray.routine.name[test-plugins-acceptance-pullrequest(*)]=Pull Request
    testray.routine.name[test-plugins-marketplaceapp]=Marketplace App Acceptance
    testray.routine.name[test-plugins-release]=Release
    testray.routine.name[test-plugins-upstream]=Upstream
    testray.routine.name[test-portal-acceptance-pullrequest(*)]=$(portal.type) Pull Request
    testray.routine.name[test-portal-acceptance-pullrequest(*)][gauntlet]=Gauntlet
    testray.routine.name[test-portal-acceptance-pullrequest(*)][gauntlet-bucket]=Gauntlet
    testray.routine.name[test-portal-acceptance-upstream-dxp(*)]=EE Development Acceptance ($(portal.branch.name))
    testray.routine.name[test-portal-app-release]=App Release Tester
    testray.routine.name[test-portal-environment(*)]=Environment Acceptance ($(portal.branch.name))
    testray.routine.name[test-portal-environment-release(*)]=$(portal.type) Environment Package Tester
    testray.routine.name[test-portal-fixpack-environment(*)]=Fix Pack Tester
    testray.routine.name[test-portal-fixpack-release]=Fix Pack Tester
    testray.routine.name[test-portal-hotfix-release]=Hotfix Tester
    testray.routine.name[test-portal-release]=$(portal.type) Package Tester
    testray.routine.name[test-portal-source-format]=EE Pull Request
    testray.routine.name[test-portal-testsuite-upstream(*)]=[$(portal.branch.name)] ci:test:$(ci.test.suite)
    testray.routine.name[test-portal-testsuite-upstream(*)][acceptance]=$(portal.type) Development Acceptance ($(portal.branch.name))
    testray.routine.name[test-portal-testsuite-upstream(*)][acceptance-*]=${testray.routine.name[test-portal-testsuite-upstream(*)][acceptance]}
    testray.routine.name[test-portal-testsuite-upstream(*)][upstream-dxp]=$(portal.type) Development ($(portal.branch.name))
    testray.routine.name[test-portal-upstream]=${testray.routine.name[test-portal-testsuite-upstream(*)]}
    testray.routine.name[test-portal-upstream][acceptance]=${testray.routine.name[test-portal-testsuite-upstream(*)][acceptance]}
    testray.routine.name[test-portal-upstream][acceptance-*]=${testray.routine.name[test-portal-testsuite-upstream(*)][acceptance-*]}
    testray.routine.name[test-portal-upstream][upstream-dxp]=${testray.routine.name[test-portal-testsuite-upstream(*)][upstream-dxp]}

    testray.server.url=https://testray.liferay.com

    testray.slack.body=\
        *Jenkins Build:* <$(jenkins.build.url)|$(jenkins.job.name)#$(jenkins.build.number)>\n\
        *Jenkins Report:* <$(jenkins.report.url)|jenkins-report.html>\n\
        *Jenkins Suite:* $(ci.test.suite)\n\
        *Jenkins Testray Importer:* <$(testray.importer.build.url)|$(testray.importer.job.name)#$(testray.importer.build.number)>\n\
        \n\
        *Testray Server:* $(testray.server.url)\n\
        *Testray Project:* <$(testray.project.url)|$(testray.project.name)>\n\
        *Testray Routine:* <$(testray.routine.url)|$(testray.routine.name)>\n\
        *Testray Build:* <$(testray.build.url)|$(testray.build.name)>

    testray.slack.body[test-portal-acceptance-pullrequest(*]=\
        *Pull Request:* <$(pull.request.url)|$(pull.request.receiver.username)#$(pull.request.number)>\n\
        \n\
        ${testray.slack.body}

    testray.slack.body[test-portal-fixpack-release]=\
        *Portal Release:* <$(portal.release.tomcat.url)|$(portal.release.tomcat.name)>\n\
        *Portal Fixpack Release:* <$(portal.fixpack.release.url)|$(portal.fixpack.release.name)>\n\
        \n\
        ${testray.slack.body}

    testray.slack.body[test-portal-hotfix-release]=\
        *Portal Release:* <$(portal.release.tomcat.url)|$(portal.release.tomcat.name)>\n\
        *Portal Fixpack Release:* <$(portal.fixpack.release.url)|$(portal.fixpack.release.name)>\n\
        *Portal Hotfix Release:* <$(portal.hotfix.release.url)|$(portal.hotfix.release.name)>\n\
        \n\
        ${testray.slack.body}

    testray.slack.body[test-portal-release]=\
        *Portal Release:* <$(portal.release.tomcat.url)|$(portal.release.tomcat.name)>\n\
        \n\
        ${testray.slack.body}

    testray.slack.body[test-portal-source-format]=${testray.slack.body[test-portal-acceptance-pullrequest(*]}

    testray.slack.channels=testray-reports
    testray.slack.channels[commerce]=ci-commerce-internal
    testray.slack.channels[commerce-functional]=ci-commerce-internal
    testray.slack.channels[gauntlet]=qa-china-fixpack
    testray.slack.channels[gauntlet-bucket]=qa-china-fixpack
    testray.slack.channels[test-portal-fixpack-release]=qa-china-fixpack
    testray.slack.channels[test-portal-release]=rle-ci

    testray.slack.icon.emoji=:liferay-ci:
    testray.slack.icon.emoji[test-portal-fixpack-release]=:mario_mushroom:
    testray.slack.icon.emoji[test-portal-hotfix-release]=:mario_mushroom:
    testray.slack.icon.emoji[test-portal-release]=:mario_mushroom:

    testray.slack.subject=$(jenkins.job.name)#$(jenkins.build.number)
    testray.slack.subject[test-portal-acceptance-pullrequest(*]=Portal Pull Request (<$(pull.request.url)|$(pull.request.receiver.username)#$(pull.request.number)>)
    testray.slack.subject[test-portal-fixpack-release]=Portal Fixpack Release ($(portal.release.version))
    testray.slack.subject[test-portal-hotfix-release]=Portal Hotfix Release ($(portal.release.version))
    testray.slack.subject[test-portal-release]=Portal Release ($(portal.release.version))
    testray.slack.subject[test-portal-source-format]=Portal Source Formatter (<$(pull.request.url)|$(pull.request.receiver.username)#$(pull.request.number)>)

    testray.slack.username=Liferay CI
    testray.slack.username[test-portal-fixpack-release]=Fixpack Release Build
    testray.slack.username[test-portal-hotfix-release]=Hotfix Release Build
    testray.slack.username[test-portal-release]=Release Build

    testray.team.analytics-cloud.component.names=\
        A/B Test,\
        Analytics Cloud,\
        Content Performance,\
        Content Targeting,\
        Segmentation

    testray.team.business-process-management.component.names=\
        Calendar,\
        Data Engine,\
        Digital Signature,\
        Dynamic Data Lists,\
        Dynamic Data Mapping,\
        Forms,\
        Kaleo Designer,\
        Kaleo Forms Admin,\
        Notifications Framework,\
        Object,\
        Reports,\
        Rules,\
        Upgrades Calendar,\
        Upgrades Data Engine,\
        Upgrades Forms,\
        Upgrades Object,\
        Upgrades Rules,\
        Upgrades Workflow,\
        Web Form,\
        Workflow,\
        Workflow Metrics

    testray.team.ci-infrastructure.component.names=\
        Jenkins Plugin Events,\
        Jenkins Results Parser,\
        Jethr0,\
        Playwright,\
        Poshi Core,\
        Poshi Runner

    testray.team.commerce.component.names=\
        Account,\
        Address,\
        App Management,\
        Commerce,\
        Components Admin,\
        Contacts Center,\
        Headless USM,\
        Monitoring,\
        On Demand Admin,\
        Order Management,\
        Personal Data,\
        Product Info Management,\
        Roles,\
        Shopping Experience,\
        Site Teams,\
        Upgrades User and System Management,\
        User Groups,\
        User Notifications,\
        Users and Organizations

    testray.team.content-management.component.names=\
        Adaptive Media,\
        AI-Creator,\
        Akismet,\
        Announcements,\
        Asset Framework,\
        Asset Publisher Widget,\
        Asset Sharing,\
        Auto Tagging,\
        Blogs,\
        Bookmarks,\
        Categories,\
        Comment,\
        Content Dashboard,\
        Content Management Headless,\
        Content Page Review,\
        Depot,\
        Document Management,\
        External Document Repositories,\
        Flags,\
        Headless Admin Taxonomy API,\
        Image Uploader,\
        Invite Members,\
        Item Selector,\
        Knowledge Base,\
        Locked Items,\
        Mentions,\
        Message Boards,\
        Microblogs,\
        My Subscriptions,\
        Notifications,\
        Questions,\
        Ratings,\
        Recycle Bin,\
        Related Assets Widget,\
        Saved Content,\
        Social Bookmarks,\
        Social Networking,\
        Tags,\
        Translations Management,\
        Upgrades Content Management,\
        Web Content Administration,\
        Web Content Display,\
        Wiki

    testray.team.core-infrastructure.component.names=\
        Bean Portlet,\
        Bundle Blacklist,\
        Clustering,\
        Core Infrastructure Util,\
        Custom Fields,\
        Deployment,\
        Document Library Stores,\
        Ext,\
        File Install,\
        Gogo Shell,\
        IP Address,\
        JSP Compiler,\
        License,\
        Liferay Faces,\
        Locale,\
        Localization,\
        Logging,\
        Module Framework Servlet,\
        Portal Configuration,\
        Portal List Type,\
        Portal Services,\
        Rolling Restart,\
        Scheduler,\
        Server Administration,\
        Service Builder,\
        Setup Wizard,\
        Smoke,\
        TCK,\
        Templates Engine,\
        User Tracker,\
        Util,\
        Virtual Instances

    testray.team.customer-solutions.component.names=\
        Customer Portal,\
        Partner Portal,\
        Provisioning

    testray.team.database-infrastructure.component.names=\
        Data Cleanup,\
        Database Partitioning,\
        Database Upgrade Framework,\
        Database Upgrade Tool,\
        Headless Portal Instances API,\
        Upgrade Logging,\
        Upgrade Report

    testray.team.developer-tools.component.names=\
        Blade Samples,\
        Dev Tools,\
        Project Templates,\
        Source Formatter

    testray.team.frontend-infrastructure.component.names=\
        A11y Tool,\
        AMD Loader,\
        AUI,\
        Cadmin,\
        Client Extensions,\
        Frontend Custom Dialog,\
        Frontend Data Set,\
        Frontend JS API,\
        Liferay Sample Workspace,\
        Liferay Util Taglib,\
        Management Toolbar,\
        Maps,\
        Remote Apps,\
        Translation Manager,\
        Upgrades Remote Apps,\
        User Interface,\
        Walkthrough,\
        WYSIWYG

    testray.team.headless.component.names=\
        API Builder,\
        Connectors,\
        Data Migration Center,\
        Export/Import,\
        Headless Batch Engine API,\
        Headless Discovery Application,\
        Job Scheduler,\
        Object Entries REST APIs,\
        REST Builder,\
        REST Infrastructure,\
        Site Templates,\
        Staging,\
        Upgrades Staging

    testray.team.names=\
        analytics-cloud,\
        business-process-management,\
        ci-infrastructure,\
        commerce,\
        content-management,\
        core-infrastructure,\
        customer-solutions,\
        database-infrastructure,\
        developer-tools,\
        frontend-infrastructure,\
        headless,\
        page-management,\
        platform-experience,\
        publications,\
        search,\
        security,\
        site-management,\
        solutions

    testray.team.page-management.component.names=\
        Content Page Templates,\
        Content Pages,\
        Display Page Templates,\
        Fragment Administration,\
        IFrame Portlet,\
        Info Framework,\
        Language Widget,\
        Master Pages,\
        Nested Portlets Widget,\
        Page Administration,\
        Page Editor,\
        RSS Publisher Widget,\
        Simulation,\
        Templates,\
        Utility Pages,\
        Widget Configuration,\
        Widget Page Templates

    testray.team.platform-experience.component.names=\
        Accessibility Framework,\
        Accessibility Menu,\
        Clay,\
        Control Menu,\
        Feature Flag,\
        Instance Settings,\
        Language Override,\
        Product Menu,\
        Style Books,\
        System Settings,\
        Theme

    testray.team.publications.component.names=\
        Publications,\
        Upgrades Publications

    testray.team.search.component.names=\
        Collections,\
        Elasticsearch Impl,\
        OpenSearch 2 Impl,\
        Search Experiences,\
        SOLR Impl,\
        Upgrades Search,\
        Web Search

    testray.team.security.component.names=\
        AntiSamy,\
        Antivirus,\
        Audit,\
        CAPTCHA,\
        Content Security Policy,\
        Cookies,\
        Crypto,\
        LDAP,\
        Login,\
        Multi Factor Authentication,\
        OAuth 2,\
        OpenID Connect,\
        Password Policies,\
        Permissions,\
        SAML,\
        SCIM,\
        Security,\
        Service Access Policy Service,\
        Upgrades Security,\
        XSS

    testray.team.site-management.component.names=\
        Breadcrumb Widget,\
        Click to Chat,\
        Friendly URL Service,\
        Headless Site API,\
        Navigation Menus,\
        Site Initializer Extender,\
        Sitemap Protocol,\
        Sites Administration,\
        Sites Directory Widget,\
        Upgrades Site Management,\
        URL Redirections

    testray.team.solutions.component.names=\
        Liferay Learn Site Initializer,\
        Liferay Online,\
        Liferaybotics,\
        Marketplace,\
        Masterclass,\
        OSB Site Initializer EVP,\
        Patching Tool,\
        Site Initializer Liferay Marketplace,\
        Site Initializer Raylife AP,\
        Site Initializer Raylife D2C,\
        Site Initializer Testray,\
        Team Extranet,\
        Upgrades Solutions

##
## Utilities
##

    blacklist.portal.profile.names=\
        opensocial-portlet

    build.test.results.xml=true
    dummy.socket.proxy=-DsocksProxyHost=127.0.0.1 -DsocksProxyPort=8888 -Dhttp.nonProxyHosts="accounts.google.com|www.googleapis.com"
    #ip.address=
    patching.tool.latest.txt=LATEST-3.0.txt
    #print.java.process.on.fail=
    selenium.output.dir.name=${liferay.home}/poshi
    #setx.executable=
    #test.assert.console.errors=
    #test.assert.warning.exceptions=
    test.batch.full.setup=false
    #test.build.fix.pack.zip.url=
    #test.build.fix.pack.zip.url.previous=
    #test.company.default.locale=

    test.csv.report.property.names=\
        ignored,\
        portal.acceptance,\
        portal.fixpack.release,\
        portal.release,\
        portal.smoke,\
        portal.stable,\
        portal.upstream,\
        priority,\
        testray.component.names,\
        testray.main.component.name

    test.ext.properties.file=portal-web/poshi-ext.properties
    #test.fix.pack.base.url=
    test.get.location.max.retries=3
    test.get.location.timeout=30
    #test.include.dir.names=
    #test.jdbc.drivers.url=
    #test.latest.marketplace.apps=
    test.liferay.virtual.instance=true

    test.modules.force.deploy=\
        portal-search-opensearch2,\
        portal-search-solr8

    #test.name.skip.portal.instance=
    test.pause.on.failure=false
    test.portal.default.admin.password=test
    test.portal.instance=false
    test.poshi.logger.resources.url=https://cdn.jsdelivr.net/gh/liferay/liferay-portal@0a761a7b7fbdec982293199e111134590f2a4d3b/modules/test/poshi/poshi-runner/src/main/resources/META-INF/resources
    test.poshi.runner.default.namespace=LocalFile
    test.poshi.warnings.file.name=${project.dir}/poshi-warnings.xml
    #test.prepare.bundle.properties=
    test.retry.command.wait.time=3
    test.run.environment=CE
    test.save.screenshot=true
    test.save.web.page=false
    test.skip.tear.down=false
    test.smtp.server.dir=${project.dir}/lib/development
    test.smtp.server.url=http://mirrors.lax.liferay.com/repository.liferay.com/nexus/content/repositories/third-party/com/liferay/com.mockmock/1.4.0/com.mockmock-1.4.0.jar
    #test.url=http://localhost:8080
    timeout.app.server.wait=1800
    timeout.explicit.wait=60
    #unzip.executable=

##
## Virtual Host
##

    #virtual.host.name=

##
## VM
##

    vm.cluster-node-1.host=vm-1
    vm.cluster-node-1.ip=

    vm.cluster-node-2.host=vm-2
    vm.cluster-node-2.ip=

    vm.db.host=vm-3
    vm.db.ip=

    vm.drive=V:
    vm.host=vm-1
    vm.password=
    vm.username=

    vmware-cmd.executable=C:/Program Files (x86)/VMware/VMware Server/vmware-cmd.bat

##
## Workspaces
##

    workspaces.client.extension.names[liferay-sample-workspace]=\
        liferay-sample-batch,\
        liferay-sample-custom-element-1,\
        liferay-sample-custom-element-2,\
        liferay-sample-custom-element-3,\
        liferay-sample-etc,\
        liferay-sample-fds-cell-renderer,\
        liferay-sample-global-css,\
        liferay-sample-global-js-1,\
        liferay-sample-global-js-2,\
        liferay-sample-global-js-3,\
        liferay-sample-iframe-1,\
        liferay-sample-iframe-2,\
        liferay-sample-theme-css,\
        liferay-sample-theme-favicon,\
        liferay-sample-theme-spritemap