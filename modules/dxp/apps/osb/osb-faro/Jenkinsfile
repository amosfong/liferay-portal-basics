pipeline {
	agent {
		kubernetes {
			label "java"
		}
	}

	environment {
		ANT_OPTS = "-Xmx2560m"
		LABEL_BUILD_DATE = "${sh(script: "date -u +%Y-%m-%dT%H:%M:%SZ", returnStdout: true).trim()}"
		IMAGE_NAME = "liferaycloud/com-liferay-osb-faro"
		IMAGE_TAG_SUFFIX = "${FARO_ENVIRONMENT}-${sh(script: "date +%Y%m%d", returnStdout: true).trim()}-${sh(script: "git rev-parse --short=7 ${GIT_COMMIT}", returnStdout: true).trim()}"
		JAVA_HOME = "/opt/java/jdk8u292-b10"

		DOCKER_BUILD_ARGS = "--build-arg LABEL_BUILD_DATE=${LABEL_BUILD_DATE} --build-arg LABEL_VCS_REF=${GIT_COMMIT} --no-cache -f ./Dockerfile ./"
	}

	stages {
		stage("Build") {
			steps {
				withCredentials([
					string(credentialsId: "analytics_cloud_ci_ssh", variable: "SECRET"),
					string(credentialsId: "analytics_cloud_faro_license", variable: "LICENSE"),
					usernamePassword(credentialsId: "liferay-nexus-repository-credentials", passwordVariable: "NEXUS_PASSWORD", usernameVariable: "NEXUS_USERNAME")
				]) {
					sh '''
						export ANT_OPTS=-Xmx6g
						export FARO_ENVIRONMENT_NAME=$FARO_ENVIRONMENT
						export GRADLE_OPTS=-Xmx6g

						touch ~/.ssh/known_hosts

						ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

						echo "$SECRET" | base64 --decode > ~/.ssh/id_ed25519
						echo "\n" >> ~/.ssh/id_ed25519

						chmod 0400 ~/.ssh/id_ed25519

						echo "Host github.com" >> ~/.ssh/config
						echo "  User git" >> ~/.ssh/config
						echo "  Hostname github.com" >> ~/.ssh/config
						echo "  IdentityFile ~/.ssh/id_ed25519" >> ~/.ssh/config

						eval "$(ssh-agent -s)"

						ssh-add ~/.ssh/id_ed25519

						touch "build.$(whoami).properties"

						echo "build.repository.private.password=${NEXUS_PASSWORD}" >> "build.$(whoami).properties"
						echo "build.repository.private.url=https://repository-cdn.liferay.com/nexus/service/local/repo_groups/private/content/" >> "build.$(whoami).properties"
						echo "build.repository.private.username=${NEXUS_USERNAME}" >> "build.$(whoami).properties"

						ant update-gradle-properties

						ant setup-sdk

						ant setup-profile-dxp

						ant compile install-portal-snapshots

						cd modules/dxp/apps/osb/osb-faro

						../../../../../gradlew copyCloudResources -Dliferay.ci=true

						mkdir -p osb-faro-docker/cloud/license

						echo "Deploying license."

						echo "${LICENSE}" | base64 --decode > osb-faro-docker/cloud/license/license.xml
					'''
                }
			}
		}

		stage("Build Docker Image") {
			steps {
				dir("modules/dxp/apps/osb/osb-faro/osb-faro-docker/cloud") {
					script {
						withDockerRegistry([credentialsId: "dockerhub", url: ""]) {
							osbFaroImage = docker.build(
								"${IMAGE_NAME}:${IMAGE_TAG_SUFFIX}",
								"${DOCKER_BUILD_ARGS}")

                            osbFaroImage.push()
                        }
					}
				}
			}
		}
	}
}