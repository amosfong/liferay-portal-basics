@component-name = "portal-site-management"
definition {

	var baseURL = PropsUtil.get("portal.url");

	property custom.properties = "feature.flag.LPS-169981=true";
	property osgi.modules.includes = "osb-site-initializer-evp";
	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "OSB Site Initializer EVP";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Enable private pages") {
			PagesAdmin.enablePrivatePages();
		}

		task ("Create a new EVP Site") {
			EVPUtils.addEVPSite();
		}

		task ("Add Liferay Manager Role to allow Liferay Staff users to see Resquests and Organizations") {
			EVPUtils.addLiferayManagerUserRole();
		}

		task ("Create new organizations") {
			for (var organizationName : list "Organization Test 1, Organization Test 2") {
				var organizationId = JSONEVP.createOrganization(
					accountOwnerName = "User 4",
					bankingInfo = "Bank Test",
					city = "City Test",
					contactEmail = "OrganizationTest@liferay.com",
					contactName = "Contact Test",
					contactPhone = 12345,
					country = "Country Test",
					emailAddress = "employee@liferay.com",
					key_status = "awaitingApprovalOnEvp",
					organizationName = ${organizationName},
					organizationSite = "www.test.com.br",
					smallDescription = "Description Test",
					state = "State Test",
					status = "Awaiting Approval On EVP",
					street = "Street Test",
					taxId = 12345,
					zipCode = "12.345-67");
			}

			EVPUtils.managerApproval(
				listingPage = "Organization",
				organizationName = "Organization Test 2");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		ObjectAdmin.deleteAllCustomObjectsViaAPI();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "EVP Portal");
		}
	}

	@description = "LPS-172949 - Finance user should edit Organizations with 'Awaiting Finance Review' status."
	@priority = 4
	test CanFinanceUserEditOrganization {
		task ("Given that the finance user is in the Organization page") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "finance@liferay.com",
				userLoginFullName = "Finance User");

			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Organization");
		}

		task ("When the finance user edits an Organization with 'Awaiting Finance Review' status") {
			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test 2");

			MenuItem.click(menuItem = "Edit");

			EVPOrganization.fillOrganizationForm(organizationName = "Organization Test 2 Edit");
		}

		task ("Then the finance user can see the organization with edited name in the Organization Page list") {
			EVPUtils.viewStatus(
				organizationName = "Organization Test 2",
				status = "Verified");
		}
	}

	@description = "LPS-180358 - Verify that the status follow the correct workflow after a finance user request more info."
	@priority = 5
	test CanFinanceUserVerifyStatusAfterRequestMoreInfo {
		task ("Given that Finance user sees an organization with 'Awaiting finance Approval' status") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "finance@liferay.com",
				userLoginFullName = "Finance User");

			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Organization");

			EVPUtils.viewStatus(
				organizationName = "Organization Test 2",
				status = "Awaiting Finance Approval");
		}

		task ("When the Finance user asks for more information") {
			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test 2");

			MenuItem.click(menuItem = "Review");

			EVPUtils.changeStatus(
				button = "Request more Info",
				typeMessage = "Add more information");
		}

		task ("Then the organization status should be 'Awaiting More Info From Employee'") {
			EVPUtils.viewStatus(
				organizationName = "Organization Test 2",
				status = "Awaiting More Info From Employee");
		}
	}

	@description = "LPS-172949. Make sure the edit button does not appear when the user's role is 'User employee'."
	@priority = 5
	test EmployeeCannotEditOrganizationInAwatingApprovalStatus {
		task ("Given the Employee user is in the Organization page") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "employee@liferay.com",
				userLoginFullName = "Employee User");

			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Organization");
		}

		task ("When the Employee user clicks on ellipsis button of an Organization with 'Awaiting Finance Approval' status") {
			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test 2");
		}

		task ("Then the edit button doesn't appear") {
			MenuItem.viewNotPresent(menuItem = "Edit");
		}
	}

	@description = "LPS-172949. Make sure the edit button does not appear when the user's role is 'User manager'."
	@priority = 5
	test ManagerCannotEditOrganizationInAwatingApprovalStatus {
		task ("Given the Manager user is in the Organization page") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "manager@liferay.com",
				userLoginFullName = "Manager User");

			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Organization");
		}

		task ("When the Manager user clicks on ellipsis button of an Organization with 'Awaiting Finance Approval' status") {
			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test 2");
		}

		task ("Then the edit button doesn't appear") {
			MenuItem.viewNotPresent(menuItem = "Edit");
		}
	}

	@description = "LPS-180358 - Verify that the status follow the correct workflow after a manager user request more info."
	@priority = 5
	test VerifyStatusAfterRequestMoreInfo {
		task ("When the Manager click in 'Need more info' shows only one action.") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "manager@liferay.com",
				userLoginFullName = "Manager User");

			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Organization");

			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test 1");

			MenuItem.click(menuItem = "Review");

			EVPUtils.changeStatus(
				button = "Request more Info",
				typeMessage = "Please, add more info");
		}

		task ("Then the organization status should be 'Awaiting More Info From Employee'") {
			EVPUtils.viewStatus(
				organizationName = "Organization Test 1",
				status = "Awaiting More Info From Employee");
		}

		task ("When the Employee edit an Organization that is with 'Awaiting More Info From Employee' status") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "employee@liferay.com",
				userLoginFullName = "Employee User");

			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Organization");

			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test 1");

			MenuItem.click(menuItem = "Edit");

			EVPOrganization.fillOrganizationForm(organizationName = "Organization Test 1 Edited");
		}

		task ("Then the organization status should be 'Awaiting Approval on EVP'") {
			EVPUtils.viewStatus(
				organizationName = "Organization Test 1 Edited",
				status = "Awaiting Approval On EVP");
		}
	}

}