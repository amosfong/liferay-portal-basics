@component-name = "portal-site-management"
definition {

	var baseURL = PropsUtil.get("portal.url");

	property custom.properties = "feature.flag.LPS-169981=true";
	property osgi.modules.includes = "osb-site-initializer-evp";
	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "OSB Site Initializer EVP";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Enable private pages") {
			PagesAdmin.enablePrivatePages();
		}

		task ("Create a new EVP Site") {
			EVPUtils.addEVPSite();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ObjectAdmin.deleteAllCustomObjectsViaAPI();

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "EVP Portal");
		}
	}

	@description = "LPS-172931 - Finance user can generate a report with filters applied"
	@priority = 5
	test CanFinanceGenerateReportWithFilters {
		task ("Given the finance user is logged in") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "finance@liferay.com",
				userLoginFullName = "Finance User");
		}

		task ("And the user goes to Reports Page") {
			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Reports");
		}

		task ("When the user generates a financial report") {
			EVPUtils.generateFinancialReport(
				cardTitle = "EVP Financial Report",
				dateRange = "-1",
				endDateLabel = "Final Payment Date",
				initialDateLabel = "Initial Payment Date");
		}

		task ("The the user can generate the CSV file") {
			EVPUtils.downloadFileViaCurl(fileName = "payment-report.csv");
		}
	}

	@description = "LPS-172931 - Manager user can generate a report with filters applied"
	@priority = 5
	test CanManagerGenerateReportWithFilters {
		task ("Given the manager user is logged in") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "manager@liferay.com",
				userLoginFullName = "Manager User");
		}

		task ("And the user goes to Reports Page") {
			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Reports");
		}

		task ("When the user generates a requests listing") {
			EVPUtils.generateRequestsListing(
				cardTitle = "EVP Requests Listing",
				companyName = "Test ID",
				dateRange = "-1",
				endDateLabel = "Final Request Date",
				finalCompanyId = 4,
				fullName = "Test Test",
				initialCompanyId = 2,
				initialDateLabel = "Initial Request Date",
				listCheckbox = "Awaiting Approval On EVP,Closed,Liferay US");
		}

		task ("The the user can generate the CSV file") {
			EVPUtils.downloadFileViaCurl(fileName = "request-report.csv");
		}
	}

	@description = "LPS-164731 - Liferay Staff users should be able to see the Report card through 'Reports' Tab on top menu"
	@priority = 5
	test ReportCardShouldBeVisibleForLiferayStaffUsers {
		var table = '''
			| finance@liferay.com | Finance User |
			| manager@liferay.com | Manager User |
		''';

		var rawTable = TableUtil.newTable(${table});

		for (var row : table ${rawTable}) {
			var liferayStaffEmail = "${row[0]}";
			var userLoginFullName = "${row[1]}";

			task ("Given a Liferay Staff user is logged in") {
				User.logoutAndLoginPG(
					userLoginEmailAddress = ${liferayStaffEmail},
					userLoginFullName = ${userLoginFullName});
			}

			task ("When the user goes to Reports Page") {
				EVPUtils.gotoEVP();

				EVPNavigator.goToNavItem(navItem = "Reports");
			}

			task ("Then the user can see the cards presented on the page") {
				EVPUtils.assertCardsTitle(listcardTitle = "EVP Requests Listing,EVP Financial Report");
			}
		}
	}

	@description = "LPS-164731 - Employee user should not be able to see Reports tab on top menu"
	@priority = 4
	test ReportTabIsNotVisibleForEmployeeUser {
		task ("Given that the employee user is logged in") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "employee@liferay.com",
				userLoginFullName = "Employee User");
		}

		task ("When the user goes to EVP Site") {
			EVPUtils.gotoEVP();
		}

		task ("Then the user cannot see the Reports Page on top menu") {
			EVPNavigator.navItemNotPresent(navItem = "Reports");
		}
	}

}