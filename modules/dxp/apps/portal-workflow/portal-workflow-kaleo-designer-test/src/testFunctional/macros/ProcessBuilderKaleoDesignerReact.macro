definition {

	@summary = "Default summary"
	macro addActionToTimer(scriptType = null,actionPriority = null,actionDescription = null,script = null,actionName = null) {
		var javaScriptCountElement = '''
			return document.querySelectorAll("select[id='action-type']").length.toString();
		''';

		var actionsTotal = selenium.getEval(${javaScriptCountElement});

		var index = ${actionsTotal} + 1;

		Click(
			key_buttonName = "New Action",
			locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC");

		ProcessBuilderKaleoDesignerReact.fillTimerAction(
			actionDescription = ${actionDescription},
			actionName = ${actionName},
			actionPriority = ${actionPriority},
			index = ${index},
			script = ${script},
			scriptType = ${scriptType});
	}

	@summary = "Default summary"
	macro addConnector(connectorOut = null,connectorLabel = null,connectorOutLabel = null,connectorInLabel = null,nodeType = null,connectorIn = null,direction = null) {
		if (isSet(selectedNode)) {
			MouseOver.mouseOverInvisible(
				key_direction = ${direction},
				key_nodeType = ${connectorOut},
				locator1 = "ProcessBuilderKaleoDesignerReact#CONNECTOR_SOURCE_SELECTED",
				value1 = "0,0");

			MouseDown.mouseDownAt(
				key_direction = ${direction},
				key_nodeType = ${connectorOut},
				locator1 = "ProcessBuilderKaleoDesignerReact#CONNECTOR_SOURCE_SELECTED",
				value1 = "0,0");
		}

		if (isSet(connectorOutLabel)) {
			MouseOver.mouseOverInvisible(
				key_direction = ${direction},
				key_nodeLabel = ${connectorOutLabel},
				locator1 = "ProcessBuilderKaleoDesignerReact#CONNECTOR_SOURCE_BY_LABEL",
				value1 = "0,0");

			MouseDown.mouseDownAt(
				key_direction = ${direction},
				key_nodeLabel = ${connectorOutLabel},
				locator1 = "ProcessBuilderKaleoDesignerReact#CONNECTOR_SOURCE_BY_LABEL",
				value1 = "0,0");
		}
		else {
			MouseOver.mouseOverInvisible(
				key_direction = ${direction},
				key_nodeType = ${connectorOut},
				locator1 = "ProcessBuilderKaleoDesignerReact#CONNECTOR_SOURCE",
				value1 = "0,0");

			MouseDown.mouseDownAt(
				key_direction = ${direction},
				key_nodeType = ${connectorOut},
				locator1 = "ProcessBuilderKaleoDesignerReact#CONNECTOR_SOURCE",
				value1 = "0,0");
		}

		if (isSet(connectorInLabel)) {
			MouseMove(
				key_nodeLabel = ${connectorInLabel},
				key_nodeType = ${nodeType},
				locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE_TYPE_LABEL",
				value1 = "0,47");

			MouseUp.mouseUpAt(
				key_nodeLabel = ${connectorInLabel},
				key_nodeType = ${nodeType},
				locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE_TYPE_LABEL",
				value1 = "0,47");
		}
		else {
			MouseMove(
				key_nodeType = ${connectorIn},
				locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE",
				value1 = "0,47");

			MouseUp.mouseUpAt(
				key_nodeType = ${connectorIn},
				locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE",
				value1 = "0,47");
		}

		if (isSet(connectorLabel)) {
			Type(
				key_connectorLabel = "TRANSITION LABEL",
				locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_CONNECTOR_LABEL",
				value1 = ${connectorLabel});
		}
	}

	@summary = "Default summary"
	macro addIncomingConnectorNotPossible(connectorOut = null,connectorIn = null,direction = null) {
		MouseOver.mouseOverInvisible(
			key_direction = ${direction},
			key_nodeType = ${connectorOut},
			locator1 = "ProcessBuilderKaleoDesignerReact#CONNECTOR_SOURCE_SELECTED",
			value1 = "0,0");

		MouseDown.mouseDownAt(
			key_direction = ${direction},
			key_nodeType = ${connectorOut},
			locator1 = "ProcessBuilderKaleoDesignerReact#CONNECTOR_SOURCE_SELECTED",
			value1 = "0,0");

		MouseMove(
			key_nodeType = ${connectorIn},
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE",
			value1 = "0,47");

		MouseUp.mouseUpAt(
			key_nodeType = ${connectorIn},
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE",
			value1 = "0,47");

		AssertNotVisible(
			key_direction = ${direction},
			key_nodeType = ${connectorIn},
			locator1 = "ProcessBuilderKaleoDesignerReact#CONNECTOR_SOURCE");
	}

	@summary = "Default summary"
	macro addLanguage(translationOptionSelected = null) {
		Click(locator1 = "Button#PLUS");

		Click(
			key_translationOptionSelected = ${translationOptionSelected},
			locator1 = "ProcessBuilderKaleoDesignerReact#LANGUAGE_MANAGE_TRANSLATIONS_BUTTON");
	}

	@summary = "Default summary"
	macro addMultiplesActionsOnTimers(priorityValue = null,sectionOptionList = null,newSection = null,actionDescription = null,actionsTemplateValue = null,actionName = null) {
		Click(
			key_buttonName = ${newSection},
			locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC");

		if (isSet(sectionOptionList)) {
			for (var sectionOption : list ${sectionOptionList}) {
				if (isSet(actionName)) {
					Type(
						key_inputOption = "Name*",
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_ACTIONS_BY_POSITION",
						value1 = "${actionName} ${sectionOption}");
				}

				if (isSet(actionDescription)) {
					Type(
						key_inputOption = "Description",
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_ACTIONS_BY_POSITION",
						value1 = "${actionDescription} ${sectionOption}");
				}

				if (isSet(actionsTemplateValue)) {
					Type(
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TEMPLATE_TEXTAREA_ACTIONS_BY_POSITION",
						value1 = ${actionsTemplateValue});
				}

				if (isSet(priorityValue)) {
					Type(
						key_inputOption = "Priority",
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_ACTIONS_BY_POSITION",
						value1 = ${priorityValue});
				}

				if (isSet(newSection)) {
					Click(
						key_buttonName = ${newSection},
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC_BY_POSITION");
				}
			}
		}
	}

	@summary = "Default summary"
	macro addRoleTypeByPositionOnAssignments(sectionOptionList = null,roleTypeName = null,roleTypeRoleName = null,newSection = null,autoCreate = null,assignmentType = null) {
		Click(
			key_buttonName = ${newSection},
			locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC");

		if (isSet(sectionOptionList)) {
			for (var sectionOption : list ${sectionOptionList}) {
				if (${assignmentType} == "Role Type") {
					Type(
						key_inputOption = "Role",
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_ACTIONS_BY_POSITION",
						value1 = ${roleTypeName});

					Click.mouseOverClick(
						key_optionRoleName = ${roleTypeName},
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");

					Type(
						key_inputOption = "Role Name",
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_ACTIONS_BY_POSITION",
						value1 = ${roleTypeRoleName});

					Click.mouseOverClick(
						key_optionRoleName = ${roleTypeRoleName},
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");

					if (${autoCreate} == "true") {
						Click(
							key_sectionOption = ${sectionOption},
							locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_RECIPIENT_ROLE_TYPE_AUTOCREATE");
					}
				}

				if (isSet(newSection)) {
					Click(
						key_buttonName = ${newSection},
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC_BY_POSITION");
				}
			}
		}
	}

	@summary = "Default summary"
	macro addRoleTypeInNotifications(newSection = null,roleName = null,roleType = null) {
		Click(
			key_buttonName = ${newSection},
			locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC");

		Click.mouseOverClick(locator1 = "ProcessBuilderKaleoDesignerReact#ROLE_TYPE_FIELD_EMPTY");

		Click(
			key_optionRoleName = ${roleType},
			locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS",
			value1 = ${roleType});

		Click.mouseOverClick(locator1 = "ProcessBuilderKaleoDesignerReact#ROLE_NAME_FIELD_EMPTY");

		Click(
			key_optionRoleName = ${roleName},
			locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS",
			value1 = ${roleName});
	}

	@summary = "Default summary"
	macro addTimerWithSingleAction(timerDescription = null,durationScale = null,durationValue = null,actionDescription = null,script = null,recurrenceDurationScale = null,recurrence = null,actionType = null,reassignmentType = null,scriptType = null,timerName = null,actionPriority = null,recurrenceDurationValue = null,actionName = null) {
		if (IsElementPresent(key_buttonName = "New Timer", locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC")) {
			var javaScriptCountElement = '''
				return document.querySelectorAll("input[id='timerName']").length.toString();
			''';

			var actionsTotal = selenium.getEval(${javaScriptCountElement});

			var index = ${actionsTotal} + 1;

			Click(
				key_buttonName = "New Timer",
				locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC");
		}
		else {
			Click(
				key_propertyName = "Timer",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_NEW_BUTTON");
		}

		ProcessBuilderKaleoDesignerReact.fillTimerInformation(
			index = ${index},
			timerDescription = ${timerDescription},
			timerName = ${timerName});

		ProcessBuilderKaleoDesignerReact.fillTimerDuration(
			durationScale = ${durationScale},
			durationValue = ${durationValue},
			index = ${index},
			recurrence = ${recurrence},
			recurrenceDurationScale = ${recurrenceDurationScale},
			recurrenceDurationValue = ${recurrenceDurationValue});

		if (${actionType} == "Reassignment") {
			ProcessBuilderKaleoDesignerReact.fillTimerReassignment(reassignmentType = ${reassignmentType});
		}
		else {
			ProcessBuilderKaleoDesignerReact.fillTimerAction(
				actionDescription = ${actionDescription},
				actionName = ${actionName},
				actionPriority = ${actionPriority},
				index = ${index},
				script = ${script},
				scriptType = ${scriptType});
		}
	}

	@summary = "Default summary"
	macro backArrowOnSidebar() {
		Click(locator1 = "ProcessBuilderKaleoDesignerReact#BACK_TO_SIDEBAR_BUTTON");
	}

	@summary = "Default summary"
	macro clickButtonDone() {
		Click(locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_DONE_MODAL");
	}

	@summary = "Default summary"
	macro clickDefaultToggle(defaultConnector = null) {
		if (${defaultConnector} == "False") {
			Uncheck.uncheckToggleSwitch(locator1 = "ProcessBuilderKaleoDesignerReact#DEFAULT_TOGGLE_SWITCH");
		}
		else if (${defaultConnector} == "True") {
			Check.checkToggleSwitch(locator1 = "ProcessBuilderKaleoDesignerReact#DEFAULT_TOGGLE_SWITCH");
		}
	}

	@summary = "Default summary"
	macro closeModal() {
		Click(locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_CLOSE_MODAL");
	}

	@summary = "Default summary"
	macro deleteAssignment(roleName = null) {
		Click(locator1 = "ProcessBuilderKaleoDesignerReact#SELECTED_ASSIGNMENTS_VALUE");

		Click(
			key_roleName = ${roleName},
			locator1 = "ProcessBuilderKaleoDesignerReact#DELETE_ASSIGNMENT_BY_ROLE_NAME");
	}

	@summary = "Default summary"
	macro deleteByIconTrashSidebar(propertyValue = null) {
		Click(
			key_propertyValue = ${propertyValue},
			locator1 = "ProcessBuilderKaleoDesignerReact#ICON_TRASH_SIDEBAR_PROPERTY_BY_VALUE");
	}

	@summary = "Default summary"
	macro deleteBySidebarCard(sidebarCardName = null,propertyValue = null) {
		Click(
			key_propertyName = ${sidebarCardName},
			key_propertyValue = ${propertyValue},
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_PROPERTY");

		Click(
			locator1 = "WorkflowConfiguration#BLOGS_MOVE_TO_RECYCLE_BIN",
			sidebarCard = ${sidebarCardName});

		Click(locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_DELETE_MODAL");
	}

	@summary = "Default summary"
	macro deleteByTrashTopSidebar(sidebarPropertyName = null,modalMessage = null) {
		Click(
			key_propertyName = ${sidebarPropertyName},
			locator1 = "ProcessBuilderKaleoDesignerReact#ICON_TRASH_TOP_RIGHT_SIDEBAR");

		AssertElementPresent(
			key_modalMessage = ${modalMessage},
			locator1 = "ProcessBuilderKaleoDesignerReact#MODAL_MESSAGE");

		Click(locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_DELETE_MODAL");
	}

	@summary = "Default summary"
	macro deleteLanguage(translationOption = null) {
		Click(
			key_language = ${translationOption},
			locator1 = "ManageTranslations#LIST_ITEM_DELETE_LANGUAGE_BUTTON");
	}

	@summary = "Default summary"
	macro deleteNodeByDeleteKey(nodeType = null,title = null) {
		ProcessBuilderKaleoDesignerReact.viewPanelNodePresent(key_nodeType = ${nodeType});

		KeyPress.keyPressNoError(
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_BODY",
			value1 = "\DELETE");

		AssertElementPresent(
			key_title = ${title},
			locator1 = "ProcessBuilderKaleoDesignerReact#DELETE_MODAL");

		AssertElementPresent(
			key_modalMessage = "Are you sure you want to delete the selected ${nodeType} node?",
			locator1 = "ProcessBuilderKaleoDesignerReact#MODAL_MESSAGE");

		if (isSet(delete)) {
			Click(locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_DELETE_MODAL");

			ProcessBuilderKaleoDesignerReact.viewPanelNodeNotPresent(key_nodeType = ${nodeType});
		}

		if (isSet(close)) {
			Click(locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_CLOSE_MODAL");

			ProcessBuilderKaleoDesignerReact.viewPanelNodePresent(key_nodeType = ${nodeType});
		}

		if (isSet(cancel)) {
			Click(locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_CANCEL_MODAL");

			ProcessBuilderKaleoDesignerReact.viewPanelNodePresent(key_nodeType = ${nodeType});
		}
	}

	@summary = "Default summary"
	macro deleteNodeOrConnection(modalMessage = null,title = null) {
		Click(locator1 = "WorkflowConfiguration#BLOGS_MOVE_TO_RECYCLE_BIN");

		AssertElementPresent(
			key_title = ${title},
			locator1 = "ProcessBuilderKaleoDesignerReact#DELETE_MODAL");

		if (isSet(modalMessage)) {
			AssertElementPresent(
				key_modalMessage = ${modalMessage},
				locator1 = "ProcessBuilderKaleoDesignerReact#MODAL_MESSAGE");
		}

		Click(locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_DELETE_MODAL");
	}

	@summary = "Default summary"
	macro deleteRoleTypeInNotifications(index = null) {
		Click.mouseOverClick(
			key_index = ${index},
			locator1 = "ProcessBuilderKaleoDesignerReact#ICON_TRASH_ROLE_TYPE_BY_POSITION");
	}

	@summary = "Default summary"
	macro deleteTimerAction(actionName = null) {
		ClickNoError(
			actionName = ${actionName},
			locator1 = "ProcessBuilderKaleoDesignerReact#ACTION_DELETE_ICON");
	}

	@summary = "Default summary"
	macro diagramSourceSwitchView() {
		Click(locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_DIAGRAM_SOURCE_SWITCH");
	}

	@summary = "Default summary"
	macro dragAndDropDiagramNode(nodePosition = null,nodeLabel = null) {
		DragAndDrop.dragAndDrop(
			key_nodeLabel = ${nodeLabel},
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE_LABEL",
			value1 = ${nodePosition});
	}

	@summary = "Default summary"
	macro dragSidebarNodeAndMove(nodePosition = null,nodeLabel = null) {
		var key_nodeLabel = ${nodeLabel};

		AssertClick.pauseAssertTextClickAt(
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_NODE",
			value1 = ${nodeLabel});

		DragAndDrop.javaScriptDragAndDropObjectBelowTallNestedObject(
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_NODE",
			locator2 = "ProcessBuilderKaleoDesignerReact#REACT_PANEL",
			nodeLabel = ${nodeLabel});

		if (isSet(nodePosition)) {
			DragAndDrop.dragAndDrop(
				locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE_LABEL",
				nodeLabel = ${nodeLabel},
				value1 = ${nodePosition});
		}
	}

	@summary = "Default summary"
	macro editConnector(connectorLabelEdit = null,nodeName = null,connectorLabel = null) {
		ProcessBuilderKaleoDesignerReact.selectConnector(connectorLabel = ${connectorLabel});

		if (isSet(connectorLabelEdit)) {
			Type(
				locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_CONNECTOR_LABEL",
				value1 = ${connectorLabelEdit});
		}

		if (isSet(nodeName)) {
			Type(
				locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_CONNECTOR_NAME",
				value1 = ${nodeName});
		}
	}

	@summary = "Default summary"
	macro editNodeInformationField(infoOption = null,infoValue = null) {
		Type(
			key_infoOption = ${infoOption},
			locator1 = "ProcessBuilderKaleoDesignerReact#NODE_INFO_INPUT",
			value1 = ${infoValue});
	}

	@summary = "Default summary"
	macro editNotification(notificationTypeOption = null,notificationScript = null,recipientTypeOption = null,notificationsRoleType = null,notificationsRecipientTypeRoleName = null,newSection = null,description = null,autoCreate = null,templateLanguageOption = null,notificationsRoleTypeRoleName = null,executionTypeOption = null,name = null,notificationTemplateValue = null) {
		if (isSet(name)) {
			Type(
				key_inputOption = "Name",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${name});
		}

		if (isSet(description)) {
			Type(
				key_inputOption = "Description",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${description});
		}

		if (isSet(templateLanguageOption)) {
			Select(
				key_selectorField = "Template Language",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
				value1 = ${templateLanguageOption});
		}

		if (isSet(notificationTemplateValue)) {
			Type(
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TEMPLATE_TEXTAREA",
				value1 = ${notificationTemplateValue});
		}

		if (isSet(notificationTypeOption)) {
			Click(locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATION_FIELD");

			Click(locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_TYPE_DROPDOWN");

			Check.checkNotVisibleNoErrors(
				key_checkboxValue = ${notificationTypeOption},
				locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATION_TYPE_OPTIONS");
		}

		if (isSet(executionTypeOption)) {
			Select(
				key_selectorField = "Execution Type",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
				value1 = ${executionTypeOption});
		}

		if (isSet(recipientTypeOption)) {
			Select(
				key_selectorField = "Recipient Type",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
				value1 = ${recipientTypeOption});

			if (${recipientTypeOption} == "Role") {
				Type(
					locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_FIELD",
					value1 = ${notificationsRecipientTypeRoleName});

				Click.mouseOverClick(
					key_optionRoleName = ${notificationsRecipientTypeRoleName},
					locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");
			}

			if (${recipientTypeOption} == "Role Type") {
				Type(
					locator1 = "ProcessBuilderKaleoDesignerReact#ROLE_TYPE_FIELD",
					value1 = ${notificationsRoleType});

				Click.mouseOverClick(
					key_optionRoleName = ${notificationsRoleType},
					locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");

				Type(
					locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_FIELD",
					value1 = ${notificationsRoleTypeRoleName});

				Click.mouseOverClick(
					key_optionRoleName = ${notificationsRoleTypeRoleName},
					locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");

				if (${autoCreate} == "true") {
					Click(locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_RECIPIENT_ROLE_TYPE_AUTOCREATE");
				}
			}

			if (${recipientTypeOption} == "Scripted Recipient") {
				Type(
					locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_SCRIPTED_RECIPIENT_VALUE",
					value1 = ${notificationScript});
			}

			if (isSet(newSection)) {
				Click(
					key_buttonName = ${newSection},
					locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC");
			}
		}
	}

	@summary = "Default summary"
	macro editSourceXML(line = null,kdSourceXml = null) {
		var key_line = ${line};

		TripleClick(locator1 = "ProcessBuilderKaleoDesignerReact#XML_CODE_SPECIFIC_ELEMENT_LINE");

		TypeScreen(locator1 = ${kdSourceXml});
	}

	@summary = "Default summary"
	macro editWorkflowTitle(title = null) {
		PortletEntry.inputTitle(title = ${title});
	}

	@summary = "Default summary"
	macro fillTimerAction(scriptType = null,actionPriority = null,actionDescription = null,script = null,actionName = null) {
		if (!(isSet(index))) {
			var index = 1;
		}

		Type(
			key_index = ${index},
			locator1 = "ProcessBuilderKaleoDesignerReact#TIMER_ACTION_NAME_INDEX",
			value1 = ${actionName});

		if (isSet(actionDescription)) {
			Type(
				key_index = ${index},
				locator1 = "ProcessBuilderKaleoDesignerReact#TIMER_ACTION_DESCRIPTION_INDEX",
				value1 = ${actionDescription});
		}

		Select(
			key_index = ${index},
			locator1 = "ProcessBuilderKaleoDesignerReact#TIMER_ACTION_SCRIPT_TYPE_INDEX",
			value1 = ${scriptType});

		Type(
			key_index = ${index},
			locator1 = "ProcessBuilderKaleoDesignerReact#TIMER_ACTION_SCRIPT_INDEX",
			value1 = ${script});

		if (isSet(actionPriority)) {
			Type(
				key_fieldLabel = "Priority",
				key_indexNumber = ${index},
				locator1 = "TextInput#GENERIC_NUMBER_INPUT_N",
				value1 = ${actionPriority});
		}
	}

	@summary = "Default summary"
	macro fillTimerDuration(recurrence = null,durationScale = null,durationValue = null,recurrenceDurationValue = null,recurrenceDurationScale = null) {
		if (!(isSet(index))) {
			var index = 1;
		}

		if (isSet(durationScale)) {
			Select(
				key_index = ${index},
				locator1 = "ProcessBuilderKaleoDesignerReact#TIMER_DURATION_SCALE",
				value1 = ${durationScale});

			Type(
				key_fieldLabel = "Duration",
				key_indexNumber = ${index},
				locator1 = "TextInput#GENERIC_NUMBER_INPUT_N",
				value1 = ${durationValue});
		}

		if (${recurrence} == "true") {
			Check.checkToggleSwitch(
				key_index = ${index},
				key_toggleSwitchLabel = "Recurrence",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH_INDEX");
		}

		if (isSet(recurrenceDurationScale)) {
			Select(
				key_index = ${index},
				locator1 = "ProcessBuilderKaleoDesignerReact#TIMER_DURATION_SCALE_RECURRENCE",
				value1 = ${recurrenceDurationScale});

			Type(
				key_index = ${index},
				locator1 = "ProcessBuilderKaleoDesignerReact#TIMER_DURATION_VALUE_RECURRENCE",
				value1 = ${recurrenceDurationValue});
		}
	}

	@summary = "Default summary"
	macro fillTimerInformation(timerDescription = null,timerName = null) {
		if (!(isSet(index))) {
			var index = 1;
		}

		if (isSet(timerName)) {
			Type(
				inputFieldId = "timerName",
				key_indexNumber = ${index},
				locator1 = "TextInput#INPUT_ID_N",
				value1 = ${timerName});
		}

		if (isSet(timerDescription)) {
			Type(
				key_index = ${index},
				locator1 = "ProcessBuilderKaleoDesignerReact#TIMER_DESCRIPTION",
				value1 = ${timerDescription});
		}
	}

	@summary = "Default summary"
	macro fillTimerReassignment(reassignmentType = null) {
		Select(
			locator1 = "Select#ANY_ID",
			selectId = "action-type",
			value1 = "Reassignment");

		if (isSet(reassignmentType)) {
			Select(
				locator1 = "Select#ANY_ID",
				selectId = "reassignment-type",
				value1 = ${reassignmentType});
		}
	}

	@summary = "Default summary"
	macro gotoInfoWorkflowDefinition() {
		Click(locator1 = "Icon#INFO");
	}

	@summary = "Default summary"
	macro gotoManageTranslations() {
		Click(locator1 = "ProcessBuilderKaleoDesignerReact#MANAGE_TRANSLATIONS_BUTTON");
	}

	@summary = "Default summary"
	macro gotoNotification(notificationName = null) {
		ProcessBuilderKaleoDesignerReact.viewNotificationPresent(notificationName = ${notificationName});

		Click(
			key_nodeNotificationName = ${notificationName},
			locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATION_VALUE_NODE_SIDEBAR");
	}

	@summary = "Default summary"
	macro gotoSideBarProperty(propertyName = null,propertyValue = null) {
		Click(
			key_propertyName = ${propertyName},
			key_propertyValue = ${propertyValue},
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_PROPERTY",
			value1 = ${propertyValue});
	}

	@summary = "Default summary"
	macro hideSidebarFields(property = null) {
		Click(
			key_property = ${property},
			locator1 = "ProcessBuilderKaleoDesignerReact#HIDE_ANGLE_ICON");
	}

	@summary = "Default summary"
	macro openTranslationLanguageDropdown() {
		Click.javaScriptClick(
			key_title = "Select a Language",
			locator1 = "Button#ANY_TITLE");
	}

	@summary = "Default summary"
	macro restorePreviousVersion(number = null) {
		Click(
			key_number = ${number},
			locator1 = "ProcessBuilderKaleoDesignerReact#RESTORE_VERSION_ICON");
	}

	@summary = "Default summary"
	macro searchLanguage(languageName = null) {
		Type(
			locator1 = "ProcessBuilderKaleoDesignerReact#SEARCH_BAR_INPUT",
			value1 = ${languageName});
	}

	@summary = "Default summary"
	macro selectConnector(connectorLabel = null) {
		Click(
			key_connectorLabel = ${connectorLabel},
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_CONNECTOR_LABEL");
	}

	@summary = "Default summary"
	macro selectNode(nodeType = null) {
		Click(
			key_nodeType = ${nodeType},
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE");
	}

	@summary = "Default summary"
	macro selectNodeByLabel(nodeLabel = null) {
		Click(
			key_nodeLabel = ${nodeLabel},
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE_LABEL");
	}

	@summary = "Default summary"
	macro selectTranslationLanguage(key_locale = null) {
		ProcessBuilderKaleoDesignerReact.openTranslationLanguageDropdown();

		Click(
			key_locale = ${key_locale},
			locator1 = "Translation#DROPDOWN_MENU_ITEM");
	}

	@summary = "Default summary"
	macro uploadDefinition(workflowDefinitionFile = null,errorMessage = null) {
		if (IsElementNotPresent(locator1 = "ProcessBuilderKaleoDesignerReact#SOURCE_EDITOR")) {
			ProcessBuilderKaleoDesignerReact.diagramSourceSwitchView();
		}

		UploadDependencyFile.uploadFile(fileName = ${workflowDefinitionFile});

		Alert.viewSuccessMessageText(successMessage = "Definition imported successfully.");

		if (isSet(errorMessage)) {
			AssertClickNoError(
				locator1 = "Button#PUBLISH",
				value1 = "Publish");

			Alert.viewErrorMessage(errorMessage = ${errorMessage});
		}
	}

	@summary = "Default summary"
	macro viewActionsInfo(priorityValue = null,executionTypeOption = null,name = null,description = null,type = null,script = null) {
		if (isSet(name)) {
			AssertElementPresent(
				key_inputOption = "Name",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${name});
		}

		if (isSet(description)) {
			AssertElementPresent(
				key_inputOption = "Description",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${description});
		}

		if (isSet(type)) {
			AssertElementPresent(
				key_inputOption = "Type",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TYPE_TEXTAREA",
				value1 = ${type});
		}

		if (isSet(script)) {
			AssertElementPresent(
				key_inputOption = "Script",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SCRIPT_TEXTAREA",
				value1 = ${script});
		}

		if (isSet(executionTypeOption)) {
			AssertElementPresent(
				key_selectorField = "Execution Type",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
				value1 = ${executionTypeOption});
		}

		if (isSet(priorityValue)) {
			AssertElementPresent(
				key_inputOption = "Priority",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${priorityValue});
		}
	}

	@summary = "Default summary"
	macro viewActionsInsideTimersPresent(actionTypeOption = null,actionName = null) {
		if (isSet(actionName)) {
			AssertElementPresent(
				key_actionName = ${actionName},
				locator1 = "ProcessBuilderKaleoDesignerReact#ACTIONS_NAME_ON_TIMERS_FIELD");
		}

		if (isSet(actionTypeOption)) {
			AssertElementPresent(
				key_selectorField = "Type",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
				value1 = ${actionTypeOption});
		}
	}

	@summary = "Default summary"
	macro viewActiveNodeHighlighted(nodeType = null) {
		AssertElementPresent(
			key_nodeType = ${nodeType},
			locator1 = "ProcessBuilderKaleoDesignerReact#SELECTED_NODE");
	}

	@summary = "Default summary"
	macro viewAndDeleteBySidebarProperty(sidebarPropertyName = null,propertyValue = null) {
		AssertElementPresent(
			key_propertyName = ${sidebarPropertyName},
			key_propertyValue = ${propertyValue},
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_PROPERTY");

		Click(
			key_propertyName = ${sidebarPropertyName},
			locator1 = "ProcessBuilderKaleoDesignerReact#ICON_TRASH_SIDEBAR_PROPERTY");
	}

	@summary = "Default summary"
	macro viewAndFillActions(priorityValue = null,sectionOptionList = null,executionTypeOption = null,newSection = null,name = null,description = null,actionsTemplateValue = null,type = null,script = null) {
		if (IsElementPresent(key_propertyName = "Actions", locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_NEW_BUTTON")) {
			Click(
				key_propertyName = "Actions",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_NEW_BUTTON");
		}

		AssertElementPresent(
			key_inputOption = "Name",
			locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT");

		AssertElementPresent(
			key_inputOption = "Description",
			locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT");

		AssertElementPresent(
			key_inputOption = "Type",
			locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TYPE_TEXTAREA");

		AssertElementPresent(
			key_selectorField = "Execution Type",
			locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS");

		AssertElementPresent(
			key_inputOption = "Priority",
			locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT");

		if (isSet(singleAction)) {
			if (isSet(name)) {
				Type(
					key_inputOption = "Name",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
					value1 = ${name});
			}

			if (isSet(description)) {
				Type(
					key_inputOption = "Description",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
					value1 = ${description});
			}

			if (isSet(type)) {
				Select(
					key_inputOption = "Type",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TYPE_TEXTAREA",
					value1 = ${type});
			}

			if (isSet(script)) {
				Type(
					key_inputOption = "Script",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SCRIPT_TEXTAREA",
					value1 = ${script});
			}

			if (isSet(executionTypeOption)) {
				Select(
					key_selectorField = "Execution Type",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
					value1 = ${executionTypeOption});
			}

			if (isSet(priorityValue)) {
				Type(
					key_inputOption = "Priority",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
					value1 = ${priorityValue});
			}

			if (isSet(newSection)) {
				Click(
					key_buttonName = ${newSection},
					locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC");
			}
		}

		if (isSet(sectionOptionList)) {
			for (var sectionOption : list ${sectionOptionList}) {
				if (isSet(name)) {
					Type(
						key_inputOption = "Name",
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_ACTIONS_BY_POSITION",
						value1 = "${name} ${sectionOption}");
				}

				if (isSet(description)) {
					Type(
						key_inputOption = "Description",
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_ACTIONS_BY_POSITION",
						value1 = "${description} ${sectionOption}");
				}

				if (isSet(actionsTemplateValue)) {
					Select(
						key_index = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SCRIPT_TYPE_INDEX",
						value1 = ${type});

					Type(
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TEMPLATE_TEXTAREA_ACTIONS_BY_POSITION",
						value1 = "${actionsTemplateValue} ${sectionOption}");
				}

				if (isSet(executionTypeOption)) {
					Select(
						key_sectionOption = ${sectionOption},
						key_selectorField = "Execution Type",
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS_ACTIONS_BY_POSITION",
						value1 = ${executionTypeOption});
				}

				if (isSet(priorityValue)) {
					Type(
						key_inputOption = "Priority",
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_ACTIONS_BY_POSITION",
						value1 = "${priorityValue} ${sectionOption}");
				}

				if (isSet(newSection)) {
					Click(
						key_buttonName = ${newSection},
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC_BY_POSITION");
				}
			}
		}
	}

	@summary = "Default summary"
	macro viewAndFillAssignments(roleTypeName = null,roleTypeRoleName = null,groovyScript = null,userScreenName = null,roleName = null,autoCreate = null,assignmentType = null,resourceActionsText = null) {
		Click(locator1 = "ProcessBuilderKaleoDesignerReact#SELECTED_ASSIGNMENTS_VALUE");

		Select(
			key_selectorField = "Assignment Type",
			locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
			value1 = ${assignmentType});

		if (${assignmentType} == "Asset Creator") {
			ProcessBuilderKaleoDesignerReact.backArrowOnSidebar();
		}

		if (${assignmentType} == "Resource Actions") {
			Type(
				locator1 = "ProcessBuilderKaleoDesignerReact#RESOURCE_ACTIONS_TEXTAREA",
				value1 = ${resourceActionsText});

			ProcessBuilderKaleoDesignerReact.backArrowOnSidebar();
		}

		if (${assignmentType} == "Role") {
			Type(
				locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_FIELD",
				value1 = ${roleName});

			Click.mouseOverClick(
				key_optionRoleName = ${roleName},
				locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");

			ProcessBuilderKaleoDesignerReact.backArrowOnSidebar();
		}

		if (${assignmentType} == "Scripted Assignment") {
			Click(locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_ADD_SOURCE_CODE");

			Type.typeCodeMirrorEditorNoError(
				locator1 = "ProcessBuilderKaleoDesignerReact#GROOVY_SOURCE_EDITOR",
				value1 = ${groovyScript});

			AssertTextEquals.assertPartialText(
				locator1 = "ProcessBuilderKaleoDesignerReact#GROOVY_SOURCE_EDITOR",
				value1 = ${groovyScript});
		}

		if (${assignmentType} == "Role Type") {
			Type(
				locator1 = "ProcessBuilderKaleoDesignerReact#ROLE_TYPE_FIELD",
				value1 = ${roleTypeName});

			Click.mouseOverClick(
				key_optionRoleName = ${roleTypeName},
				locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");

			Type(
				locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_FIELD",
				value1 = ${roleTypeRoleName});

			Click.mouseOverClick(
				key_optionRoleName = ${roleTypeRoleName},
				locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");

			if (${autoCreate} == "true") {
				Click(locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_RECIPIENT_ROLE_TYPE_AUTOCREATE");
			}

			ProcessBuilderKaleoDesignerReact.backArrowOnSidebar();
		}

		if (${assignmentType} == "User") {
			Type(
				locator1 = "TextInput#INPUT_ID",
				value1 = ${userScreenName});

			Click(locator1 = "ProcessBuilderKaleoDesignerReact#ASSIGNMENT_TYPE_USER_SELECT_OPTION");

			ProcessBuilderKaleoDesignerReact.backArrowOnSidebar();
		}
	}

	@summary = "Default summary"
	macro viewAndFillNotification(notificationTypeOption = null,notificationScript = null,recipientTypeOption = null,notificationsRoleType = null,notificationsRecipientTypeRoleName = null,newSection = null,description = null,autoCreate = null,templateLanguageOption = null,notificationsRoleTypeRoleName = null,sectionOptionList = null,executionTypeOption = null,name = null,notificationTemplateValue = null) {
		if (isSet(newNotification)) {
			Click(
				key_propertyName = "Notification",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_NEW_BUTTON");
		}

		AssertElementPresent(
			key_inputOption = "Name",
			locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT");

		AssertElementPresent(
			key_inputOption = "Description",
			locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT");

		AssertElementPresent(
			key_selectorField = "Template Language",
			locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS");

		AssertElementPresent(locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TEMPLATE_TEXTAREA");

		AssertElementPresent(locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_TYPE_DROPDOWN");

		AssertElementPresent(
			key_selectorField = "Execution Type",
			locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS");

		AssertElementPresent(
			key_selectorField = "Recipient Type",
			locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS");

		if (isSet(singleAction)) {
			if (isSet(name)) {
				Type(
					key_inputOption = "Name",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
					value1 = ${name});
			}

			if (isSet(description)) {
				Type(
					key_inputOption = "Description",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
					value1 = ${description});
			}

			if (isSet(templateLanguageOption)) {
				Select(
					key_selectorField = "Template Language",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
					value1 = ${templateLanguageOption});
			}

			if (isSet(notificationTemplateValue)) {
				Type(
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TEMPLATE_TEXTAREA",
					value1 = ${notificationTemplateValue});
			}

			if (isSet(notificationTypeOption)) {
				Click(locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_TYPE_DROPDOWN");

				Check.checkNotVisibleNoErrors(
					key_checkboxValue = ${notificationTypeOption},
					locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATION_TYPE_OPTIONS");
			}

			if (isSet(executionTypeOption)) {
				Select(
					key_selectorField = "Execution Type",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
					value1 = ${executionTypeOption});
			}

			if (isSet(recipientTypeOption)) {
				Select(
					key_selectorField = "Recipient Type",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
					value1 = ${recipientTypeOption});

				if (${recipientTypeOption} == "Role") {
					Type(
						locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_FIELD",
						value1 = ${notificationsRecipientTypeRoleName});

					Click.javaScriptClick(
						key_optionRoleName = ${notificationsRecipientTypeRoleName},
						locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");
				}

				if (${recipientTypeOption} == "Role Type") {
					Type(
						locator1 = "ProcessBuilderKaleoDesignerReact#ROLE_TYPE_FIELD",
						value1 = ${notificationsRoleType});

					Click.mouseOverClick(
						key_optionRoleName = ${notificationsRoleType},
						locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");

					Type(
						locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_FIELD",
						value1 = ${notificationsRoleTypeRoleName});

					Click.mouseOverClick(
						key_optionRoleName = ${notificationsRoleTypeRoleName},
						locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");

					if (${autoCreate} == "true") {
						Click(locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_RECIPIENT_ROLE_TYPE_AUTOCREATE");
					}
				}

				if (${recipientTypeOption} == "Scripted Recipient") {
					Type(
						locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_SCRIPTED_RECIPIENT_VALUE",
						value1 = ${notificationScript});
				}

				if (isSet(newSection)) {
					Click(
						key_buttonName = ${newSection},
						locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC");
				}
			}
		}

		if (isSet(sectionOptionList)) {
			for (var sectionOption : list ${sectionOptionList}) {
				if (isSet(name)) {
					Type(
						key_inputOption = "Name",
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_BY_POSITION",
						value1 = "${name} ${sectionOption}");
				}

				if (isSet(description)) {
					Type(
						key_inputOption = "Description",
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_BY_POSITION",
						value1 = "${description} ${sectionOption}");
				}

				if (isSet(templateLanguageOption)) {
					Select(
						key_sectionOption = ${sectionOption},
						key_selectorField = "Template Language",
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS_BY_POSITION",
						value1 = ${templateLanguageOption});
				}

				if (isSet(notificationTemplateValue)) {
					Type(
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TEMPLATE_TEXTAREA_BY_POSITION",
						value1 = "${notificationTemplateValue} ${sectionOption}");
				}

				if (isSet(notificationTypeOption)) {
					Click(
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_TYPE_DROPDOWN_BY_POSITION");

					Check.checkNotVisibleNoErrors(
						key_checkboxValue = ${notificationTypeOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATION_TYPE_OPTIONS_BY_POSITION");
				}

				if (isSet(executionTypeOption)) {
					Select(
						key_sectionOption = ${sectionOption},
						key_selectorField = "Execution Type",
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS_BY_POSITION",
						value1 = ${executionTypeOption});
				}

				if (isSet(recipientTypeOption)) {
					Select(
						key_sectionOption = ${sectionOption},
						key_selectorField = "Recipient Type",
						locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS_BY_POSITION",
						value1 = ${recipientTypeOption});

					if (${recipientTypeOption} == "Role") {
						Type(
							locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_FIELD",
							value1 = ${notificationsRecipientTypeRoleName});

						Click.mouseOverClick(
							key_optionRoleName = ${notificationsRecipientTypeRoleName},
							locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");
					}

					if (${recipientTypeOption} == "Role Type") {
						Type(
							locator1 = "ProcessBuilderKaleoDesignerReact#ROLE_TYPE_FIELD",
							value1 = ${notificationsRoleType});

						Click.mouseOverClick(
							key_optionRoleName = ${notificationsRoleType},
							locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");

						Type(
							locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_FIELD",
							value1 = ${notificationsRoleTypeRoleName});

						Click.mouseOverClick(
							key_optionRoleName = ${notificationsRoleTypeRoleName},
							locator1 = "ProcessBuilderKaleoDesignerReact#RECIPIENT_TYPE_NAME_OPTIONS");

						if (${autoCreate} == "true") {
							Click(locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_RECIPIENT_ROLE_TYPE_AUTOCREATE");
						}
					}

					if (${recipientTypeOption} == "Scripted Recipient") {
						Type(
							locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_SCRIPTED_RECIPIENT_VALUE",
							value1 = ${notificationScript});
					}
				}

				if (isSet(newSection)) {
					Click(
						key_buttonName = ${newSection},
						key_sectionOption = ${sectionOption},
						locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_GENERIC_BY_POSITION");
				}
			}
		}
	}

	@summary = "Default summary"
	macro viewConnectorName(nodeName = null,connectorLabel = null) {
		ProcessBuilderKaleoDesignerReact.selectConnector(connectorLabel = ${connectorLabel});

		AssertTextEquals(
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_CONNECTOR_NAME",
			value1 = ${nodeName});
	}

	@summary = "Default summary"
	macro viewConnectorNotPresent(connectorLabel = null) {
		AssertElementNotPresent(
			key_connectorLabel = ${connectorLabel},
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_CONNECTOR_LABEL");
	}

	@summary = "Default summary"
	macro viewConnectorPresent(connectorLabel = null) {
		AssertTextEquals(
			key_connectorLabel = ${connectorLabel},
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_CONNECTOR_LABEL",
			value1 = ${connectorLabel});
	}

	@summary = "Default summary"
	macro viewCurrentVersionAtRevisionHistoryTab(number = null) {
		AssertVisible(
			key_number = ${number},
			locator1 = "ProcessBuilderKaleoDesignerReact#CURRENT_VERSION_FIELD");
	}

	@summary = "Default summary"
	macro viewDefaultToggleStatus(defaultStatus = null,connectorLabel = null) {
		ProcessBuilderKaleoDesignerReact.selectConnector(connectorLabel = ${connectorLabel});

		AssertElementPresent(
			key_defaultStatus = ${defaultStatus},
			locator1 = "ProcessBuilderKaleoDesignerReact#DEFAULT_TOGGLE_SWITCH_STATUS");

		if (${defaultStatus} == "True") {
			AssertElementPresent(
				key_connectorLabel = ${connectorLabel},
				key_transitionStyle = 0,
				locator1 = "ProcessBuilderKaleoDesignerReact#DEFAULT_TRANSITION_STYLE");
		}
		else {
			AssertElementPresent(
				key_connectorLabel = ${connectorLabel},
				key_transitionStyle = 5,
				locator1 = "ProcessBuilderKaleoDesignerReact#DEFAULT_TRANSITION_STYLE");
		}
	}

	@summary = "Default summary"
	macro viewDefinitionTitle(definitionTitle = null) {
		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = ${definitionTitle});
	}

	@summary = "Default summary"
	macro viewDetailsFieldsPresent() {
		AssertVisible(
			key_fieldOption = "CREATED",
			locator1 = "ProcessBuilderKaleoDesignerReact#DETAILS_FIELDS");

		AssertVisible(
			key_fieldOption = "LAST MODIFIED",
			locator1 = "ProcessBuilderKaleoDesignerReact#DETAILS_FIELDS");

		AssertVisible(
			key_fieldOption = "TOTAL MODIFICATIONS",
			locator1 = "ProcessBuilderKaleoDesignerReact#DETAILS_FIELDS");
	}

	@summary = "Default summary"
	macro viewDiagramEditor(joinLabelList = null,startLabelList = null,endLabelList = null,forkLabelList = null,taskLabelList = null) {
		AssertElementPresent(locator1 = "ProcessBuilderKaleoDesignerReact#REACT_PANEL");

		AssertElementPresent(
			key_nodeLabel = "Condition",
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_NODE");

		AssertElementPresent(
			key_nodeLabel = "End",
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_NODE");

		AssertElementPresent(
			key_nodeLabel = "Fork",
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_NODE");

		AssertElementPresent(
			key_nodeLabel = "Join",
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_NODE");

		AssertElementPresent(
			key_nodeLabel = "Join XOR",
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_NODE");

		AssertElementPresent(
			key_nodeLabel = "Start",
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_NODE");

		AssertElementPresent(
			key_nodeLabel = "State",
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_NODE");

		AssertElementPresent(
			key_nodeLabel = "Task",
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_NODE");

		if (isSet(startLabelList)) {
			for (var nodeLabel : list ${startLabelList}) {
				ProcessBuilderKaleoDesignerReact.viewSpecificNodeLabel(
					nodeLabel = ${nodeLabel},
					nodeType = "start");
			}
		}

		if (isSet(endLabelList)) {
			for (var nodeLabel : list ${endLabelList}) {
				ProcessBuilderKaleoDesignerReact.viewSpecificNodeLabel(
					nodeLabel = ${nodeLabel},
					nodeType = "end");
			}
		}

		if (isSet(joinLabelList)) {
			for (var nodeLabel : list ${joinLabelList}) {
				ProcessBuilderKaleoDesignerReact.viewSpecificNodeLabel(
					nodeLabel = ${nodeLabel},
					nodeType = "join");
			}
		}

		if (isSet(taskLabelList)) {
			for (var nodeLabel : list ${taskLabelList}) {
				ProcessBuilderKaleoDesignerReact.viewSpecificNodeLabel(
					nodeLabel = ${nodeLabel},
					nodeType = "task");
			}
		}

		if (isSet(forkLabelList)) {
			for (var nodeLabel : list ${forkLabelList}) {
				ProcessBuilderKaleoDesignerReact.viewSpecificNodeLabel(
					nodeLabel = ${nodeLabel},
					nodeType = "fork");
			}
		}
	}

	@summary = "Default summary"
	macro viewDuplicatedIdAlert() {
		AssertVisible(
			locator1 = "ProcessBuilderKaleoDesignerReact#ALERT_MESSAGE_FEEDBACK",
			value1 = "You have the same ID in two nodes:Please rename this with another words.");
	}

	@summary = "Default summary"
	macro viewFieldNotPresentOnSideBar(fieldName = null) {
		AssertElementNotPresent(
			key_fieldName = ${fieldName},
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_FIELD_LABEL");
	}

	@summary = "Default summary"
	macro viewFieldPresentOnSideBar(fieldName = null) {
		AssertElementPresent(
			key_fieldName = ${fieldName},
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_FIELD_LABEL");
	}

	@summary = "Default summary"
	macro viewInactiveNodeNotHighlighted(nodeType = null) {
		AssertElementNotPresent(
			key_nodeType = ${nodeType},
			locator1 = "ProcessBuilderKaleoDesignerReact#SELECTED_NODE");
	}

	@summary = "Default summary"
	macro viewInformationDetailsPresent(fieldOption = null,fieldInformation = null) {
		AssertVisible(
			key_fieldInformation = ${fieldInformation},
			key_fieldOption = ${fieldOption},
			locator1 = "ProcessBuilderKaleoDesignerReact#INFORMATION_DETAILS");
	}

	@summary = "Default summary"
	macro viewLanguageNotPresentAtManageTranslations(languageName = null) {
		AssertElementNotPresent(
			key_language = ${languageName},
			locator1 = "ManageTranslations#LIST_ITEM_LANGUAGE");
	}

	@summary = "Default summary"
	macro viewLanguageOptionNotPresent(languageOption = null) {
		AssertElementNotPresent(
			key_language = ${languageOption},
			locator1 = "ProcessBuilderKaleoDesignerReact#LANGUAGE_OPTION");
	}

	@summary = "Default summary"
	macro viewLanguageOptionPresent(languageOption = null) {
		AssertElementPresent(
			key_language = ${languageOption},
			locator1 = "ProcessBuilderKaleoDesignerReact#LANGUAGE_OPTION");
	}

	@summary = "Default summary"
	macro viewLanguagePresentAtManageTranslations(languageName = null) {
		AssertElementPresent(
			key_language = ${languageName},
			locator1 = "ManageTranslations#LIST_ITEM_LANGUAGE");
	}

	@summary = "Default summary"
	macro viewManageTranslationButton() {
		AssertElementPresent(locator1 = "ProcessBuilderKaleoDesignerReact#MANAGE_TRANSLATIONS_BUTTON");
	}

	@summary = "Default summary"
	macro viewModalNotPresent(modalTitle = null) {
		AssertElementNotPresent(
			key_modalTitle = ${modalTitle},
			locator1 = "ProcessBuilderKaleoDesignerReact#MANAGE_TRANSLATIONS_MODAL");
	}

	@summary = "Default summary"
	macro viewModalPresent(modalTitle = null) {
		AssertElementPresent(
			key_modalTitle = ${modalTitle},
			locator1 = "ProcessBuilderKaleoDesignerReact#MANAGE_TRANSLATIONS_MODAL");
	}

	@summary = "Default summary"
	macro viewMultipleActionPresent(priorityValue = null,sectionOptionList = null,executionTypeOption = null,name = null,description = null,actionsTemplateValue = null) {
		for (var sectionOption : list ${sectionOptionList}) {
			if (isSet(name)) {
				AssertTextEquals(
					key_inputOption = "Name",
					key_sectionOption = ${sectionOption},
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_ACTIONS_BY_POSITION",
					value1 = "${name} ${sectionOption}");
			}

			if (isSet(description)) {
				AssertTextEquals(
					key_inputOption = "Description",
					key_sectionOption = ${sectionOption},
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_ACTIONS_BY_POSITION",
					value1 = "${description} ${sectionOption}");
			}

			if (isSet(actionsTemplateValue)) {
				AssertTextEquals(
					key_sectionOption = ${sectionOption},
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TEMPLATE_TEXTAREA_ACTIONS_BY_POSITION",
					value1 = "${actionsTemplateValue} ${sectionOption}");
			}

			if (isSet(executionTypeOption)) {
				AssertTextEquals(
					key_sectionOption = ${sectionOption},
					key_selectorField = "Execution Type",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS_ACTIONS_BY_POSITION",
					value1 = ${executionTypeOption});
			}

			if (isSet(priorityValue)) {
				AssertTextEquals(
					key_inputOption = "Priority",
					key_sectionOption = ${sectionOption},
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_ACTIONS_BY_POSITION",
					value1 = "${priorityValue} ${sectionOption}");
			}
		}
	}

	@summary = "Default summary"
	macro viewMultipleNotificationPresent(notificationTypeOption = null,recipientTypeOption = null,sectionOptionList = null,executionTypeOption = null,name = null,description = null,notificationTemplateValue = null,templateLanguageOption = null) {
		for (var sectionOption : list ${sectionOptionList}) {
			if (isSet(name)) {
				AssertTextEquals(
					key_inputOption = "Name",
					key_sectionOption = ${sectionOption},
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_BY_POSITION",
					value1 = "${name} ${sectionOption}");
			}

			if (isSet(description)) {
				AssertTextEquals(
					key_inputOption = "Description",
					key_sectionOption = ${sectionOption},
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT_BY_POSITION",
					value1 = "${description} ${sectionOption}");
			}

			if (isSet(templateLanguageOption)) {
				AssertTextEquals(
					key_sectionOption = ${sectionOption},
					key_selectorField = "Template Language",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS_BY_POSITION",
					value1 = "${templateLanguageOption} ${sectionOption}");
			}

			if (isSet(notificationTemplateValue)) {
				AssertTextEquals(
					key_sectionOption = ${sectionOption},
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TEMPLATE_TEXTAREA_BY_POSITION",
					value1 = "${notificationTemplateValue} ${sectionOption}");
			}

			if (isSet(notificationTypeOption)) {
				Click(
					key_sectionOption = ${sectionOption},
					locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATIONS_TYPE_DROPDOWN_BY_POSITION");

				AssertElementPresent(
					key_checkboxValue = ${notificationTypeOption},
					locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATION_TYPE_OPTIONS_BY_POSITION");
			}

			if (isSet(executionTypeOption)) {
				AssertTextEquals(
					key_sectionOption = ${sectionOption},
					key_selectorField = "Execution Type",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS_BY_POSITION",
					value1 = ${executionTypeOption});
			}

			if (isSet(recipientTypeOption)) {
				AssertTextEquals(
					key_sectionOption = ${sectionOption},
					key_selectorField = "Recipient Type",
					locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS_BY_POSITION",
					value1 = ${recipientTypeOption});
			}
		}
	}

	@summary = "Default summary"
	macro viewNodeInfo(nameValue = null,descriptionValue = null,labelValue = null,scriptValue = null,nodeType = null) {
		ProcessBuilderKaleoDesignerReact.selectNode(nodeType = ${nodeType});

		var nodeNameValue = selenium.getElementValue("ProcessBuilderKaleoDesignerReact#NODE_NAME_GETTER");

		if (isSet(labelValue)) {
			AssertElementPresent(
				key_infoOption = "workflowDefinitionBaseNodeLabel",
				key_infoValue = ${labelValue},
				locator1 = "ProcessBuilderKaleoDesignerReact#NODE_INFO");
		}

		if (isSet(defaultNameValue)) {
			AssertElementPresent(
				key_infoOption = "workflowDefinitionBaseNodeName",
				key_infoValue = ${nodeNameValue},
				locator1 = "ProcessBuilderKaleoDesignerReact#NODE_INFO");

			AssertElementNotPresent(
				key_infoOption = "workflowDefinitionBaseNodeName",
				key_infoValue = "",
				locator1 = "ProcessBuilderKaleoDesignerReact#NODE_INFO");
		}

		if (isSet(nameValue)) {
			AssertElementPresent(
				key_infoOption = "workflowDefinitionBaseNodeName",
				key_infoValue = ${nameValue},
				locator1 = "ProcessBuilderKaleoDesignerReact#NODE_INFO");
		}

		if (isSet(descriptionValue)) {
			AssertElementPresent(
				key_infoOption = "workflowDefinitionBaseNodeDescription",
				key_infoValue = ${descriptionValue},
				locator1 = "ProcessBuilderKaleoDesignerReact#NODE_INFO");
		}

		if (isSet(scriptValue)) {
			AssertElementPresent(
				key_infoOption = "nodeScript",
				key_infoValue = ${scriptValue},
				locator1 = "ProcessBuilderKaleoDesignerReact#NODE_INFO");
		}
	}

	@summary = "Default summary"
	macro viewNodeInfoNotVisible(nameValue = null,descriptionValue = null,labelValue = null,scriptValue = null,nodeType = null) {
		ProcessBuilderKaleoDesignerReact.selectNode(nodeType = ${nodeType});

		if (isSet(labelValue)) {
			AssertNotVisible(
				key_infoOption = "workflowDefinitionBaseNodeLabel",
				key_infoValue = ${labelValue},
				locator1 = "ProcessBuilderKaleoDesignerReact#NODE_INFO");
		}

		if (isSet(nameValue)) {
			AssertNotVisible(
				key_infoOption = "workflowDefinitionBaseNodeName",
				key_infoValue = ${nameValue},
				locator1 = "ProcessBuilderKaleoDesignerReact#NODE_INFO");
		}

		if (isSet(descriptionValue)) {
			AssertNotVisible(
				key_infoOption = "workflowDefinitionBaseNodeDescription",
				key_infoValue = ${descriptionValue},
				locator1 = "ProcessBuilderKaleoDesignerReact#NODE_INFO");
		}

		if (isSet(scriptValue)) {
			AssertNotVisible(
				key_infoOption = "nodeScript",
				key_infoValue = ${scriptValue},
				locator1 = "ProcessBuilderKaleoDesignerReact#NODE_INFO");
		}
	}

	@summary = "Default summary"
	macro viewNodeLabel(nodeLabel = null) {
		AssertElementPresent(
			key_nodeLabel = ${nodeLabel},
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE_LABEL");
	}

	@summary = "Default summary"
	macro viewNodePosition(nodeXPosition = null,firstNodeXPosition = null,nodeYPosition = null,firstNodeYPosition = null,nodeType = null,nodeLabel = null) {
		var nodeXPositionChaged = selenium.getAttribute("//div[contains(@class,'node ${nodeType}-node selected')]@xpos");
		var nodeYPositionChaged = selenium.getAttribute("//div[contains(@class,'node ${nodeType}-node selected')]@ypos");

		AssertElementPresent(
			key_nodeLabel = ${nodeLabel},
			key_nodeXPosition = ${nodeXPosition},
			key_nodeYPosition = ${nodeYPosition},
			locator1 = "ProcessBuilderKaleoDesignerReact#NODE_POSITION");

		if (isSet(newPosition) && (${nodeXPositionChaged} != ${firstNodeXPosition}) && (${nodeYPositionChaged} != ${firstNodeYPosition})) {
			AssertElementNotPresent(
				key_nodeLabel = ${nodeLabel},
				key_nodeXPosition = ${firstNodeXPosition},
				key_nodeYPosition = ${firstNodeYPosition},
				locator1 = "ProcessBuilderKaleoDesignerReact#NODE_POSITION");
		}
	}

	@summary = "Default summary"
	macro viewNotificationInfo(notificationRecipientType = null,notificationDescription = null,notificationExecutionType = null,notificationTemplateValue = null,notificationTemplateLanguage = null,notificationTypeName = null,notificationName = null) {
		if (isSet(notificationName)) {
			AssertTextEquals(
				key_inputOption = "Name",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${notificationName});
		}

		if (isSet(notificationTemplateValue)) {
			AssertTextEquals(
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TEMPLATE_TEXTAREA",
				value1 = ${notificationTemplateValue});
		}

		if (isSet(notificationDescription)) {
			AssertTextEquals(
				key_inputOption = "Description",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${notificationDescription});
		}

		if (isSet(notificationTemplateLanguage)) {
			AssertSelectedLabel(
				key_selectorField = "Template Language",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
				value1 = ${notificationTemplateLanguage});
		}

		if (isSet(notificationTypeOption)) {
			AssertElementPresent(
				key_notificationTypeName = ${notificationTypeName},
				locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATION_LABEL");
		}

		if (isSet(notificationExecutionType)) {
			AssertSelectedLabel(
				key_selectorField = "Execution Type",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
				value1 = ${notificationExecutionType});
		}

		if (isSet(notificationRecipientType)) {
			AssertSelectedLabel(
				key_selectorField = "Recipient Type",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
				value1 = ${notificationRecipientType});
		}
	}

	@summary = "Default summary"
	macro viewNotificationNotPresent(notificationName = null) {
		AssertElementNotPresent(
			key_nodeNotificationName = ${notificationName},
			locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATION_VALUE_NODE_SIDEBAR");
	}

	@summary = "Default summary"
	macro viewNotificationPresent(notificationName = null) {
		AssertElementPresent(
			key_nodeNotificationName = ${notificationName},
			locator1 = "ProcessBuilderKaleoDesignerReact#NOTIFICATION_VALUE_NODE_SIDEBAR");
	}

	@summary = "Default summary"
	macro viewPanelNodeNotPresent(nodeType = null) {
		AssertElementNotPresent(
			key_nodeType = ${nodeType},
			locator1 = "ProcessBuilderKaleoDesignerReact#PANEL_NODE");
	}

	@summary = "Default summary"
	macro viewPanelNodePresent(nodeType = null) {
		AssertElementPresent(
			key_nodeType = ${nodeType},
			locator1 = "ProcessBuilderKaleoDesignerReact#PANEL_NODE");
	}

	@summary = "Default summary"
	macro viewPropertyNotPresentOnSideBar(propertyName = null,propertyValue = null) {
		AssertElementNotPresent(
			key_propertyName = ${propertyName},
			key_propertyValue = ${propertyValue},
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_PROPERTY");
	}

	@summary = "Default summary"
	macro viewPropertyPresentOnSideBar(propertyName = null,propertyValue = null) {
		AssertElementPresent(
			key_propertyName = ${propertyName},
			key_propertyValue = ${propertyValue},
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_PROPERTY");
	}

	@summary = "Default summary"
	macro viewPropertyValue(propertyName = null,propertyValue = null) {
		AssertElementPresent(
			key_propertyName = ${propertyName},
			key_propertyValue = ${propertyValue},
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_PROPERTY",
			value1 = ${propertyValue});
	}

	@summary = "Default summary"
	macro viewPublishButtonNotPresent() {
		Button.viewNotPresent(button = "Publish");
	}

	@summary = "Default summary"
	macro viewPublishButtonPresent() {
		AssertElementPresent(
			key_text = "Publish",
			locator1 = "Button#ANY");
	}

	@summary = "Default summary"
	macro viewRequiredField(requiredField = null) {
		AssertElementPresent(
			key_requiredField = ${requiredField},
			locator1 = "ProcessBuilderKaleoDesignerReact#REQUIRED_FIELD");

		AssertElementPresent(
			key_requiredField = ${requiredField},
			locator1 = "ProcessBuilderKaleoDesignerReact#REQUIRED_FEEDBACK_MESSAGE");

		if (isSet(save)) {
			Workflow.saveDefinition(newKaleoDesigner = "True");

			Alert.viewErrorMessage(errorMessage = "Some fields need to be filled:Please fill out the fields before saving or publishing.");
		}
	}

	@summary = "Default summary"
	macro viewRevisionHistoryFieldsPresent() {
		AssertVisible(
			key_fieldOption = "Current Version",
			locator1 = "ProcessBuilderKaleoDesignerReact#DETAILS_FIELDS");
	}

	@summary = "Default summary"
	macro viewRevisionHistoryVersion(number = null) {
		AssertVisible(
			key_number = ${number},
			locator1 = "ProcessBuilderKaleoDesignerReact#REVISION_HISTORY_VERSION");
	}

	@summary = "Default summary"
	macro viewRoleIDDisabled() {
		AssertElementPresent(locator1 = "ProcessBuilderKaleoDesignerReact#ROLE_ID_FIELD_DISABLED");
	}

	@summary = "Default summary"
	macro viewRoleNamePresentInSidebar(roleName = null) {
		AssertVisible(
			key_roleName = ${roleName},
			locator1 = "ProcessBuilderKaleoDesignerReact#ROLE_NAME_FIELD");
	}

	@summary = "Default summary"
	macro viewRoleTypeNotPresentInSidebar(roleType = null) {
		AssertElementNotPresent(
			key_roleType = ${roleType},
			locator1 = "ProcessBuilderKaleoDesignerReact#ROLE_TYPE_NAME_FIELD");
	}

	@summary = "Default summary"
	macro viewSaveButtonPresent() {
		AssertElementPresent(locator1 = "KaleoDesigner#SAVE_BUTTON");
	}

	@summary = "Default summary"
	macro viewSearchTranslationResultPresent(result = null) {
		AssertElementPresent(
			key_result = ${result},
			locator1 = "ProcessBuilderKaleoDesignerReact#LANGUAGE_NAME_RESULT");
	}

	@summary = "Default summary"
	macro viewSelectedAssignments(selectedAssignments = null) {
		AssertTextEquals(
			locator1 = "ProcessBuilderKaleoDesignerReact#SELECTED_ASSIGNMENTS_VALUE",
			value1 = ${selectedAssignments});
	}

	@summary = "Default summary"
	macro viewSelectedNode(nodeType = null) {
		AssertElementPresent(
			key_nodeType = ${nodeType},
			locator1 = "ProcessBuilderKaleoDesignerReact#SELECTED_NODE");
	}

	@summary = "Default summary"
	macro viewSelectedRoleAssignmentsByPosition(positonOption = null,inputOption = null,selectedRole = null) {
		AssertElementPresent(
			key_inputOption = ${inputOption},
			key_positonOption = ${positonOption},
			locator1 = "ProcessBuilderKaleoDesignerReact#ROLE_NAME_FIELD_ASSIGNMENTS_BY_POSITON",
			value1 = ${selectedRole});
	}

	@summary = "Default summary"
	macro viewSidebarFeedback(sidebarMessage = null) {
		AssertElementPresent(
			key_sidebarMessage = ${sidebarMessage},
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_MESSAGE_FEEDBACK");
	}

	@summary = "Default summary"
	macro viewSidebarHeaderPresent(header = null) {
		AssertElementPresent(
			key_header = ${header},
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_HEADER");
	}

	@summary = "Default summary"
	macro viewSourceDiagramToolTipDisplayed(content = null) {
		MouseOver(
			locator1 = "ProcessBuilderKaleoDesignerReact#BUTTON_DIAGRAM_SOURCE_SWITCH",
			value1 = "");

		AssertElementPresent(
			key_content = ${content},
			locator1 = "Tooltip#FLOATING_TOOLTIP_CONTENT");
	}

	@summary = "Default summary"
	macro viewSourceEditor() {
		AssertElementPresent(locator1 = "ProcessBuilderKaleoDesignerReact#SOURCE_EDITOR");
	}

	@summary = "Default summary"
	macro viewSpecificNodeLabel(nodeType = null,nodeLabel = null) {
		AssertTextEquals(
			key_nodeLabel = ${nodeLabel},
			key_nodeType = ${nodeType},
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE_LABEL_SPECIFIC",
			value1 = ${nodeLabel});
	}

	@summary = "Default summary"
	macro viewTimerNotPresent(propertyValue = null) {
		AssertElementNotPresent(
			key_propertyName = "Timers",
			key_propertyValue = ${propertyValue},
			locator1 = "ProcessBuilderKaleoDesignerReact#SIDEBAR_PROPERTY");
	}

	@summary = "Default summary"
	macro viewTimersInfo(priorityValue = null,actionTypeOption = null,durationValue = null,name = null,scaleTypeOption = null,description = null,actionDescription = null,actionsTemplateValue = null,actionName = null) {
		if (isSet(name)) {
			AssertElementPresent(
				key_inputOption = "Name",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${name});
		}

		if (isSet(description)) {
			AssertTextEquals(
				key_textareaName = "Description",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_DESCRIPTION_TEXTAREA",
				value1 = ${description});
		}

		if (isSet(scaleTypeOption)) {
			AssertElementPresent(
				key_selectorField = "Scale",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
				value1 = ${scaleTypeOption});
		}

		if (isSet(durationValue)) {
			AssertElementPresent(
				key_inputOption = "Duration",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${durationValue});
		}

		if (isSet(actionTypeOption)) {
			AssertElementPresent(
				key_selectorField = "Type",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_SELECTORS",
				value1 = ${actionTypeOption});
		}

		if (isSet(actionName)) {
			AssertElementPresent(
				key_inputOption = "Name*",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${actionName});
		}

		if (isSet(actionDescription)) {
			AssertTextEquals(
				key_inputOption = "Description",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${actionDescription});
		}

		if (isSet(actionsTemplateValue)) {
			AssertElementPresent(
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_TEMPLATE_TEXTAREA",
				value1 = ${actionsTemplateValue});
		}

		if (isSet(priorityValue)) {
			AssertElementPresent(
				key_inputOption = "Priority",
				locator1 = "ProcessBuilderKaleoDesignerReact#PROPERTIES_INPUT",
				value1 = ${priorityValue});
		}
	}

	@summary = "Default summary"
	macro viewToolTip(tooltipMessage = null) {
		MouseOver(
			key_tooltipMessage = ${tooltipMessage},
			locator1 = "ProcessBuilderKaleoDesignerReact#NODE_PROPERTY_TOOLTIP");

		AssertVisible(
			key_tooltipMessage = ${tooltipMessage},
			locator1 = "ProcessBuilderKaleoDesignerReact#NODE_PROPERTY_TOOLTIP");
	}

	@summary = "Default summary"
	macro viewTranslationDropdown(translationOptionSelected = null) {
		Click(
			key_translationOptionSelected = ${translationOptionSelected},
			locator1 = "ProcessBuilderKaleoDesignerReact#ICON_COUNTRY");

		AssertElementPresent(locator1 = "ProcessBuilderKaleoDesignerReact#TRANSLATION_DROPDOWN");
	}

	@summary = "Default summary"
	macro viewTranslationLanguageOptionNotPresent(currentTranslationOption = null,translationOption = null) {
		Click(
			key_translationOptionSelected = ${currentTranslationOption},
			locator1 = "ProcessBuilderKaleoDesignerReact#ICON_COUNTRY");

		AssertElementNotPresent(
			key_translationOption = ${translationOption},
			key_translationStatus = "warning",
			locator1 = "ProcessBuilderKaleoDesignerReact#TRANSLATION_COUNTRY_LABEL");
	}

	@summary = "Default summary"
	macro viewTranslationLanguageOptionPresent(translationOption = null,translationStatus = null) {
		AssertElementPresent(
			key_translationOption = ${translationOption},
			key_translationStatus = ${translationStatus},
			locator1 = "ProcessBuilderKaleoDesignerReact#TRANSLATION_COUNTRY_LABEL");
	}

	@summary = "Default summary"
	macro viewTranslationLanguageStatus(newTranslationOption = null,translationStatus = null) {
		AssertElementPresent(
			key_translationOption = ${newTranslationOption},
			key_translationStatus = ${translationStatus},
			locator1 = "ProcessBuilderKaleoDesignerReact#TRANSLATION_COUNTRY_LABEL");
	}

	@summary = "Default summary"
	macro viewXMLSourceCodeSnippet(codeSnippet = null,codeSnippetNotPresent = null) {
		AssertTextEquals.assertPartialText(
			key_codeSnippet = ${codeSnippet},
			locator1 = "ProcessBuilderKaleoDesignerReact#XML_CODE_SNIPPET",
			value1 = ${codeSnippet});

		if (isSet(codeSnippetNotPresent)) {
			AssertElementNotPresent(
				key_codeSnippet = ${codeSnippetNotPresent},
				locator1 = "ProcessBuilderKaleoDesignerReact#XML_CODE_SNIPPET");
		}
	}

	@summary = "Default summary"
	macro viewXMLSourceNodeCoordinate(coordinateY = null,coordinateX = null,lineY = null,lineX = null,nodeLabel = null) {
		ScrollWebElementIntoView(locator1 = "ProcessBuilderKaleoDesignerReact#SOURCE_EDITOR");

		AssertTextEquals.assertPartialTextAceEditor(
			key_elementOption = " ",
			key_elementValue = ${nodeLabel},
			locator1 = "ProcessBuilderKaleoDesignerReact#XML_CODE_SPECIFIC_ELEMENT",
			value1 = ${nodeLabel});

		AssertTextEquals.assertPartialTextAceEditor(
			key_line = ${lineX},
			locator1 = "ProcessBuilderKaleoDesignerReact#XML_CODE_METADATA_ELEMENT",
			value1 = ${coordinateX});

		AssertTextEquals.assertPartialTextAceEditor(
			key_line = ${lineY},
			locator1 = "ProcessBuilderKaleoDesignerReact#XML_CODE_METADATA_ELEMENT",
			value1 = ${coordinateY});
	}

}