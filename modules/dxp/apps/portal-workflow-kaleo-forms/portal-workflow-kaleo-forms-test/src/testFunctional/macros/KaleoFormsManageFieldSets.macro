definition {

	@summary = "Default summary"
	macro clickFilterAndOrderBy() {
		var filterOption = ${filterOption};

		Click(
			locator1 = "ContentDashboard#FILTER_AND_ORDER_DROPDOWN",
			value1 = "Filter and Order");

		Click(locator1 = "ContentDashboard#FILTER_BY_OPTION");
	}

	@summary = "Default summary"
	macro createNewFieldSet(fieldSetName = null,fieldType = null) {
		PortletEntry.inputName(name = ${fieldSetName});

		DynamicDataMapping.addField(
			field = ${fieldType},
			fieldFieldLabel = ${fieldType},
			fieldName = ${fieldType});

		KaleoFormsAdmin.saveFieldSet();

		AssertElementPresent(
			key_ddlDataDefinitionName = ${fieldSetName},
			locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME");
	}

	@summary = "Default summary"
	macro deleteOneFieldSet(fieldSetName = null) {
		Search.searchCP(searchTerm = ${fieldSetName});

		Click.waitForMenuToggleJSClick(
			key_kfFieldSetName = ${fieldSetName},
			locator1 = "KaleoFormsAdminSelectStructure#KALEO_FORMS_STRUCTURE_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro editFieldSets(newNameFieldset = null,newDescription = null,nameFieldset = null) {
		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Edit",
			rowEntry = ${nameFieldset});

		PortletEntry.inputName(name = ${newNameFieldset});

		if (isSet(newDescription)) {
			if (IsElementPresent(locator1 = "KaleoFormsManageFieldSets#DETAILS_PANEL_HEADER_COLLAPSED")) {
				Click(locator1 = "KaleoFormsManageFieldSets#DETAILS_PANEL_HEADER");

				Type(
					locator1 = "KaleoFormsManageFieldSets#DESCRIPTION_FIELD",
					value1 = ${newDescription});
			}
			else {
				Type(
					locator1 = "KaleoFormsManageFieldSets#DESCRIPTION_FIELD",
					value1 = ${newDescription});
			}
		}

		Button.clickSave();
	}

	@summary = "Default summary"
	macro searchFieldSet(fieldSetName = null) {
		Search.searchCP(searchTerm = ${fieldSetName});

		AssertElementPresent(
			key_submissionName = ${fieldSetName},
			locator1 = "WorkflowSubmissions#SUBMISSION_BY_NAME");
	}

	@summary = "Default summary"
	macro viewFieldSetCannotBeDeleted(fieldSetName = null) {
		Search.searchCP(searchTerm = ${fieldSetName});

		Click.waitForMenuToggleJSClick(
			key_kfFieldSetName = ${fieldSetName},
			locator1 = "KaleoFormsAdminSelectStructure#KALEO_FORMS_STRUCTURE_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewErrorMessage(errorMessage = "The structure cannot be deleted because it is required by one or more structure links.");
	}

	@summary = "Default summary"
	macro viewFieldSetCannotBeFound(fieldSetName = null) {
		Search.searchCP(searchTerm = ${fieldSetName});

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No Field Sets were found.");
	}

	@summary = "Default summary"
	macro viewFieldSetOrder(fieldSetList = null) {
		var rowNumber = 1;

		for (var nameFieldset : list ${fieldSetList}) {
			AssertElementPresent(
				key_nameFieldset = ${nameFieldset},
				key_rowNumber = ${rowNumber},
				locator1 = "KaleoFormsManageFieldSets#NAME_ROW_FROM_MANAGE_FIELD");

			var rowNumber = ${rowNumber} + 1;
		}
	}

	@summary = "Default summary"
	macro viewPageNumber(pageNumberList = null) {
		for (var pageNumber : list ${pageNumberList}) {
			var key_pageNumber = ${pageNumber};

			AssertElementPresent(locator1 = "KaleoFormsManageFieldSets#PAGINATION_NUMBER");
		}
	}

	@summary = "Default summary"
	macro viewUpDirectionOfSortButton() {
		if (IsElementPresent(locator1 = "KaleoFormsManageFieldSets#SORTED_UP_ICON")) {
			AssertElementPresent(locator1 = "KaleoFormsManageFieldSets#SORTED_UP_ICON");
		}
		else {
			Workflow.clickRevertSortDirection();
		}
	}

	@summary = "Default summary"
	macro viewValuesOnColumns(modifiedDateField = null,nameField = null,descriptionField = null,rowNumber = null) {
		var key_rowNumber = ${rowNumber};

		AssertTextEquals(
			locator1 = "KaleoFormsManageFieldSets#COLUMN_NAME_VALUE",
			value1 = ${nameField});

		AssertTextEquals(
			locator1 = "KaleoFormsManageFieldSets#COLUMN_DESCRIPTION_VALUE",
			value1 = ${descriptionField});

		AssertTextEquals(
			locator1 = "KaleoFormsManageFieldSets#COLUMN_MODIFIED_DATE_VALUE",
			value1 = ${modifiedDateField});
	}

}