@default = "clickAtType"
@summary = "Type to '${locator1}' the value '${value1}'"
definition {

	function clickAtType(locator1, value1) {
		selenium.waitForVisible(${locator1}, "true");

		selenium.waitForEditable(${locator1});

		selenium.mouseOver(${locator1});

		selenium.clickAt(${locator1}, ${value1});

		selenium.pause(1000);

		selenium.type(${locator1}, ${value1});

		selenium.pause(1000);

		selenium.clickAt(${locator1}, ${value1});

		selenium.pause(1000);
	}

	function sendKeys(locator1, value1) {
		selenium.waitForVisible(${locator1}, "true");

		selenium.waitForEditable(${locator1});

		selenium.mouseOver(${locator1});

		selenium.sendKeys(${locator1}, ${value1});
	}

	function sendKeysAceEditor(locator1, value1) {
		selenium.waitForElementPresent(${locator1}, "true");

		selenium.waitForEditable(${locator1});

		selenium.mouseOver(${locator1});

		selenium.sendKeysAceEditor(${locator1}, ${value1});
	}

	function type(locator1, value1) {
		selenium.waitForVisible(${locator1}, "true");

		selenium.waitForEditable(${locator1});

		selenium.mouseOver(${locator1});

		selenium.type(${locator1}, ${value1});
	}

	function typeAceEditor(locator1, value1) {
		selenium.waitForElementPresent(${locator1}, "true");

		selenium.waitForEditable(${locator1});

		selenium.mouseOver(${locator1});

		selenium.typeAceEditor(${locator1}, ${value1});
	}

	function typeAceEditorNoError(locator1, value1) {
		selenium.waitForElementPresent(${locator1}, "true");

		selenium.waitForEditable(${locator1});

		selenium.mouseOver(${locator1});

		selenium.typeAceEditor(${locator1}, ${value1});
	}

	function typeAceEditorNoMouseOver(locator1, value1) {
		selenium.waitForElementPresent(${locator1}, "true");

		selenium.waitForEditable(${locator1});

		selenium.typeAceEditor(${locator1}, ${value1});
	}

	function typeClickAt(locator1, value1) {
		selenium.waitForVisible(${locator1}, "true");

		selenium.waitForEditable(${locator1});

		selenium.mouseOver(${locator1});

		selenium.type(${locator1}, ${value1});

		selenium.clickAt(${locator1}, ${value1});
	}

	function typeCodeMirrorEditorNoError(locator1, value1) {
		selenium.waitForElementPresent(${locator1}, "true");

		selenium.mouseOver(${locator1});

		selenium.typeCodeMirrorEditor(${locator1}, ${value1});
	}

	function typeEditor(locator1, value1) {
		selenium.waitForVisible(${locator1}, "true");

		selenium.waitForEditable(${locator1});

		selenium.mouseOver(${locator1});

		selenium.typeEditor(${locator1}, ${value1});
	}

	function typeNoMouseOver(locator1, value1) {
		selenium.waitForElementPresent(${locator1}, "true");

		selenium.waitForEditable(${locator1});

		selenium.type(${locator1}, ${value1});
	}

	function typeNotVisibleNoMouseOver(locator1, value1) {
		selenium.waitForEditable(${locator1});

		selenium.type(${locator1}, ${value1});
	}

	function typePause(locator1, value1) {
		selenium.waitForVisible(${locator1}, "true");

		selenium.waitForEditable(${locator1});

		selenium.mouseOver(${locator1});

		selenium.type(${locator1}, ${value1});

		selenium.pause(5000);
	}

}