import com.liferay.gradle.plugins.patcher.PatchTask
import com.liferay.gradle.util.FileUtil
import com.liferay.gradle.util.OSDetector

import groovy.io.FileType

apply plugin: "com.liferay.patcher"

task deleteSrcDirectory(type: Delete)
task downloadSrc(type: Exec)
task jarManifest
task jarPatched(type: Zip)
task patch(type: PatchTask)
task unzip(type: Copy)

String openSearchJavaClientVersion = "2.8.0"
String srcUrl = "https://repo1.maven.org/maven2/org/opensearch/client/opensearch-java/${openSearchJavaClientVersion}/opensearch-java-${openSearchJavaClientVersion}-sources.jar"
String tempDir ="build/tmp/zip"

compileJava {
	dependsOn downloadSrc
	dependsOn unzip
}

deleteSrcDirectory {
	delete file('src/main/java/opensearch')
}

dependencies {
	api group: "com.fasterxml.jackson.core", name: "jackson-core", version: "2.15.2"
	api group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "2.15.2"
	api group: "com.google.code.findbugs", name: "jsr305", transitive: false, version: "3.0.2"
	api group: "com.liferay", name: "org.opensearch.rest.client", version: "2.7.0.LIFERAY-PATCHED-1"
	api group: "jakarta.json", name: "jakarta.json-api", transitive: false, version: "2.0.0"
	api group: "jakarta.json.bind", name: "jakarta.json.bind-api", transitive: false, version: "2.0.0"
	api group: "org.apache.httpcomponents.client5", name: "httpclient5", transitive: false, version: "5.1.4"
	api group: "org.apache.httpcomponents.core5", name: "httpcore5", transitive: false, version: "5.1.5"
	api group: "org.apache.logging.log4j", name: "log4j-api", version: "2.17.2"
	api group: "org.apache.logging.log4j", name: "log4j-core", version: "2.17.2"
	api group: "org.eclipse", name: "yasson", version: "2.0.2"
	api group: "org.eclipse.parsson", name: "parsson", version: "1.1.4"
	api group: "software.amazon.awssdk", name: "apache-client", version: "2.25.53"
	api group: "software.amazon.awssdk", name: "auth", version: "2.25.53"
	api group: "software.amazon.awssdk", name: "aws-crt-client", version: "2.25.53"
	api group: "software.amazon.awssdk", name: "sdk-core", version: "2.25.53"
	api group: "software.amazon.awssdk", name: "sts", version: "2.25.53"

	compileOnly group: "org.opensearch.client", name: "opensearch-java", transitive: false, version: "2.8.0"
}

downloadSrc {
	File srcTmpDir = new File(temporaryDir, "src")

	if (OSDetector.windows) {
		executable "cmd.exe"

		args "/c"
	}
	else {
		executable "/bin/sh"

		args "-c"
	}

	args "wget '${srcUrl}' -P '${tempDir}'"
}

jar {
	dependsOn downloadSrc
	dependsOn unzip
	dependsOn compileJava
	dependsOn jarPatched
	finalizedBy deleteSrcDirectory
	setActions([])
}

jarPatched {
	archiveFileName = jar.archiveFileName
	destinationDirectory = jar.destinationDirectory
	duplicatesStrategy = 'exclude'

	exclude "module-info.class"

	from sourceSets.main.output

	from {
		zipTree(configurations.compileOnly.singleFile)
	}

	mustRunAfter compileJava
	mustRunAfter generatePomFileForMavenPublication
	mustRunAfter processResources
}

jarSources {
	mustRunAfter patch
}

patch {
	ext {
		autoClean = false
	}

	fileNames "org/opensearch/client/opensearch/_types/mapping/Property.java"
	fileNames "org/opensearch/client/opensearch/cat/CatRequestBase.java"
	fileNames "org/opensearch/client/opensearch/cluster/stats/ClusterNodeCount.java"
	fileNames "org/opensearch/client/opensearch/cluster/stats/NodePackagingType.java"
	fileNames "org/opensearch/client/opensearch/snapshot/GetSnapshotResponse.java"
	fileNames "org/opensearch/client/transport/TransportOptions.java"
	fileNames "org/opensearch/client/transport/aws/AwsSdk2Transport.java"
	fileNames "org/opensearch/client/transport/httpclient5/ApacheHttpClient5Transport.java"

	originalLibModuleName = "opensearch-java"
}

unzip {
	dependsOn downloadSrc

	doLast {
		File srcTmpDir = new File("${tempDir}/src/org")

		srcTmpDir.eachFileRecurse(FileType.FILES) {
			if (it.name == "ApacheHttpClient5Transport.java" ||
				it.name == "AwsSdk2Transport.java" ||
				it.name == "CatRequestBase.java" ||
				it.name == "ClusterNodeCount.java" ||
				it.name == "GetSnapshotResponse.java" ||
				it.name == "NodePackagingType.java" ||
				it.name == "Property.java" ||
				it.name == "TransportOptions.java") {

				return
			}

			if (it.name.endsWith(".java")) {
				File destFile = new File(file("src/main/java"), FileUtil.relativize(it, srcTmpDir))

				destFile.parentFile.mkdirs()

				it.renameTo(destFile)
			}
		}
	}

	ext {
		autoClean = false
	}

	from zipTree(file("${tempDir}/opensearch-java-${openSearchJavaClientVersion}-sources.jar"))
	into file("${tempDir}/src")
}