import org.jdom2.Document
import org.jdom2.Element
import org.jdom2.input.SAXBuilder
import org.jdom2.output.Format
import org.jdom2.output.XMLOutputter

buildscript {
	dependencies {
		classpath group: "com.liferay", name: "org.jdom2", version: "2.0.6.LIFERAY-PATCHED-1"
	}

	repositories {
		maven {
			url "https://repository-cdn.liferay.com/nexus/content/groups/public"
		}
	}
}

apply plugin: "com.liferay.maven.plugin.builder"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

buildPluginDescriptor {
	ext {
		autoClean = false
	}

	finalizedBy formatSource

	forcedExclusions "com.ibm.icu:icu4j:2.6.1"
	goalPrefix = "service-builder"
}

copyCSS {
	mustRunAfter buildPluginDescriptor
}

dependencies {
	api group: "com.liferay", name: "org.apache.logging.log4j.core", version: "2.17.1.LIFERAY-PATCHED-1"
	api group: "com.liferay", name: "org.freemarker", transitive: false, version: "2.3.33.LIFERAY-PATCHED-2"
	api group: "com.puppycrawl.tools", name: "checkstyle", version: "8.29"
	api group: "com.thoughtworks.qdox", name: "qdox", version: "2.0-M5"
	api group: "commons-io", name: "commons-io", version: "2.15.1"
	api group: "jalopy", name: "jalopy", transitive: false, version: "1.5rc3"
	api group: "jaxen", name: "jaxen", transitive: false, version: "1.1.1"
	api group: "org.dom4j", name: "dom4j", transitive: false, version: "2.1.3"

	compileOnly group: "com.liferay", name: "com.liferay.petra.concurrent", version: "1.1.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.function", version: "5.5.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.io", version: "4.0.2"
	compileOnly group: "com.liferay", name: "com.liferay.petra.lang", version: "1.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.memory", version: "1.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.reflect", version: "7.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.sql.dsl.api", version: "1.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.string", version: "4.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.xml", version: "1.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.portal.tools.java.parser", version: "1.0.48"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "2.71.9"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.util.java", version: "17.1.5"
	compileOnly group: "org.apache.ant", name: "ant", transitive: false, version: "1.10.14"
	compileOnly group: "org.apache.maven", name: "maven-plugin-api", transitive: false, version: "3.0.4"
	compileOnly group: "xerces", name: "xercesImpl", transitive: false, version: "2.12.2"
}

deployDependencies {
	from (configurations.compileClasspath) {
		include "checkstyle-*.jar"
		include "org.freemarker-*.jar"
	}

	rename(/checkstyle-(.+)\.jar/, "checkstyle" + renameSuffix)
	rename(/org.freemarker-(.+)\.jar/, "org.freemarker" + renameSuffix)
}

liferay {
	deployDir = "../../../tools/sdk/dependencies/com.liferay.portal.tools.service.builder/lib"
}

processResources {
	doLast {
		File portalModelHintsXmlFile = new File(destinationDir, "META-INF/portal-model-hints.xml")

		SAXBuilder saxBuilder = new SAXBuilder()

		Document document = saxBuilder.build(portalModelHintsXmlFile)

		Element rootElement = document.getRootElement()

		List models = rootElement.getChildren("model")

		models.each {
			it.removeContent()
		}

		Format format = Format.getPrettyFormat()

		format.setTextMode(Format.TextMode.PRESERVE)

		XMLOutputter xmlOutputter = new XMLOutputter(format)

		xmlOutputter.output(document, new FileWriter(portalModelHintsXmlFile))

		String portalModelHintsXml = portalModelHintsXmlFile.text.trim()

		portalModelHintsXml = portalModelHintsXml.replace("<model-hints>", '''\

<!--
This file DOES NOT represent Liferay's complete portal-model-hints.xml file. It
is a fragment that contains only the hint collection and model definitions
needed by Service Builder to generate model services.
-->

<model-hints>''')

		portalModelHintsXmlFile.text = portalModelHintsXml.replace(' ' * 4, '\t')
	}

	from {
		File portalImplJarFile = configurations.compileOnly.find {
			it.name.startsWith "com.liferay.portal.impl-"
		}

		zipTree(portalImplJarFile)
	} {
		include "META-INF/portal-model-hints.xml"
	}

	into("com/liferay/blogs") {
		from "../../../modules/apps/blogs/blogs-service/service.xml"
	}
}

updateFileVersions {
	match(/\t\t\t\t<version>(\d.+)<\/version>/, "samples/pom.xml")
	match(/com\.liferay\.portal\.tools\.service\.builder=(\d.+)/, "../../sdk/gradle-plugins/src/main/resources/com/liferay/gradle/plugins/dependencies/portal-tools.properties")
	match(/\t\t<dependency name="com.liferay.portal.tools.service.builder" org="com.liferay" rev="(\d.+)" \/>/, "../../../tools/sdk/dependencies/com.liferay.portal.tools.service.builder/ivy.xml")
}