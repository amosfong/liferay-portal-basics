/**
 * Object
 * A Java client JAR is available for use with the group ID \'com.liferay\', artifact ID \'com.liferay.object.admin.rest.client\', and version \'1.0.71\'.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ObjectFieldSetting } from './objectFieldSetting';

export class ObjectField {
    'DBType'?: ObjectField.DBTypeEnum;
    'actions'?: { [key: string]: { [key: string]: string; }; };
    'businessType'?: ObjectField.BusinessTypeEnum;
    /**
    * @deprecated
    */
    'defaultValue'?: string;
    'externalReferenceCode'?: string;
    'id'?: number;
    'indexed'?: boolean;
    'indexedAsKeyword'?: boolean;
    'indexedLanguageId'?: string;
    'label'?: { [key: string]: string; };
    'listTypeDefinitionExternalReferenceCode'?: string;
    'listTypeDefinitionId'?: number;
    'localized'?: boolean;
    'name'?: string;
    'objectDefinitionExternalReferenceCode1'?: string;
    'objectFieldSettings'?: Array<ObjectFieldSetting>;
    'objectRelationshipExternalReferenceCode'?: string;
    'readOnly'?: ObjectField.ReadOnlyEnum;
    'readOnlyConditionExpression'?: string;
    'relationshipType'?: ObjectField.RelationshipTypeEnum;
    'required'?: boolean;
    'state'?: boolean;
    'system'?: boolean;
    /**
    * @deprecated
    */
    'type'?: ObjectField.TypeEnum;
    'unique'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "DBType",
            "baseName": "DBType",
            "type": "ObjectField.DBTypeEnum"
        },
        {
            "name": "actions",
            "baseName": "actions",
            "type": "{ [key: string]: { [key: string]: string; }; }"
        },
        {
            "name": "businessType",
            "baseName": "businessType",
            "type": "ObjectField.BusinessTypeEnum"
        },
        {
            "name": "defaultValue",
            "baseName": "defaultValue",
            "type": "string"
        },
        {
            "name": "externalReferenceCode",
            "baseName": "externalReferenceCode",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "indexed",
            "baseName": "indexed",
            "type": "boolean"
        },
        {
            "name": "indexedAsKeyword",
            "baseName": "indexedAsKeyword",
            "type": "boolean"
        },
        {
            "name": "indexedLanguageId",
            "baseName": "indexedLanguageId",
            "type": "string"
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "listTypeDefinitionExternalReferenceCode",
            "baseName": "listTypeDefinitionExternalReferenceCode",
            "type": "string"
        },
        {
            "name": "listTypeDefinitionId",
            "baseName": "listTypeDefinitionId",
            "type": "number"
        },
        {
            "name": "localized",
            "baseName": "localized",
            "type": "boolean"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "objectDefinitionExternalReferenceCode1",
            "baseName": "objectDefinitionExternalReferenceCode1",
            "type": "string"
        },
        {
            "name": "objectFieldSettings",
            "baseName": "objectFieldSettings",
            "type": "Array<ObjectFieldSetting>"
        },
        {
            "name": "objectRelationshipExternalReferenceCode",
            "baseName": "objectRelationshipExternalReferenceCode",
            "type": "string"
        },
        {
            "name": "readOnly",
            "baseName": "readOnly",
            "type": "ObjectField.ReadOnlyEnum"
        },
        {
            "name": "readOnlyConditionExpression",
            "baseName": "readOnlyConditionExpression",
            "type": "string"
        },
        {
            "name": "relationshipType",
            "baseName": "relationshipType",
            "type": "ObjectField.RelationshipTypeEnum"
        },
        {
            "name": "required",
            "baseName": "required",
            "type": "boolean"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "boolean"
        },
        {
            "name": "system",
            "baseName": "system",
            "type": "boolean"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ObjectField.TypeEnum"
        },
        {
            "name": "unique",
            "baseName": "unique",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return ObjectField.attributeTypeMap;
    }
}

export namespace ObjectField {
    export enum DBTypeEnum {
        BigDecimal = <any> 'BigDecimal',
        Boolean = <any> 'Boolean',
        Clob = <any> 'Clob',
        Date = <any> 'Date',
        DateTime = <any> 'DateTime',
        Double = <any> 'Double',
        Integer = <any> 'Integer',
        Long = <any> 'Long',
        String = <any> 'String'
    }
    export enum BusinessTypeEnum {
        Aggregation = <any> 'Aggregation',
        Attachment = <any> 'Attachment',
        AutoIncrement = <any> 'AutoIncrement',
        Boolean = <any> 'Boolean',
        Date = <any> 'Date',
        DateTime = <any> 'DateTime',
        Decimal = <any> 'Decimal',
        Encrypted = <any> 'Encrypted',
        Formula = <any> 'Formula',
        Integer = <any> 'Integer',
        LongInteger = <any> 'LongInteger',
        LongText = <any> 'LongText',
        MultiselectPicklist = <any> 'MultiselectPicklist',
        Picklist = <any> 'Picklist',
        PrecisionDecimal = <any> 'PrecisionDecimal',
        Relationship = <any> 'Relationship',
        RichText = <any> 'RichText',
        Text = <any> 'Text'
    }
    export enum ReadOnlyEnum {
        Conditional = <any> 'conditional',
        False = <any> 'false',
        True = <any> 'true'
    }
    export enum RelationshipTypeEnum {
        OneToMany = <any> 'oneToMany',
        OneToOne = <any> 'oneToOne'
    }
    export enum TypeEnum {
        BigDecimal = <any> 'BigDecimal',
        Boolean = <any> 'Boolean',
        Clob = <any> 'Clob',
        Date = <any> 'Date',
        DateTime = <any> 'DateTime',
        Double = <any> 'Double',
        Integer = <any> 'Integer',
        Long = <any> 'Long',
        String = <any> 'String'
    }
}
