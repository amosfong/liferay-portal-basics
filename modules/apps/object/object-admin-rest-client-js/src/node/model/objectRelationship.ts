/**
 * Object
 * A Java client JAR is available for use with the group ID \'com.liferay\', artifact ID \'com.liferay.object.admin.rest.client\', and version \'1.0.71\'.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ObjectField } from './objectField';

export class ObjectRelationship {
    'actions'?: { [key: string]: { [key: string]: string; }; };
    'deletionType'?: ObjectRelationship.DeletionTypeEnum;
    'edge'?: boolean;
    'externalReferenceCode'?: string;
    'id'?: number;
    'label'?: { [key: string]: string; };
    'name'?: string;
    'objectDefinitionExternalReferenceCode1'?: string;
    'objectDefinitionExternalReferenceCode2'?: string;
    'objectDefinitionId1'?: number;
    'objectDefinitionId2'?: number;
    'objectDefinitionModifiable2'?: boolean;
    'objectDefinitionName2'?: string;
    'objectDefinitionSystem2'?: boolean;
    'objectField'?: ObjectField;
    'parameterObjectFieldId'?: number;
    'parameterObjectFieldName'?: string;
    'reverse'?: boolean;
    'system'?: boolean;
    'type'?: ObjectRelationship.TypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "actions",
            "baseName": "actions",
            "type": "{ [key: string]: { [key: string]: string; }; }"
        },
        {
            "name": "deletionType",
            "baseName": "deletionType",
            "type": "ObjectRelationship.DeletionTypeEnum"
        },
        {
            "name": "edge",
            "baseName": "edge",
            "type": "boolean"
        },
        {
            "name": "externalReferenceCode",
            "baseName": "externalReferenceCode",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "objectDefinitionExternalReferenceCode1",
            "baseName": "objectDefinitionExternalReferenceCode1",
            "type": "string"
        },
        {
            "name": "objectDefinitionExternalReferenceCode2",
            "baseName": "objectDefinitionExternalReferenceCode2",
            "type": "string"
        },
        {
            "name": "objectDefinitionId1",
            "baseName": "objectDefinitionId1",
            "type": "number"
        },
        {
            "name": "objectDefinitionId2",
            "baseName": "objectDefinitionId2",
            "type": "number"
        },
        {
            "name": "objectDefinitionModifiable2",
            "baseName": "objectDefinitionModifiable2",
            "type": "boolean"
        },
        {
            "name": "objectDefinitionName2",
            "baseName": "objectDefinitionName2",
            "type": "string"
        },
        {
            "name": "objectDefinitionSystem2",
            "baseName": "objectDefinitionSystem2",
            "type": "boolean"
        },
        {
            "name": "objectField",
            "baseName": "objectField",
            "type": "ObjectField"
        },
        {
            "name": "parameterObjectFieldId",
            "baseName": "parameterObjectFieldId",
            "type": "number"
        },
        {
            "name": "parameterObjectFieldName",
            "baseName": "parameterObjectFieldName",
            "type": "string"
        },
        {
            "name": "reverse",
            "baseName": "reverse",
            "type": "boolean"
        },
        {
            "name": "system",
            "baseName": "system",
            "type": "boolean"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ObjectRelationship.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return ObjectRelationship.attributeTypeMap;
    }
}

export namespace ObjectRelationship {
    export enum DeletionTypeEnum {
        Cascade = <any> 'cascade',
        Disassociate = <any> 'disassociate',
        Prevent = <any> 'prevent'
    }
    export enum TypeEnum {
        OneToMany = <any> 'oneToMany',
        OneToOne = <any> 'oneToOne',
        ManyToMany = <any> 'manyToMany'
    }
}
