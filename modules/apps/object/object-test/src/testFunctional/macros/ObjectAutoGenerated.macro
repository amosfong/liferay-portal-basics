definition {

	@summary = "Default summary"
	macro addAttachment(fileName = null) {
		LexiconEntry.gotoAdd();

		WaitForSPARefresh();

		UploadDependencyFile.uploadFile(fileName = ${fileName});
	}

	@summary = "Default summary"
	macro assertFormatTypeOnRichText(specificType = null, richText = null, type = null) {
		AssertElementPresent(
			key_richText = ${richText},
			key_specificType = ${specificType},
			key_type = ${type},
			locator1 = "ObjectAutoGenerated#EDIT_RICH_TEXT");
	}

	@summary = "Default summary"
	macro checkToggleLimitCharacters() {
		Check.checkToggleSwitch(locator1 = "ObjectAutoGenerated#SHOW_COUNTER_TOGGLE");
	}

	@summary = "Default summary"
	macro ClickAtFileOnAttachment(fileOnAttachment = null) {
		Click(
			key_fileName = ${fileOnAttachment},
			locator1 = "ObjectAutoGenerated#FILE_ON_ATTACHMENT");
	}

	@summary = "Default summary"
	macro clickSelectFile() {
		Click(locator1 = "ObjectAutoGenerated#BUTTON_SELECT_FILE");
	}

	@summary = "Default summary"
	macro defineMaximumFileSize(maxFileSize = null) {
		Type(
			locator1 = "ObjectAutoGenerated#MAXIMUM_FILE_SIZE",
			value1 = ${maxFileSize});
	}

	@summary = "Default summary"
	macro defineMaximumNumberOfCharacters(maxCharacters = null) {
		ObjectAutoGenerated.checkToggleLimitCharacters();

		Type(
			locator1 = "ObjectAutoGenerated#MAXIMUM_NUMBER_OF_CHARACTERS",
			value1 = ${maxCharacters});
	}

	@summary = "Default summary"
	macro deleteFileOnAttachment() {
		SelectFrame(locator1 = "ObjectAutoGenerated#DELETE_ATTACHMENT_ICON");

		Click(locator1 = "ObjectAutoGenerated#DELETE_ATTACHMENT_ICON");

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro downloadFileOnAttachment(fileOnAttachment = null) {
		WaitForSPARefresh();

		MouseOver(
			key_fileName = ${fileOnAttachment},
			locator1 = "ObjectAutoGenerated#FILE_ON_ATTACHMENT");

		Click(locator1 = "Icon#EXPORT");

		DownloadTempFile();
	}

	@summary = "Default summary"
	macro typeAndEditRichText(richText = null, typeEdit = null) {
		ObjectAutoGenerated.typeAndSelectTextOnRichText(text = ${richText});

		if (${typeEdit} == "Strong") {
			Click(locator1 = "ObjectAutoGenerated#BOLD_TYPE_RICH_TEXT");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			ObjectAutoGenerated.assertFormatTypeOnRichText(
				richText = ${richText},
				specificType = ".",
				type = "strong");
		}

		if (${typeEdit} == "Italic") {
			Click(locator1 = "ObjectAutoGenerated#ITALIC_TYPE_RICH_TEXT");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			ObjectAutoGenerated.assertFormatTypeOnRichText(
				richText = ${richText},
				specificType = ".",
				type = "em");
		}

		if (${typeEdit} == "Underline") {
			Click(locator1 = "ObjectAutoGenerated#UNDERLINE_TYPE_RICH_TEXT");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			ObjectAutoGenerated.assertFormatTypeOnRichText(
				richText = ${richText},
				specificType = ".",
				type = "u");
		}

		if (${typeEdit} == "Numbered List") {
			Click(locator1 = "ObjectAutoGenerated#NUMBEREDLIST_TYPE_RICH_TEXT");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			ObjectAutoGenerated.assertFormatTypeOnRichText(
				richText = ${richText},
				specificType = "ol",
				type = "li");
		}

		if (${typeEdit} == "Bulleted List") {
			Click(locator1 = "ObjectAutoGenerated#BULLETEDLIST_TYPE_RICH_TEXT");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			ObjectAutoGenerated.assertFormatTypeOnRichText(
				richText = ${richText},
				specificType = "ul",
				type = "li");
		}
	}

	@summary = "Default summary"
	macro typeAndSelectTextOnRichText(text = null) {
		Type(
			locator1 = "CKEditor#BODY_FIELD_IFRAME",
			value1 = ${text});

		SelectFieldText(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Default summary"
	macro updateAttachment(fileName = null, newFileName = null) {
		ObjectPortlet.viewEntryDetails(entry = ${fileName});

		WaitForSPARefresh();

		ObjectAutoGenerated.viewFilePresentOnAttachment(fileOnAttachment = ${fileName});

		ObjectAutoGenerated.deleteFileOnAttachment();

		ObjectAutoGenerated.clickSelectFile();

		var filePath = TestCase.getDependenciesDirPath(fileName = ${newFileName});

		UploadFile(
			locator1 = "TextInput#FILE",
			value1 = ${filePath});

		ObjectAutoGenerated.viewFilePresentOnAttachment(fileOnAttachment = ${newFileName});

		Button.clickSave();
	}

	@summary = "Default summary"
	macro viewFilePresentOnAttachment(fileOnAttachment = null) {
		AssertElementPresent(
			key_fileName = ${fileOnAttachment},
			locator1 = "ObjectAutoGenerated#FILE_ON_ATTACHMENT");
	}

}