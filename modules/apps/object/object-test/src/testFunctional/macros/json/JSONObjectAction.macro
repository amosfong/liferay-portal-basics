definition {

	@summary = "Default summary"
	macro addEntryAction(inputAsValueTitle = null, valueName = null, inputAsValueAccountId = null, description = null, valueLastName = null, inputAsValueActive = null, valueTitle = null, inputAsValueScreenName = null, actionLabel = null, valueShippingAmount = null, inputAsValueCurrencyCode = null, valueOrderStatus = null, inputAsValueOrderStatus = null, valueType = null, whenAction = null, inputAsValueGivenName = null, inputAsValueLastName = null, objectERC = null, conditionExpression = null, valueScreenName = null, inputAsValueEmailAddress = null, valueGivenName = null, valueActive = null, valueCatalogId = null, active = null, valueAccountId = null, inputAsValueType = null, valueStreet1 = null, valueChannelId = null, valueEmailAddress = null, valueCurrencyCode = null, inputAsValueShippingAmount = null, objectNameAction = null, inputAsValueChannelId = null, valueProductType = null, inputAsValueProductType = null, objectName = null, inputAsValueStreet1 = null, inputAsValueCatalogId = null, actionName = null, inputAsValueName = null) {
		var portalURL = JSONCompany.getPortalURL();
		var objectId = JSONObject.getObjectId(objectName = ${objectName});

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = PropsUtil.get("default.admin.password");
		}

		if (${objectNameAction} == "Account") {
			var curl = '''
				${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
					-H 'Content-Type: application/json' \
					-u ${userEmailAddress}:${userPassword} \
					-d '{
						"active": "${active}",
						"conditionExpression": "${conditionExpression}",
						"description": "${description}",
						"errorMessage": {
							"en_US": "An error occurred when triggering the action"
						},
						"label": {
							"en_US": "${actionLabel}"
						},
						"name": "${actionName}",
						"objectActionExecutorKey": "add-object-entry",
						"objectActionTriggerKey": "${whenAction}",
						"parameters": {
							"objectDefinitionExternalReferenceCode": "L_ACCOUNT",
							"predefinedValues": [
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueName}",
									"label": {
										"en_US": "Name"
									},
									"name": "name",
									"value": "${valueName}"
								},
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueType}",
									"label": {
										"en_US": "Type"
									},
									"name": "type",
									"value": "${valueType}"
								}
							],
							"system": "true"
						}
					}'
			''';
		}

		if (${objectNameAction} == "Postal Address") {
			var curl = '''
				${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
					-H 'Content-Type: application/json' \
					-u ${userEmailAddress}:${userPassword} \
					-d '{
						"active": "${active}",
						"conditionExpression": "${conditionExpression}",
						"description": "${description}",
						"errorMessage": {
							"en_US": "An error occurred when triggering the action"
						},
						"label": {
							"en_US": "${actionLabel}"
						},
						"name": "${actionName}",
						"objectActionExecutorKey": "add-object-entry",
						"objectActionTriggerKey": "${whenAction}",
						"parameters": {
							"objectDefinitionExternalReferenceCode": "L_POSTAL_ADDRESS",
							"predefinedValues": [
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueName}",
									"label": {
										"en_US": "Name"
									},
									"name": "name",
									"value": "${valueName}"
								},
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueStreet1}",
									"label": {
										"en_US": "Street 1"
									},
									"name": "streetAddressLine1",
									"value": "${valueStreet1}"
								}
							],
							"system": "true"
						}
					}'
			''';
		}

		if (${objectNameAction} == "Commerce Order") {
			var curl = '''
				${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
					-H 'Content-Type: application/json' \
					-u ${userEmailAddress}:${userPassword} \
					-d '{
						"active": "${active}",
						"conditionExpression": "${conditionExpression}",
						"description": "${description}",
						"errorMessage": {
							"en_US": "An error occurred when triggering the action"
						},
						"label": {
							"en_US": "${actionLabel}"
						},
						"name": "${actionName}",
						"objectActionExecutorKey": "add-object-entry",
						"objectActionTriggerKey": "${whenAction}",
						"parameters": {
							"objectDefinitionExternalReferenceCode": "L_COMMERCE_ORDER",
							"predefinedValues": [
								{
									"businessType": "LongInteger",
									"inputAsValue": "${inputAsValueAccountId}",
									"label": {
										"en_US": "Account ID"
									},
									"name": "accountId",
									"value": "${valueAccountId}"
								},
								{
									"businessType": "LongInteger",
									"inputAsValue": "${inputAsValueChannelId}",
									"label": {
										"en_US": "Channel ID"
									},
									"name": "channelId",
									"value": "${valueChannelId}"
								},
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueCurrencyCode}",
									"label": {
										"en_US": "Currency Code"
									},
									"name": "currencyCode",
									"value": "${valueCurrencyCode}"
								},
								{
									"businessType": "Integer",
									"inputAsValue": "${inputAsValueOrderStatus}",
									"label": {
										"en_US": "Order Status"
									},
									"name": "orderStatus",
									"value": "${valueOrderStatus}"
								},
								{
									"businessType": "PrecisionDecimal",
									"inputAsValue": "${inputAsValueShippingAmount}",
									"label": {
										"en_US": "Shipping Amount"
									},
									"name": "shippingAmount",
									"value": "${valueShippingAmount}"
								}
							],
							"system": "true"
						}
					}'
			''';
		}

		if (${objectNameAction} == "Commerce Product Group") {
			var curl = '''
				${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
					-H 'Content-Type: application/json' \
					-u ${userEmailAddress}:${userPassword} \
					-d '{
						"active": "${active}",
						"conditionExpression": "${conditionExpression}",
						"description": "${description}",
						"errorMessage": {
							"en_US": "An error occurred when triggering the action"
						},
						"label": {
							"en_US": "${actionLabel}"
						},
						"name": "${actionName}",
						"objectActionExecutorKey": "add-object-entry",
						"objectActionTriggerKey": "${whenAction}",
						"parameters": {
							"objectDefinitionExternalReferenceCode": "L_COMMERCE_PRODUCT_GROUP",
							"predefinedValues": [
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueTitle}",
									"label": {
										"en_US": "Title"
									},
									"name": "title",
									"value": "${valueTitle}"
								}
							],
							"system": "true"
						}
					}'
			''';
		}

		if (${objectNameAction} == "Commerce Product") {
			var curl = '''
				${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
					-H 'Content-Type: application/json' \
					-u ${userEmailAddress}:${userPassword} \
					-d '{
						"active": "${active}",
						"conditionExpression": "${conditionExpression}",
						"description": "${description}",
						"errorMessage": {
							"en_US": "An error occurred when triggering the action"
						},
						"label": {
							"en_US": "${actionLabel}"
						},
						"name": "${actionName}",
						"objectActionExecutorKey": "add-object-entry",
						"objectActionTriggerKey": "${whenAction}",
						"parameters": {
							"objectDefinitionExternalReferenceCode": "L_COMMERCE_PRODUCT_DEFINITION",
							"predefinedValues": [
								{
									"businessType": "Boolean",
									"inputAsValue": "${inputAsValueActive}",
									"label": {
										"en_US": "Active"
									},
									"name": "active",
									"value": "${valueActive}"
								},
								{
									"businessType": "LongInteger",
									"inputAsValue": "${inputAsValueCatalogId}",
									"label": {
										"en_US": "Catalog ID"
									},
									"name": "catalogId",
									"value": "${valueCatalogId}"
								},
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueName}",
									"label": {
										"en_US": "Name"
									},
									"name": "name",
									"value": "${valueName}"
								},
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueProductType}",
									"label": {
										"en_US": "Product Type"
									},
									"name": "productType",
									"value": "${valueProductType}"
								}
							],
							"system": "true"
						}
					}'
			''';
		}

		if (${objectNameAction} == "User") {
			var curl = '''
				${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
					-H 'Content-Type: application/json' \
					-u ${userEmailAddress}:${userPassword} \
					-d '{
						"active": "${active}",
						"conditionExpression": "${conditionExpression}",
						"description": "${description}",
						"errorMessage": {
							"en_US": "An error occurred when triggering the action"
						},
						"label": {
							"en_US": "${actionLabel}"
						},
						"name": "${actionName}",
						"objectActionExecutorKey": "add-object-entry",
						"objectActionTriggerKey": "${whenAction}",
						"parameters": {
							"objectDefinitionExternalReferenceCode": "L_USER",
							"predefinedValues": [
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueScreenName}",
									"label": {
										"en_US": "Screen Name"
									},
									"name": "alternateName",
									"value": "${valueScreenName}"
								},
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueEmailAddress}",
									"label": {
										"en_US": "Email Address"
									},
									"name": "emailAddress",
									"value": "${valueEmailAddress}"
								},
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueLastName}",
									"label": {
										"en_US": "Last Name"
									},
									"name": "familyName",
									"value": "${valueLastName}"
								},
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueGivenName}",
									"label": {
										"en_US": "First Name"
									},
									"name": "givenName",
									"value": "${valueGivenName}"
								}
							],
							"system": "true"
						}
					}'
			''';
		}

		if (${objectNameAction} == "Organization") {
			var curl = '''
				${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
					-H 'Content-Type: application/json' \
					-u ${userEmailAddress}:${userPassword} \
					-d '{
						"active": "${active}",
						"conditionExpression": "${conditionExpression}",
						"description": "${description}",
						"errorMessage": {
							"en_US": "An error occurred when triggering the action"
						},
						"label": {
							"en_US": "${actionLabel}"
						},
						"name": "${actionName}",
						"objectActionExecutorKey": "add-object-entry",
						"objectActionTriggerKey": "${whenAction}",
						"parameters": {
							"objectDefinitionExternalReferenceCode": "L_ORGANIZATION",
							"predefinedValues": [
								{
									"businessType": "Text",
									"inputAsValue": "${inputAsValueName}",
									"label": {
										"en_US": "Name"
									},
									"name": "name",
									"value": "${valueName}"
								}
							],
							"system": "true"
						}
					}'
			''';
		}

		if (${objectNameAction} == "Custom Object") {
			var curl = '''
				${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
					-H 'Content-Type: application/json' \
					-u ${userEmailAddress}:${userPassword} \
					-d '{
						"active": "${active}",
						"conditionExpression": "${conditionExpression}",
						"description": "${description}",
						"errorMessage": {
							"en_US": "An error occurred when triggering the action"
						},
						"label": {
							"en_US": "${actionLabel}"
						},
						"name": "${actionName}",
						"objectActionExecutorKey": "add-object-entry",
						"objectActionTriggerKey": "${whenAction}",
						"parameters": {
							"objectDefinitionExternalReferenceCode": "${objectERC}",
							"system": "false"
						}
					}'
			''';
		}

		JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro groovyScriptAction(conditionExpression = null, groovyScript = null, active = null, description = null, actionLabel = null, objectName = null, whenAction = null, actionName = null) {
		var portalURL = JSONCompany.getPortalURL();
		var objectId = JSONObject.getObjectId(objectName = ${objectName});

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = PropsUtil.get("default.admin.password");
		}

		var curl = '''
			${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
				-H 'Content-Type: application/json' \
				-u ${userEmailAddress}:${userPassword} \
				-d '{
					"active": "${active}",
					"conditionExpression": "${conditionExpression}",
					"description": "${description}",
					"errorMessage": {
						"en_US": "An error occurred when triggering the action"
					},
					"label": {
						"en_US": "${actionLabel}"
					},
					"name": "${actionName}",
					"objectActionExecutorKey": "groovy",
					"objectActionTriggerKey": "${whenAction}",
					"parameters": {
						"script": "${groovyScript}"
					}
				}'
		''';

		JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro notificationAction(conditionExpression = null, active = null, description = null, notificationType = null, actionLabel = null, notificationERC = null, objectName = null, whenAction = null, actionName = null) {
		var portalURL = JSONCompany.getPortalURL();
		var objectId = JSONObject.getObjectId(objectName = ${objectName});

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = PropsUtil.get("default.admin.password");
		}

		var curl = '''
			${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
				-H 'Content-Type: application/json' \
				-u ${userEmailAddress}:${userPassword} \
				-d '{
					"active": "${active}",
					"conditionExpression": "${conditionExpression}",
					"description": "${description}",
					"errorMessage": {
						"en_US": "An error occurred when triggering the action"
					},
					"label": {
						"en_US": "${actionLabel}"
					},
					"name": "${actionName}",
					"objectActionExecutorKey": "notification",
					"objectActionTriggerKey": "${whenAction}",
					"parameters": {
						"notificationTemplateExternalReferenceCode": "${notificationERC}",
						"type": "${notificationType}"
					}
				}'
		''';

		JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro setAddEntryAction(inputAsValueTitle = null, valueName = null, inputAsValueAccountId = null, description = null, valueLastName = null, inputAsValueActive = null, inputAsValueScreenName = null, valueTitle = null, actionLabel = null, valueShippingAmount = null, inputAsValueCurrencyCode = null, valueOrderStatus = null, inputAsValueOrderStatus = null, valueType = null, inputAsValueGivenName = null, whenAction = null, inputAsValueLastName = null, objectERC = null, conditionExpression = null, inputAsValueEmailAddress = null, valueGivenName = null, valueScreenName = null, valueActive = null, valueCatalogId = null, active = null, valueAccountId = null, inputAsValueType = null, valueStreet1 = null, valueChannelId = null, valueEmailAddress = null, inputAsValueShippingAmount = null, valueCurrencyCode = null, objectNameAction = null, inputAsValueChannelId = null, valueProductType = null, inputAsValueProductType = null, inputAsValueStreet1 = null, objectName = null, inputAsValueCatalogId = null, actionName = null, inputAsValueName = null) {
		JSONObjectAction.addEntryAction(
			actionLabel = ${actionLabel},
			actionName = ${actionName},
			active = ${active},
			conditionExpression = ${conditionExpression},
			description = ${description},
			inputAsValueAccountId = ${inputAsValueAccountId},
			inputAsValueActive = ${inputAsValueActive},
			inputAsValueCatalogId = ${inputAsValueCatalogId},
			inputAsValueChannelId = ${inputAsValueChannelId},
			inputAsValueCurrencyCode = ${inputAsValueCurrencyCode},
			inputAsValueEmailAddress = ${inputAsValueEmailAddress},
			inputAsValueGivenName = ${inputAsValueGivenName},
			inputAsValueLastName = ${inputAsValueLastName},
			inputAsValueName = ${inputAsValueName},
			inputAsValueOrderStatus = ${inputAsValueOrderStatus},
			inputAsValueProductType = ${inputAsValueProductType},
			inputAsValueScreenName = ${inputAsValueScreenName},
			inputAsValueShippingAmount = ${inputAsValueShippingAmount},
			inputAsValueStreet1 = ${inputAsValueStreet1},
			inputAsValueTitle = ${inputAsValueTitle},
			inputAsValueType = ${inputAsValueType},
			objectERC = ${objectERC},
			objectName = ${objectName},
			objectNameAction = ${objectNameAction},
			valueAccountId = ${valueAccountId},
			valueActive = ${valueActive},
			valueCatalogId = ${valueCatalogId},
			valueChannelId = ${valueChannelId},
			valueCurrencyCode = ${valueCurrencyCode},
			valueEmailAddress = ${valueEmailAddress},
			valueGivenName = ${valueGivenName},
			valueLastName = ${valueLastName},
			valueName = ${valueName},
			valueOrderStatus = ${valueOrderStatus},
			valueProductType = ${valueProductType},
			valueScreenName = ${valueScreenName},
			valueShippingAmount = ${valueShippingAmount},
			valueStreet1 = ${valueStreet1},
			valueTitle = ${valueTitle},
			valueType = ${valueType},
			whenAction = ${whenAction});
	}

	@summary = "Default summary"
	macro setGroovyScriptAction(conditionExpression = null, groovyScript = null, active = null, description = null, objectName = null, whenAction = null, actionLabel = null, actionName = null) {
		JSONObjectAction.groovyScriptAction(
			actionLabel = ${actionLabel},
			actionName = ${actionName},
			active = ${active},
			conditionExpression = ${conditionExpression},
			description = ${description},
			groovyScript = ${groovyScript},
			objectName = ${objectName},
			whenAction = ${whenAction});
	}

	@summary = "Default summary"
	macro setNotificationAction(conditionExpression = null, active = null, description = null, objectName = null, whenAction = null, notificationType = null, actionLabel = null, actionName = null, notificationERC = null) {
		JSONObjectAction.notificationAction(
			actionLabel = ${actionLabel},
			actionName = ${actionName},
			active = ${active},
			conditionExpression = ${conditionExpression},
			description = ${description},
			notificationERC = ${notificationERC},
			notificationType = ${notificationType},
			objectName = ${objectName},
			whenAction = ${whenAction});
	}

	@summary = "Default summary"
	macro setUpdateEntryAction(objectERC = null, conditionExpression = null, active = null, description = null, objectName = null, whenAction = null, actionLabel = null, actionName = null) {
		JSONObjectAction.updateEntryAction(
			actionLabel = ${actionLabel},
			actionName = ${actionName},
			active = ${active},
			conditionExpression = ${conditionExpression},
			description = ${description},
			objectERC = ${objectERC},
			objectName = ${objectName},
			whenAction = ${whenAction});
	}

	@summary = "Default summary"
	macro setWebhookAction(conditionExpression = null, secretAction = null, urlAction = null, active = null, description = null, objectName = null, whenAction = null, actionLabel = null, actionName = null) {
		JSONObjectAction.webhookAction(
			actionLabel = ${actionLabel},
			actionName = ${actionName},
			active = ${active},
			conditionExpression = ${conditionExpression},
			description = ${description},
			objectName = ${objectName},
			secretAction = ${secretAction},
			urlAction = ${urlAction},
			whenAction = ${whenAction});
	}

	@summary = "Default summary"
	macro updateEntryAction(objectERC = null, conditionExpression = null, active = null, description = null, actionLabel = null, objectName = null, whenAction = null, actionName = null) {
		var portalURL = JSONCompany.getPortalURL();
		var objectId = JSONObject.getObjectId(objectName = ${objectName});

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = PropsUtil.get("default.admin.password");
		}

		var curl = '''
			${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
				-H 'Content-Type: application/json' \
				-u ${userEmailAddress}:${userPassword} \
				-d '{
					"active": "${active}",
					"conditionExpression": "${conditionExpression}",
					"description": "${description}",
					"errorMessage": {
						"en_US": "An error occurred when triggering the action"
					},
					"label": {
						"en_US": "${actionLabel}"
					},
					"name": "${actionName}",
					"objectActionExecutorKey": "update-object-entry",
					"objectActionTriggerKey": "${whenAction}",
					"parameters": {
						"objectDefinitionExternalReferenceCode": "${objectERC}"
					}
				}'
		''';

		JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro webhookAction(conditionExpression = null, secretAction = null, urlAction = null, active = null, description = null, actionLabel = null, objectName = null, whenAction = null, actionName = null) {
		var portalURL = JSONCompany.getPortalURL();
		var objectId = JSONObject.getObjectId(objectName = ${objectName});

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = PropsUtil.get("default.admin.password");
		}

		var curl = '''
			${portalURL}/o/object-admin/v1.0/object-definitions/${objectId}/object-actions \
				-H 'Content-Type: application/json' \
				-u ${userEmailAddress}:${userPassword} \
				-d '{
					"active": "${active}",
					"conditionExpression": "${conditionExpression}",
					"description": "${description}",
					"errorMessage": {
						"en_US": "An error occurred when triggering the action"
					},
					"label": {
						"en_US": "${actionLabel}"
					},
					"name": "${actionName}",
					"objectActionExecutorKey": "webhook",
					"objectActionTriggerKey": "${whenAction}",
					"parameters": {
						"secret": "${secretAction}",
						"url": "${urlAction}"
					}
				}'
		''';

		JSONCurlUtil.post(${curl});
	}

}