definition {

	@summary = "Default summary"
	macro addNewNotificationTemplate(notificationType = null) {
		Notifications.goToNotificationTemplateAdmin();

		LexiconEntry.gotoAdd();

		if (${notificationType} == "Email") {
			MenuItem.click(menuItem = ${notificationType});
		}
		else if (${notificationType} == "User Notification") {
			MenuItem.click(menuItem = ${notificationType});
		}
	}

	@summary = "Default summary"
	macro addNotificationTemplateAttachment(objectLabel = null) {
		ObjectAdmin.selectDropdownItem(
			labelName = "Data Source",
			optionName = ${objectLabel});

		if (!(isSet(fieldLabel))) {
			var fieldLabel = "";
		}

		Click(locator1 = "ObjectNotifications#FIELD_ATTACHMENTS_OBJECT");

		Click(
			key_fieldLabel = ${fieldLabel},
			locator1 = "ObjectNotifications#FIELD_ATTACHMENTS_OBJECT_SELECT_FIELD");
	}

	@summary = "Default summary"
	macro addNotificationViaAPI(cc = null, userPassword = null, bcc = null, subject = null, fromName = null, userEmailAddress = null, fromAddress = null, to = null, body = null, type = null) {
		JSONNotifications.addEntryNotificationQueue(
			bcc = ${bcc},
			body = ${body},
			cc = ${cc},
			fromAddress = ${fromAddress},
			fromName = ${fromName},
			subject = ${subject},
			to = ${to},
			type = ${type},
			userEmailAddress = ${userEmailAddress},
			userPassword = ${userPassword});
	}

	@summary = "Default summary"
	macro configureEmailNotificationTemplate(cc = null, bcc = null, emailBody = null, subject = null, name = null, fromName = null, description = null, fromAddress = null, entryTo = null) {
		Type(
			inputFieldId = "name",
			locator1 = "TextInput#INPUT_ID",
			value1 = ${name});

		Type(
			inputFieldId = "primaryRecipients",
			locator1 = "TextInput#INPUT_ID",
			value1 = ${entryTo});

		Type(
			inputFieldId = "fromAddress",
			locator1 = "TextInput#INPUT_ID",
			value1 = ${fromAddress});

		Type(
			inputFieldId = "fromName",
			locator1 = "TextInput#INPUT_ID",
			value1 = ${fromName});

		Type(
			inputFieldId = "subject",
			locator1 = "TextInput#INPUT_ID",
			value1 = ${subject});

		if (isSet(bcc)) {
			Type(
				inputFieldId = "secondaryRecipientsBCC",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${bcc});
		}

		if (isSet(cc)) {
			Type(
				inputFieldId = "secondaryRecipientsCC",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${cc});
		}

		if (isSet(description)) {
			Type(
				key_fieldId = "description",
				locator1 = "TextArea#ANY_ID",
				value1 = ${description});
		}

		Type(
			locator1 = "CKEditor#BODY_FIELD_IFRAME",
			value1 = ${emailBody});
	}

	@summary = "Default summary"
	macro configureUserNotificationTemplate(recipientType = null, subject = null, name = null, description = null, userName = null, indexRecipient = null) {
		Type(
			key_text = "Name",
			locator1 = "TextInput#ANY",
			value1 = ${name});

		Type(
			key_text = "subject",
			locator1 = "TextArea#ANY",
			value1 = ${subject});

		if (isSet(description)) {
			Type(
				key_text = "description",
				locator1 = "TextArea#ANY",
				value1 = ${description});
		}

		if (isSet(recipientType)) {
			Click(
				key_labelName = "Recipients",
				locator1 = "ObjectAdmin#CLAY_GENERIC_BUTTON");

			Click(
				index = ${indexRecipient},
				locator1 = "MenuItem#DROPDOWN_MENU_ITEM_SPECIFIC",
				value1 = ${recipientType});

			if (${recipientType} == "User") {
				Type(
					key_text = "Users",
					locator1 = "TextInput#ANY",
					value1 = ${userName});

				KeyPress(
					key_text = "Users",
					locator1 = "TextInput#ANY",
					value1 = "\ENTER");
			}
		}
	}

	@summary = "Default summary"
	macro deleteNotificationEntry(triggerBy = null) {
		Click(
			key_text = ${triggerBy},
			locator1 = "ObjectNotifications#DELETE_NOTIFICATION_IN_QUEUE");
	}

	@summary = "Default summary"
	macro deleteNotificationTemplate(templateName = null) {
		Click(
			key_objectLabel = ${templateName},
			locator1 = "ObjectAdmin#OBJECT_KEBAB_MENU");

		MenuItem.clickNoError(menuItem = "Delete");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro editNotificationTemplate(cc = null, notificationTemplateName = null, bcc = null, emailBody = null, subject = null, name = null, fromName = null, description = null, fromAddress = null, entryTo = null, externalReferenceCode = null) {
		Click(
			key_name = ${notificationTemplateName},
			locator1 = "ObjectAdmin#TABLE_LIST_TITLE");

		if (isSet(name)) {
			Type(
				inputFieldId = "name",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${name});
		}

		if (isSet(description)) {
			Type(
				key_fieldId = "description",
				locator1 = "TextArea#ANY_ID",
				value1 = ${description});
		}

		if (isSet(cc)) {
			Type(
				inputFieldId = "secondaryRecipientsCC",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${cc});
		}

		if (isSet(bcc)) {
			Type(
				inputFieldId = "secondaryRecipientsBCC",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${bcc});
		}

		if (isSet(entryTo)) {
			Type(
				inputFieldId = "primaryRecipients",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${entryTo});
		}

		if (isSet(fromAddress)) {
			Type(
				inputFieldId = "fromAddress",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${fromAddress});
		}

		if (isSet(fromName)) {
			Type(
				inputFieldId = "fromName",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${fromName});
		}

		if (isSet(subject)) {
			Type(
				inputFieldId = "subject",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${subject});
		}

		if (isSet(emailBody)) {
			Type(
				locator1 = "CKEditor#BODY_FIELD_IFRAME",
				value1 = ${emailBody});
		}

		if (isSet(externalReferenceCode)) {
			ObjectAdmin.editExternalReferenceCode(externalReferenceCode = ${externalReferenceCode});
		}
	}

	@summary = "Default summary"
	macro resendNotificationInTheQueue(triggerBy = null) {
		Click(
			key_text = ${triggerBy},
			locator1 = "Icon#ANY_VERTICAL_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Resend");
	}

	@summary = "Default summary"
	macro viewEmailNotificationTemplateDetails(cc = null, bcc = null, emailBody = null, subject = null, name = null, fromName = null, description = null, fromAddress = null, notificationType = null, entryTo = null, externalReferenceCode = null) {
		Click(
			key_name = ${name},
			locator1 = "ObjectAdmin#TABLE_LIST_TITLE");

		if (${notificationType} == "Email") {
			AssertTextEquals(
				inputFieldId = "name",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${name});

			AssertTextEquals(
				inputFieldId = "fromAddress",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${fromAddress});

			AssertTextEquals(
				inputFieldId = "fromName",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${fromName});

			if (isSet(bcc)) {
				AssertTextEquals(
					inputFieldId = "secondaryRecipientsBCC",
					locator1 = "TextInput#INPUT_ID",
					value1 = ${bcc});
			}

			if (isSet(cc)) {
				AssertTextEquals(
					inputFieldId = "secondaryRecipientsCC",
					locator1 = "TextInput#INPUT_ID",
					value1 = ${cc});
			}

			if (isSet(description)) {
				AssertTextEquals(
					key_fieldId = "description",
					locator1 = "TextArea#ANY_ID",
					value1 = ${description});
			}

			if (isSet(emailBody)) {
				SelectFrame(locator1 = "IFrame#IFRAME");

				AssertElementPresent(
					key_text = ${emailBody},
					locator1 = "CKEditor#BODY_TEXT");

				SelectFrameTop();
			}

			if (isSet(entryTo)) {
				AssertTextEquals(
					inputFieldId = "primaryRecipients",
					locator1 = "TextInput#INPUT_ID",
					value1 = ${entryTo});
			}

			if (isSet(externalReferenceCode)) {
				AssertElementPresent(
					key_externalReferenceCode = ${externalReferenceCode},
					locator1 = "ObjectAdmin#EXTERNAL_REFERENCE_CODE_HEADER");
			}

			if (isSet(subject)) {
				AssertTextEquals(
					inputFieldId = "subject",
					locator1 = "TextInput#INPUT_ID",
					value1 = ${subject});
			}
		}
	}

	@summary = "Default summary"
	macro viewUserNotificationTemplateDetails(recipientType = null, subject = null, name = null, description = null, externalReferenceCode = null) {
		Click(
			key_name = ${name},
			locator1 = "ObjectAdmin#TABLE_LIST_TITLE");

		AssertTextEquals(
			key_text = "Name",
			locator1 = "TextInput#ANY",
			value1 = ${name});

		if (isSet(description)) {
			AssertTextEquals(
				key_text = "description",
				locator1 = "TextArea#ANY",
				value1 = ${description});
		}

		AssertTextEquals(
			key_text = "subject",
			locator1 = "TextArea#ANY",
			value1 = ${subject});

		AssertTextEquals(
			key_labelName = "Recipients",
			locator1 = "ObjectAdmin#CLAY_GENERIC_BUTTON",
			value1 = ${recipientType});

		if (isSet(externalReferenceCode)) {
			AssertElementPresent(
				key_externalReferenceCode = ${externalReferenceCode},
				locator1 = "ObjectAdmin#EXTERNAL_REFERENCE_CODE_HEADER");
		}
	}

}