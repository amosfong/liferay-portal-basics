@component-name = "portal-bpm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		ObjectAdmin.deleteAllCustomObjectsViaAPI();

		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-135386 - Verify if the user can display the entries on a table format"
	@priority = 5
	test CanDisplayEntriesOnTableFormat {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 299",
			objectName = "CustomObject299",
			pluralLabelName = "Custom Objects 299");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject299");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject299");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject299",
			value = "Test Text 1");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject299",
			value = "Test Text 2");

		VisualizeObjectDisplayPage.createObjectPageTemplate(
			contentType = "Custom Object 299",
			pageTemplateName = "Blank Display Page");

		PageEditor.addFragment(
			collectionName = "Content Display",
			fragmentName = "Collection Display");

		PageEditor.editCollectionDisplay(
			fragmentName = "Collection Display",
			infoListProviderName = "Custom Objects 299");

		DoubleClick(
			collectionName = "Collection Display",
			locator1 = "VisualizeObjectCollectionDisplay#FRAGMENT_COLLECTION");

		Select(
			key_fieldLabel = "Style Display",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "Table");

		PageEditor.publish();

		VisualizeObjectDisplayPage.openDisplayPage(displayPageName = "Blank Display Page");

		AssertElementPresent(
			key_entries = "Test Text 1",
			locator1 = "VisualizeObjectCollectionDisplay#ENTRIES_TABLE");

		AssertElementPresent(
			key_entries = "Test Text 2",
			locator1 = "VisualizeObjectCollectionDisplay#ENTRIES_TABLE");
	}

	@description = "LPS-133865 - Verify if the Object is displayed to be selected as Collection Provider on the Collection Display fragment"
	@priority = 5
	test ObjectDisplayedToCollectionProdiver {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 301",
			objectName = "CustomObject301",
			pluralLabelName = "Custom Objects 301");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject301");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject301");

		VisualizeObjectCollectionDisplay.openObjectCollectionProvider();

		AssertElementPresent(
			key_labelName = "Custom Objects 301",
			locator1 = "VisualizeObjectCollectionDisplay#VIEW_OBJECT_COLLECTION_DISPLAY");
	}

}