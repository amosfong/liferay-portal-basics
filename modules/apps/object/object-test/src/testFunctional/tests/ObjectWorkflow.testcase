@component-name = "portal-bpm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		ObjectAdmin.deleteAllCustomObjectsViaAPI();

		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-145228 - Verify that the user is able to preview the entry's information inside of the My Workflow Tasks"
	@priority = 5
	test CanPreviewEntryInformationOnMyWorkflowTasks {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 296",
			objectName = "CustomObject296",
			pluralLabelName = "Custom Objects 296");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject296");

		ObjectAdmin.addObjectLayoutViaAPI(
			layoutName = "Layout Name",
			objectName = "CustomObject296");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject296");

		ObjectAdmin.openWorkflowProcessBuilderConfiguration();

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Custom Object 296");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject296",
			value = "Entry Test");

		ObjectAdmin.openMyWorkflowTasks();

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow.viewTaskAssignedToMyRolesDetails(
			workflowAssetTitle = "",
			workflowTask = "Review");

		AssertElementPresent(locator1 = "ObjectAdmin#VIEW_SHEET_ON_DEFINE_PERMISSIONS");

		ObjectPortlet.assertFieldLabelName(fieldLabelName = "Custom Field");

		AssertElementPresent(
			key_fieldValue = "Entry Test",
			locator1 = "ObjectAdmin#VIEW_FIELD_VALUE_DISABLED");
	}

	@description = "LPS-145228 - Verify that the user is able to view the entire entry's information by clicking on View button"
	@priority = 4
	test CanViewEntryInformationThroughViewButtonMyWorkflowTasks {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 297",
			objectName = "CustomObject297",
			pluralLabelName = "Custom Objects 297");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject297");

		ObjectAdmin.addObjectLayoutViaAPI(
			layoutName = "Layout Name",
			objectName = "CustomObject297");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject297");

		ObjectAdmin.openWorkflowProcessBuilderConfiguration();

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Custom Object 297");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject297",
			value = "Entry Test");

		ObjectAdmin.openMyWorkflowTasks();

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow.viewTaskAssignedToMyRolesDetails(
			workflowAssetTitle = "",
			workflowTask = "Review");

		Workflow.gotoPreviewView();

		AssertElementPresent(locator1 = "ObjectAdmin#VIEW_SHEET_ON_DEFINE_PERMISSIONS");

		ObjectPortlet.assertFieldLabelName(fieldLabelName = "Custom Field");

		AssertElementPresent(
			key_fieldValue = "Entry Test",
			locator1 = "ObjectAdmin#VIEW_FIELD_VALUE_DISABLED");
	}

	@description = "LPS-181663 - Verify when a user creates an object entry and saves it as a draft, the workflow related to that object definition is not triggered"
	@priority = 4
	test CheckWorkflowNotTriggeredForDraftEntry {
		task ("Given a custom object definition scoped by site") {
			ObjectAdmin.addObjectViaAPI(
				labelName = "Custom Object 197509",
				objectName = "CustomObject197509",
				panelCategoryKey = "site_administration.content",
				pluralLabelName = "Custom Objects 197509",
				scope = "site");

			ObjectAdmin.addObjectFieldViaAPI(
				fieldBusinessType = "Text",
				fieldLabelName = "Text Field",
				fieldName = "textField",
				fieldType = "String",
				isRequired = "false",
				objectName = "CustomObject197509");
		}

		task ("and Given the 'Allow users to save entries as draft' configuration is activated") {
			ObjectAdmin.openObjectAdmin();

			ObjectPortlet.selectCustomObject(label = "Custom Object 197509");

			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Allow Users to Save Entries as Draft",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

			PortletEntry.publish();
		}

		task ("and Given a mapped form container on a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Guest",
				layoutName = "Object Page",
				type = "content");

			ContentPagesNavigator.openEditContentPage(
				pageName = "Object Page",
				siteName = "Guest");

			PageEditor.addFragment(
				collectionName = "Form Components",
				fragmentName = "Form Container");

			PageEditor.mapFormContainerToObject(contentType = "Custom Object 197509");

			Click.javaScriptClick(
				index = 1,
				key_fragmentName = "Form Button",
				locator1 = "Fragment#FRAGMENT_LABEL");

			Select(
				key_fieldLabel = "Submitted Entry Status",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "Draft");

			PageEditor.publish();
		}

		task ("and Given a workflow is set for that object definition") {
			Workflow.openWorkflowProcessBuilderConfiguration();

			Workflow.configureWorkflow(
				workflowDefinition = "Single Approver",
				workflowResourceValue = "Custom Object 197509");
		}

		task ("When the user adds an object entry") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Object Page",
				siteName = "Guest");

			Type.sendKeys(
				key_text = "Text Field",
				locator1 = "TextInput#ANY",
				value1 = "Draft entry");

			AssertClick(
				locator1 = "Button#MAIN_CONTENT_SUBMIT",
				value1 = "Submit");
		}

		task ("Then the status of object entry is draft") {
			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Custom Objects 197509");

			AssertElementPresent(
				key_entry = "Draft entry",
				key_status = "Draft",
				locator1 = "ObjectPortlet#ENTRY_STATUS");
		}
	}

}