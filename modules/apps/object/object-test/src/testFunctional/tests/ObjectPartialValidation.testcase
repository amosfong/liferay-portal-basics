@component-name = "portal-bpm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		ObjectAdmin.deleteAllCustomObjectsViaAPI();

		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-182586 - Verify it's possible to see an error message under those fields in the page builder when attempting to add incorrect entries"
	@priority = 5
	test CanAddEntryInPageBuilder {
		property custom.properties = "feature.flag.LPS-187846=true";

		task ("Given a custom object with several fields like a text, integer, decimal and precision decimal") {
			ObjectAdmin.addObjectViaAPI(
				labelName = "Custom Object 192643",
				objectName = "CustomObject192643",
				pluralLabelName = "Custom Objects 192643");

			for (var i : list "Text-String,Integer-Integer,Decimal-Double,PrecisionDecimal-BigDecimal") {
				var fieldBusinessType = StringUtil.extractFirst(${i}, "-");
				var fieldType = StringUtil.extractLast(${i}, "-");

				ObjectAdmin.addObjectFieldViaAPI(
					fieldBusinessType = ${fieldBusinessType},
					fieldLabelName = "Custom ${fieldBusinessType} Field",
					fieldName = "custom${fieldBusinessType}Field",
					fieldType = ${fieldType},
					isRequired = "false",
					objectName = "CustomObject192643");
			}

			ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject192643");
		}

		task ("and Given an expression builder validation set to partial validation with the decimal selected") {
			JSONObject.addObjectValidation(
				fieldName = "customDecimalField",
				labelName = "Custom validation",
				objectName = "CustomObject192643",
				outputValidationType = "partialValidation",
				script = "(customDecimalField == 1.456)",
				validationType = "ddm");
		}

		task ("and Given a groovy script validation set to partial validation with the precision decimal selected") {
			JSONObject.addObjectValidation(
				fieldName = "customPrecisionDecimalField",
				labelName = "Custom validation",
				objectName = "CustomObject192643",
				outputValidationType = "partialValidation",
				script = "invalidFields = (customPrecisionDecimalField != 1.5)",
				validationType = "groovy");
		}

		task ("and Given a page build with a form container and the custom object mapped") {
			JSONLayout.addPublicLayout(
				groupName = "Guest",
				layoutName = "Object Page",
				type = "content");

			ContentPagesNavigator.openEditContentPage(
				pageName = "Object Page",
				siteName = "Guest");

			PageEditor.addFragment(
				collectionName = "Form Components",
				fragmentName = "Form Container");

			PageEditor.mapFormContainerToObject(contentType = "Custom Object 192643");

			PageEditor.publish();
		}

		task ("When attempting a decimal and precision decimal with incorrect validation") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Object Page",
				siteName = "Guest");

			Type.sendKeys(
				key_text = "Custom Decimal Field",
				locator1 = "TextInput#ANY",
				value1 = "5.0");

			Type.sendKeys(
				key_text = "Custom PrecisionDecimal Field",
				locator1 = "TextInput#ANY",
				value1 = "5.00");

			AssertClick(
				locator1 = "Button#MAIN_CONTENT_SUBMIT",
				value1 = "Submit");
		}

		task ("Then assert the error message is displaying only next to the decimal and precision decimal field") {
			for (var fieldLabels : list "Custom PrecisionDecimal Field,Custom Decimal Field") {
				Alert.viewFieldErrorMessage(
					errorMessage = "Please enter a valid entry.",
					fieldLabel = ${fieldLabels});
			}
		}

		task ("and When adding all fields with valid object entries") {
			Refresh();

			for (var i : list "Text-Entry,Integer-5,Custom Decimal Field-1.456,Custom PrecisionDecimal Field-1.5") {
				var fieldLabels = StringUtil.extractFirst(${i}, "-");
				var entries = StringUtil.extractLast(${i}, "-");

				Type.sendKeys(
					key_text = ${fieldLabels},
					locator1 = "TextInput#ANY",
					value1 = ${entries});
			}

			AssertClick(
				locator1 = "Button#MAIN_CONTENT_SUBMIT",
				value1 = "Submit");

			ObjectAdmin.goToCustomObject(objectName = "CustomObject192643");
		}

		task ("Then assert on object entries that entry valid was added") {
			for (var entries : list "Entry,5,1.456,1.5") {
				ObjectPortlet.viewEntry(entry = ${entries});
			}
		}
	}

	@description = "LPS-182586 - Verify an error message is seen for an invalid field in an object entry if the validation is set to partial validation"
	@priority = 5
	test CanValidateField {
		property custom.properties = "feature.flag.LPS-187846=true";

		task ("Given an custom object definition and a precision decimal field") {
			ObjectAdmin.addObjectViaAPI(
				labelName = "Custom Object 192638",
				objectName = "CustomObject192638",
				pluralLabelName = "Custom Objects 192638");

			ObjectAdmin.addObjectFieldViaAPI(
				fieldBusinessType = "PrecisionDecimal",
				fieldLabelName = "Custom Field",
				fieldName = "customField",
				fieldType = "BigDecimal",
				isRequired = "false",
				objectName = "CustomObject192638");

			ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject192638");
		}

		task ("and Given an expression builder validation set to partial validation with the precision decimal field") {
			ObjectAdmin.openObjectAdmin();

			ObjectPortlet.selectCustomObject(label = "Custom Object 192638");

			ObjectAdmin.goToValidationsTab();

			ObjectCustomValidation.addObjectValidation(
				validationName = "Custom Validation",
				validationType = "Expression Builder");

			ObjectCustomValidation.gotoCustomValidation(validationName = "Custom Validation");

			ObjectCustomValidation.activeValidation();

			ObjectCustomValidation.gotoTab(tabName = "Conditions");

			ObjectCustomValidation.insertScriptOnValidation(scriptValidation = "NOT(contains(customField, 123))");

			ObjectCustomValidation.addErrorMessage(errorMessage = "This entry is not possible.");

			Click.clickNoWaitForVisible(
				key_optionSelected = "partialValidation",
				locator1 = "FormFields#OPTION_SELECTED");

			ObjectAdmin.selectDropdownItem(
				labelName = "Fields",
				optionName = "Custom Field");

			PortletEntry.save();
		}

		task ("When the user attempts to create an invalid object entry") {
			ObjectAdmin.goToCustomObject(objectName = "CustomObject192638");

			ObjectPortlet.addSingleFieldEntryViaUI(entry = 123);
		}

		task ("Then an error message is seen and the object entry isn't added") {
			Alert.viewErrorMessage(errorMessage = "Error:This entry is not possible.");

			ObjectAdmin.goToCustomObject(objectName = "CustomObject192638");

			ObjectPortlet.assertEntryNotPresent(entry = 123);
		}
	}

}