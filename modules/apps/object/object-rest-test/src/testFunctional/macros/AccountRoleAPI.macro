definition {

	@summary = "Default summary"
	macro associateUserToAccountWithAccountRole(accountId = null, roleId = null, userAccountId = null, roleName = null) {
		Variables.assertDefined(parameterList = "${accountId},${roleName},${userAccountId}");

		var portalURL = JSONCompany.getPortalURL();
		var idOfRole = AccountRoleAPI.getAccountRoleIdByAccountId(
			accountId = ${accountId},
			roleName = ${roleName});
		var userPassword = PropsUtil.get("default.admin.password");

		var curl = '''
			${portalURL}/o/headless-admin-user/v1.0/accounts/${accountId}/account-roles/${idOfRole}/user-accounts/${userAccountId}
				roles/${roleId}/association/user-account/ \
				-H accept: application/json \
				-u test@liferay.com:${userPassword} \
		''';

		var response = JSONCurlUtil.post(${curl});

		return ${response};
	}

	@summary = "Default summary"
	macro getAccountRoleIdByAccountId(accountId = null, roleName = null) {
		Variables.assertDefined(parameterList = "${roleName},${accountId}");

		var portalURL = JSONCompany.getPortalURL();
		var userPassword = PropsUtil.get("default.admin.password");

		var curl = '''
			${portalURL}/o/headless-admin-user/v1.0/accounts/${accountId}/account-roles
				-H accept: application/json \
				-u test@liferay.com:${userPassword} \
		''';

		var idOfRole = JSONCurlUtil.get(${curl}, "$.items[?(@['name'] == '${roleName}')]['id']");

		return ${idOfRole};
	}

}