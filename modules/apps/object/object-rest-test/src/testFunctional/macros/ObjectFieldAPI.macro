definition {

	@summary = "Default summary"
	macro _curlObjectField(objectDefinitionId = null, objectFieldId = null) {
		var portalURL = JSONCompany.getPortalURL();
		var userPassword = PropsUtil.get("default.admin.password");

		if (isSet(objectDefinitionId)) {
			var api = "object-definitions/${objectDefinitionId}/object-fields";
		}
		else {
			var api = "/object-fields/${objectFieldId}";
		}

		var curl = '''
			${portalURL}/o/object-admin/v1.0/${api} \
				-H accept: application/json \
				-H Content-Type: application/json \
				-u test@liferay.com:${userPassword} \
		''';

		return ${curl};
	}

	@summary = "Default summary"
	macro createObjectFieldByObjectDefinitionId(objectDefinitionId = null, name = null, dbType = null) {
		Variables.assertDefined(parameterList = "${objectDefinitionId},${dbType},${name}");

		var curl = ObjectFieldAPI._curlObjectField(objectDefinitionId = ${objectDefinitionId});

		if (!(isSet(label))) {
			var label = ${name};
		}

		var body = '''
			"DBType": "${dbType}",
			"indexed": true,
			"indexedAsKeyword": false,
			"label":{"en_US":"${label}"},
			"listTypeDefinitionId": 0,
			"name": "${name}",
			"required": false
		''';

		if (${dbType} == "DateTime") {
			var parameter = '''"objectFieldSettings": [{"name": "timeStorage","value": "convertToUTC"}]''';
			var body = StringUtil.add("${body},", "\"objectFieldSettings\": [{\"name\": \"timeStorage\",\"value\": \"convertToUTC\"}]", "");
		}

		var curl = StringUtil.add(${curl}, "-d {${body}}", " ");

		var response = JSONCurlUtil.post(${curl});

		return ${response};
	}

	@summary = "Default summary"
	macro deleteObjectField(staticObjectFieldId = null) {
		var curl = ObjectFieldAPI._curlObjectField(objectFieldId = ${staticObjectFieldId});

		JSONCurlUtil.delete(${curl});
	}

	@summary = "Default summary"
	macro getIdOfCreatedObjectField(objectDefinitionId = null, name = null, dbType = null) {
		var response = ObjectFieldAPI.createObjectFieldByObjectDefinitionId(
			dbType = ${dbType},
			name = ${name},
			objectDefinitionId = ${objectDefinitionId});

		var objectFieldId = JSONPathUtil.getIdValue(response = ${response});

		return ${objectFieldId};
	}

	@summary = "Default summary"
	macro getObjectFieldsByObjectId(objectDefinitionId = null) {
		Variables.assertDefined(parameterList = ${objectDefinitionId});

		var curl = ObjectFieldAPI._curlObjectField(objectDefinitionId = ${objectDefinitionId});

		var response = JSONCurlUtil.get(${curl});

		return ${response};
	}

	@summary = "Default summary"
	macro setUpGlobalObjectFieldErcByObjectDefinitionId(objectDefinitionId = null, name = null) {
		Variables.assertDefined(parameterList = "${name},${objectDefinitionId}");

		var objectFields = ObjectFieldAPI.getObjectFieldsByObjectId(objectDefinitionId = ${objectDefinitionId});

		var objectFieldErc = JSONUtil.getWithJSONPath(${objectFields}, "$..items[?(@.name=='${name}')].externalReferenceCode");

		echo("MY OBJECT FIELD ERC");

		echo(${objectFieldErc});

		static var staticObjectFieldErc = ${objectFieldErc};

		return ${staticObjectFieldErc};
	}

	@summary = "Default summary"
	macro setUpGlobalObjectFieldId(objectDefinitionId = null, name = null, dbType = null) {
		var objectFieldId = ObjectFieldAPI.getIdOfCreatedObjectField(
			dbType = ${dbType},
			name = ${name},
			objectDefinitionId = ${objectDefinitionId});

		static var staticObjectFieldId = ${objectFieldId};

		return ${staticObjectFieldId};
	}

	@summary = "Default summary"
	macro updateFieldOfEntryById(fieldLabel = null, requiredFieldLabel = null, requiredFieldValue = null, fieldValue2 = null, fieldValue = null, en_US_plural_label = null, entryId = null) {
		Variables.assertDefined(parameterList = "${en_US_plural_label},${entryId},${fieldLabel},${fieldValue},${requiredFieldLabel},${requiredFieldValue}");

		var portalURL = JSONCompany.getPortalURL();
		var userPassword = PropsUtil.get("default.admin.password");

		var curl = '''
			${portalURL}/o/c/${en_US_plural_label}/${entryId} \
				-u test@liferay.com:${userPassword} \
				-H Content-Type: application/json \
				-d {
					"${requiredFieldLabel}": "${requiredFieldValue}",
		''';

		if (isSet(picklist)) {
			var fieldInBody = '''"${fieldLabel}": {"key":"${fieldValue}"}''';
		}

		if (isSet(multiselectPicklist)) {
			var fieldInBody = '''"${fieldLabel}": ["${fieldValue}","${fieldValue2}"]''';
		}
		else {
			var fieldInBody = '''"${fieldLabel}": "${fieldValue}"''';
		}

		var curl = StringUtil.add(${curl}, "${fieldInBody}}", "");

		JSONCurlUtil.patch(${curl});
	}

}