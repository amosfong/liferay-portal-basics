@component-name = "portal-headless"
definition {

	property custom.properties = "feature.flag.LPS-180090=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object Entries REST APIs";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Given Student object definition with name created and published") {
			ObjectDefinitionAPI.createAndPublishObjectDefinition(
				en_US_label = "student",
				en_US_plural_label = "students",
				name = "Student",
				requiredStringFieldName = "name");
		}

		task ("And Given navigate to o/c/students/openapi.json") {
			APIExplorer.navigateToOpenAPI(
				api = "c",
				version = "students");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		ObjectAdmin.deleteAllCustomObjectsViaAPI();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCPNoSelenium();
		}
	}

	@priority = 3
	test IncludeCreateBatchInActionsForObjectCollectionSchema {
		task ("When expand actions.createBatch in PageStudent schema") {
			APIExplorer.expandPropertiesInActionsSchema(
				property = "createBatch",
				property2 = "method",
				property3 = "href",
				schema = "PageStudent");
		}

		task ("Then I can see create with POST and /o/c/students/batch") {
			APIExplorer.assertExposedActionsInSchema(
				method = "POST",
				objectHref = "c/students/batch",
				property = "createBatch",
				schema = "PageStudent");
		}
	}

	@priority = 3
	test IncludeCreateInActionsForObjectCollectionSchema {
		task ("When expand actions.create in PageStudent schema") {
			APIExplorer.expandPropertiesInActionsSchema(
				property = "create",
				property2 = "method",
				property3 = "href",
				schema = "PageStudent");
		}

		task ("Then I can see create with POST and /o/c/students") {
			APIExplorer.assertExposedActionsInSchema(
				method = "POST",
				objectHref = "c/students/",
				property = "create",
				schema = "PageStudent");
		}
	}

	@priority = 3
	test IncludeDeleteBatchInActionsForObjectCollectionSchema {
		task ("When expand actions.deleteBatch in PageStudent schema") {
			APIExplorer.expandPropertiesInActionsSchema(
				property = "deleteBatch",
				property2 = "method",
				property3 = "href",
				schema = "PageStudent");
		}

		task ("Then I can see deleteBatch with DELETE and /o/c/students/batch") {
			APIExplorer.assertExposedActionsInSchema(
				method = "DELETE",
				objectHref = "c/students/batch",
				property = "deleteBatch",
				schema = "PageStudent");
		}
	}

	@priority = 4
	test IncludeUpdateBatchInActionsForObjectCollectionSchema {
		property portal.acceptance = "true";

		task ("When expand actions.updateBatch in PageStudent schema") {
			APIExplorer.expandPropertiesInActionsSchema(
				property = "updateBatch",
				property2 = "method",
				property3 = "href",
				schema = "PageStudent");
		}

		task ("Then I can see updateBatch with PUT and /o/c/students/batch") {
			APIExplorer.assertExposedActionsInSchema(
				method = "PUT",
				objectHref = "c/students/batch",
				property = "updateBatch",
				schema = "PageStudent");
		}
	}

}