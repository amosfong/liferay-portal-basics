definition {

	@summary = "Default summary"
	macro _gotoPendingFilter() {
		ManagementBar.setFilterAndOrder(filterBy = "Pending");
	}

	@summary = "Default summary"
	macro _matchTaskCase(workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = ${workflowTask};

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		if (IsTextNotEqual(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK", value1 = ${workflowTask})) {
			var workflowTask = StringUtil.upperCaseFirstLetter(${workflowTask});

			if (isSet(workflowDefinitionTask)) {
				var workflowDefinitionTask = StringUtil.upperCaseFirstLetter(${workflowDefinitionTask});

				return ${workflowDefinitionTask};
			}
		}

		return ${workflowTask};
	}

	@summary = "Default summary"
	macro _tearDownWorkflow() {
		var noWorkflow = "No Workflow";

		if (IsElementPresent(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS")) {
			LexiconEntry.gotoEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Knowledge Base Article");

			Select(
				key_workflowResourceValue = "Knowledge Base Article",
				locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
				value1 = ${noWorkflow});

			Button.clickSave();
		}

		for (var workflowResourceValue : list "Blogs Entry,Calendar Event,Comment,Content Page,Knowledge Base Article,Message Boards Message,Page Revision,Web Content Article,Wiki Page") {
			if (IsElementNotPresent(assetType = ${workflowResourceValue}, locator1 = "WorkflowConfiguration#ASSET_TYPE_WORKFLOW_ASSIGNED", workflowAssigned = "No Workflow")) {
				AssertClick.pauseAssertTextClickAt(
					key_rowEntry = ${workflowResourceValue},
					locator1 = "Button#EDIT_ROW",
					value1 = "Edit");

				var key_workflowResourceValue = ${workflowResourceValue};

				Select(
					locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
					value1 = ${noWorkflow});

				AssertClick(
					locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SAVE",
					value1 = "Save");
			}
		}
	}

	@summary = "Default summary"
	macro _viewActivities(workflowAssetTitle = null, workflowActivityComment = null) {
		var key_workflowActivityComment = ${workflowActivityComment};
		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = ${workflowAssetTitle});

		AssertClick(
			locator1 = "MyWorkflowTasksTask#ACTIVITIES",
			value1 = "Activities");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#ACTIVITIES_LINE",
			value1 = ${workflowActivityComment});
	}

	@summary = "Default summary"
	macro addNewDefinition(workflowDefinitionTitle = null) {
		LexiconEntry.gotoAdd();

		PortletEntry.inputTitle(title = ${workflowDefinitionTitle});
	}

	@summary = "Default summary"
	macro approveTaskByActions(boardWorkflowTask = null, ddlDataDefinitionName = null, workflowAssetType = null, multipleTasks = null, taskPosition = null, workflowDefinitionTask = null, workflowTask = null, workflowAssetTitle = null, workflowActivityComment = null, completedTask = null) {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			multipleTasks = ${multipleTasks},
			taskPosition = ${taskPosition},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		Workflow.gotoTaskAssignedToMeActionsCmd(
			multipleTasks = ${multipleTasks},
			taskPosition = ${taskPosition},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowTask = ${workflowTask});

		var menuItem = "Approve";

		if (isSet(workflowDefinitionTask)) {
			var menuItem = ${workflowDefinitionTask};
		}
		else if (isSet(boardWorkflowTask)) {
			var menuItem = "Approve ${boardWorkflowTask}";
		}

		MenuItem.click(menuItem = ${menuItem});

		IFrame.selectConfigurationFrame();

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = ${workflowActivityComment};

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = ${workflowActivityComment});
		}

		Workflow.confirmWorkflowAction();

		Workflow.viewCompletedTask(
			completedTask = ${completedTask},
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			multipleTasks = ${multipleTasks},
			taskPosition = ${taskPosition},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		if (isSet(workflowActivityComment)) {
			Workflow.gotoCompletedFilter();

			if (isSet(workflowOrder)) {
				Workflow.clickRevertSortDirection();
			}

			Workflow._viewActivities(
				workflowActivityComment = ${workflowActivityComment},
				workflowAssetTitle = ${workflowAssetTitle});
		}
	}

	@summary = "Default summary"
	macro approveTaskByDetails(ddlDataDefinitionName = null, workflowAssetType = null, workflowTask = null, workflowAssetTitle = null, workflowAssetContent = null, workflowAssignedTo = null) {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = ${workflowAssetContent},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssignedTo = ${workflowAssignedTo},
			workflowTask = ${workflowTask});

		LexiconEntry.gotoVerticalEllipsisMenuItemNoError(menuItem = "Approve");

		Workflow.confirmWorkflowAction();

		Navigator.gotoBack();

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});
	}

	@summary = "Default summary"
	macro assertInfoItem() {
		var taskId = selenium.getText("WorkflowAllItems#WORKFLOW_INSTANCE_ID");
		var creationDate = selenium.getText("//td[contains(text(),' AM')]|//td[contains(text(),' PM')]");
		var key_dueDate = ${key_dueDate};
		var key_itemSubject = ${key_itemSubject};
		var key_processStep = ${key_processStep};
		var key_assignee = ${key_assignee};
		var key_createdBy = ${key_createdBy};

		AssertElementPresent(
			key_columnName = "ID",
			key_fieldName = ${taskId},
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_TH");

		AssertElementPresent(
			key_columnName = "Due Date",
			key_fieldName = ${key_dueDate},
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_SPAN");

		AssertElementPresent(
			key_columnName = "Item Subject",
			key_fieldName = ${key_processStep},
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_SPAN");

		AssertElementPresent(
			key_columnName = "Process Step",
			key_fieldName = ${key_processStep},
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_TH");

		AssertElementPresent(
			key_columnName = "Assignee",
			key_fieldName = ${key_assignee},
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_SPAN");

		AssertElementPresent(
			key_columnName = "Created By",
			key_fieldName = ${key_createdBy},
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_SPAN");

		AssertElementPresent(
			key_columnName = "Creation Date",
			key_fieldName = ${creationDate},
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_SPAN");
	}

	@summary = "Default summary"
	macro assignBlogEntriesToUsers() {
		var iterator = 1;
		var numberOfBlogInstances = ${numberOfBlogInstances} + 1;
		var numberOfUsers = ${numberOfUsers} + 1;
		var userCount = 1;

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		while (${iterator} != ${numberOfBlogInstances}) {
			if (${userCount} == ${numberOfUsers}) {
				var userCount = 1;
			}

			Workflow.assignTaskToUser(
				assetTitle = "Blogs Entry Title",
				assetType = "Blogs Entry",
				assigneeName = "${userCount}user (${userCount}user user${userCount})",
				workflowTask = "Review");

			var iterator = ${iterator} + 1;
			var userCount = ${userCount} + 1;
		}
	}

	@summary = "Default summary"
	macro assignByDetails(comment = null, user = null) {
		LexiconEntry.gotoVerticalEllipsisMenuItemNoError(menuItem = "Assign to...");

		AssertTextEquals(
			locator1 = "WCPreview#PREVIEW_TITLE",
			value1 = "Assign to...");

		IFrame.selectConfigurationFrame();

		Select(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_ASSIGN_TO_SELECT",
			value1 = ${user});

		if (isSet(comment)) {
			Type(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = ${comment});
		}

		Button.clickDone();

		Alert.viewSuccessMessage();

		WaitForLiferayEvent.initializeLiferayEventLog();
	}

	@summary = "Default summary"
	macro assignTaskToUser(assigneeName = null, workflowTask = null, assetTitle = null, assetType = null) {
		var key_assetTitle = ${assetTitle};
		var key_assetType = ${assetType};
		var key_assigneeName = ${assigneeName};
		var key_workflowTask = ${workflowTask};

		Workflow.viewPendingTasks(
			workflowAssetTitle = ${assetTitle},
			workflowAssetType = ${assetType},
			workflowTask = ${workflowTask});

		Workflow.assignByDetails(user = ${assigneeName});
	}

	@summary = "Default summary"
	macro assignToMeTaskByActions(ddlDataDefinitionName = null, workflowAssetType = null, multipleTasks = null, taskPosition = null, workflowTask = null, workflowAssetTitle = null, workflowActivityComment = null) {
		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		WaitForLiferayEvent.initializeLiferayEventLog();

		Workflow.gotoTaskAssignedToMyRolesActionsCmd(
			workflowAssetTitle = ${workflowAssetTitle},
			workflowTask = ${workflowTask});

		MenuItem.click(menuItem = "Assign to Me");

		IFrame.selectConfigurationFrame();

		if (isSet(workflowActivityComment)) {
			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = ${workflowActivityComment});
		}

		Workflow.confirmWorkflowAction();

		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			multipleTasks = ${multipleTasks},
			taskPosition = ${taskPosition},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		if (isSet(workflowActivityComment)) {
			Workflow._viewActivities(
				workflowActivityComment = ${workflowActivityComment},
				workflowAssetTitle = ${workflowAssetTitle});
		}
	}

	@summary = "Default summary"
	macro assignToMeTaskByDetails(ddlDataDefinitionName = null, workflowAssetType = null, workflowTask = null, workflowAssetTitle = null) {
		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		Workflow.viewTaskAssignedToMyRolesDetails(
			workflowAssetTitle = ${workflowAssetTitle},
			workflowTask = ${workflowTask});

		LexiconEntry.gotoVerticalEllipsisMenuItemNoError(menuItem = "Assign to Me");

		Workflow.confirmWorkflowAction();

		Click(locator1 = "Icon#ANGLE_LEFT_BACK");

		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});
	}

	@summary = "Default summary"
	macro clickRevertSortDirection() {
		Click(locator1 = "MyWorkflowTasks#REVERSE_SORT_DIRECTION_BUTTON");
	}

	@summary = "Default summary"
	macro completeWorkflowBlogInstance(workflowInstanceName = null) {
		var key_workflowInstanceTitle = ${workflowInstanceName};

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = ${key_workflowInstanceTitle},
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = ${key_workflowInstanceTitle},
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");
	}

	@summary = "Default summary"
	macro configureDMWorkflowViaFolderInfo(workflowDefinition = null) {
		Click(locator1 = "Icon#INFO");

		Click.waitForMenuToggleJSClick(locator1 = "DocumentsAndMedia#DROPDOWN_INFO_PANEL");

		WaitForLiferayEvent.initializeLiferayEventLog();

		MenuItem.click(menuItem = "Edit");

		Select(
			locator1 = "AssetWorkflow#ALL_STRUCTURES_WORKFLOW_SELECT",
			value1 = ${workflowDefinition});

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro configureWCWorkflowViaFolderInfo(workflowDefinition = null) {
		WaitForElementPresent(locator1 = "Icon#INFO");

		Click.pauseClickAt(locator1 = "Icon#INFO");

		if (IsElementNotPresent(locator1 = "Icon#SIDEBAR_HEADER_ACTION_VERTICAL_ELLIPSIS_BUTTON")) {
			Click.pauseClickAt(locator1 = "Icon#INFO");
		}

		Click(locator1 = "Icon#SIDEBAR_HEADER_ACTION_VERTICAL_ELLIPSIS_BUTTON");

		MenuItem.click(menuItem = "Edit");

		Select(
			locator1 = "AssetWorkflow#ALL_STRUCTURES_WORKFLOW_SELECT",
			value1 = ${workflowDefinition});

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro configureWorkflow(workflowDefinition = null, workflowResourceValue = null) {
		var key_workflowResourceValue = ${workflowResourceValue};

		if (!(IsElementPresent(locator1 = "Pagination#ICON_DISABLED", type = "angle-right")) && (IsElementPresent(locator1 = "Pagination#FIRST_LINK"))) {
			Pagination.changePagination(itemsPerPage = 40);
		}

		AssertClick.pauseAssertTextClickAt(
			key_rowEntry = ${workflowResourceValue},
			locator1 = "Button#EDIT_ROW",
			value1 = "Edit");

		if (IsNotVisible(locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT")) {
			Refresh();

			WaitForSPARefresh();

			AssertClick.pauseAssertTextClickAt(
				key_rowEntry = ${workflowResourceValue},
				locator1 = "Button#EDIT_ROW",
				value1 = "Edit");
		}

		Select(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
			value1 = ${workflowDefinition});

		AssertClick(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SAVE",
			value1 = "Save");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro configureWorkflowCancel(workflowDefinition = null, workflowResourceValue = null, workflowDefinitionEnd = null) {
		var key_workflowResourceValue = ${workflowResourceValue};

		AssertClick.pauseAssertTextClickAt(
			key_rowEntry = ${workflowResourceValue},
			locator1 = "Button#EDIT_ROW",
			value1 = "Edit");

		if (IsNotVisible(locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT")) {
			Refresh();

			WaitForSPARefresh();

			AssertClick.pauseAssertTextClickAt(
				key_rowEntry = ${workflowResourceValue},
				locator1 = "Button#EDIT_ROW",
				value1 = "Edit");
		}

		Select(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
			value1 = ${workflowDefinition});

		AssertClick(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_CANCEL",
			value1 = "Cancel");

		Workflow.viewConfigurationSelected(
			workflowDefinition = ${workflowDefinitionEnd},
			workflowResourceValue = ${workflowResourceValue});
	}

	@summary = "Default summary"
	macro configureWorkflowViaPortlet(workflowDefinition = null) {
		LexiconEntry.gotoHeaderMenuItem(menuItem = "Edit");

		Select(
			locator1 = "AssetWorkflow#ALL_STRUCTURES_WORKFLOW_SELECT",
			value1 = ${workflowDefinition});

		PortletEntry.save();
	}

	@summary = "Default summary"
	macro confirmWorkflowAction() {
		IFrame.selectConfigurationFrame();

		AssertElementPresent(locator1 = "Button#DONE");

		Click(locator1 = "Button#DONE");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro createWorkflowBlogInstance(workflowInstanceName = null) {
		var key_workflowInstanceTitle = ${workflowInstanceName};

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "",
			entryTitle = ${key_workflowInstanceTitle});
	}

	@summary = "Default summary"
	macro deleteWorkflowDefinition(workflowDefinitionTitle = null) {
		var key_workflowDefinitionTitle = ${workflowDefinitionTitle};

		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertTextEquals(
			locator1 = "Modal#HEADER",
			value1 = "Delete workflow?");

		AssertTextEquals(
			locator1 = "WorkflowDefinition#DIALOG_BOX_BODY",
			value1 = "A deleted workflow cannot be recovered.");

		Button.clickDelete();

		Alert.viewSuccessMessage();

		WaitForElementNotPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE");
	}

	@summary = "Default summary"
	macro deleteWorkflowDefinitionExtra() {
		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_DEFINITION_UNPUBLISHED_EXTRA_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertTextEquals(
			locator1 = "Modal#HEADER",
			value1 = "Delete workflow?");

		AssertTextEquals(
			locator1 = "WorkflowDefinition#DIALOG_BOX_BODY",
			value1 = "A deleted workflow cannot be recovered.");

		Button.clickDelete();

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro duplicateNotPublishedWorkflow(workflowName = null, workflowCopyName = null) {
		Workflow.openWorkflowListView();

		Click(
			key_workflowDefinitionTitle = ${workflowName},
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Duplicate");

		Button.click(button = "Duplicate");

		PortletEntry.inputTitle(title = ${workflowCopyName});
	}

	@summary = "Default summary"
	macro duplicateSingleApproverWorkflow(workflowName = null) {
		Workflow.openWorkflowListView();

		Click(
			key_workflowDefinitionTitle = "Single Approver",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Duplicate");

		if (isSet(workflowName)) {
			Type(
				locator1 = "WorkflowDefinition#DUPLICATE_WORKFLOW_MODAL_INPUT",
				value1 = ${workflowName});
		}

		Button.click(button = "Duplicate");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro gotoAssetViaTableTitle(workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = ${workflowAssetTitle});
	}

	@summary = "Default summary"
	macro gotoCompletedFilter() {
		ManagementBar.setFilterAndOrder(filterBy = "Completed");
	}

	@summary = "Default summary"
	macro gotoCompletedTaskAssignedToMePreview(workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = ${workflowAssetTitle});

		WaitForElementPresent(locator1 = "WorkflowSubmissionsTask#PREVIEW_VIEW");

		Workflow.gotoPreviewView();
	}

	@summary = "Default summary"
	macro gotoEditWorkflowDefinition(workflowDefinitionTitle = null) {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = ${workflowDefinitionTitle});
	}

	@summary = "Default summary"
	macro gotoPreviewEdit() {
		Click(locator1 = "WorkflowSubmissionsTask#PREVIEW_EDIT");

		var editAsset = "IFrame#EDIT_ASSET";

		if (IsElementPresent(locator1 = ${editAsset})) {
			SelectFrame(locator1 = ${editAsset});
		}
	}

	@summary = "Default summary"
	macro gotoPreviewView() {
		var currentURL = selenium.getCurrentUrl();
		var viewTitle = selenium.getTitle();

		if (IsElementPresent(locator1 = "AppBuilder#WIDGET_DEPLOYED")) {
			var portletTitle = selenium.getText("AppBuilder#WIDGET_DEPLOYED");
		}

		Click(locator1 = "WorkflowSubmissionsTask#PREVIEW_VIEW");

		if (contains(${currentURL}, "/control_panel/manage")) {
			var previewTitle = StringUtil.extractLast(${viewTitle}, "Review: ");

			Navigator.closeSpecificWindow(
				closeWindowTitle = ${viewTitle},
				selectWindowTitle = ${previewTitle});
		}
		else if (isSet(pageRevision)) {
			var siteName = TestCase.getSiteName(siteName = ${siteName});

			Close.closeAndSelectWindow(value1 = "title=Page Revision Page - Site Name - ${siteName}");
		}
	}

	@summary = "Default summary"
	macro gotoTaskAssignedToMeActionsCmd(multipleTasks = null, taskPosition = null, workflowTask = null, workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = ${workflowTask};

		if (${multipleTasks} == "true") {
			var key_position = ${taskPosition};

			Click(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_SPECIFIC_ACTIONS");
		}
		else {
			Click(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ACTIONS");
		}
	}

	@summary = "Default summary"
	macro gotoTaskAssignedToMyRolesActionsCmd(workflowTask = null, workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = ${workflowTask};

		Click(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ACTIONS");
	}

	@summary = "Default summary"
	macro gotoTaskDetails(workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = ${workflowAssetTitle});
	}

	@summary = "Default summary"
	macro gotoViewCompletedAssetViaMySubmissions(workflowAssetTitle = null) {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = ${workflowAssetTitle};

		Click(locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE");

		WaitForElementPresent(locator1 = "WorkflowSubmissionsTask#PREVIEW_VIEW");

		Workflow.gotoPreviewView();
	}

	@summary = "Default summary"
	macro openNotifications() {
		Navigator.openSpecificURL(url = "/group/control_panel/manage?p_p_id=com_liferay_notifications_web_portlet_NotificationsPortlet&p_p_lifecycle=0&p_p_state=maximized&p_v_l_s_g_id=42619&p_p_auth=1njFlr6I");
	}

	@summary = "Default summary"
	macro openWorkflowAdmin(siteURLKey = null) {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_portal_workflow_web_internal_portlet_SiteAdministrationWorkflowPortlet");
	}

	@summary = "Default summary"
	macro openWorkflowListView(baseURL = null) {
		Navigator.openWithAppendToBaseURL(
			baseURL = ${baseURL},
			urlAppend = "group/control_panel/manage?p_p_id=com_liferay_portal_workflow_web_portlet_ControlPanelWorkflowPortlet&p_p_lifecycle=0&p_p_state=maximized&p_p_mode=view&_com_liferay_portal_workflow_web_portlet_ControlPanelWorkflowPortlet_tab=workflows");
	}

	@summary = "Default summary"
	macro openWorkflowMetrics() {
		Navigator.openSpecificURL(url = "/group/control_panel/manage?p_p_id=com_liferay_portal_workflow_metrics_web_internal_portlet_WorkflowMetricsPortlet");
	}

	@summary = "Default summary"
	macro openWorkflowProcessBuilderConfiguration() {
		Navigator.openSpecificURL(url = "/group/control_panel/manage?p_p_id=com_liferay_portal_workflow_web_portlet_ControlPanelWorkflowPortlet&p_p_lifecycle=0&p_p_state=maximized&p_p_mode=view&_com_liferay_portal_workflow_web_portlet_ControlPanelWorkflowPortlet_tab=configuration");
	}

	@summary = "Default summary"
	macro permissionsWorkflowDefinition(workflowDefinitionTitle = null) {
		var key_workflowDefinitionTitle = ${workflowDefinitionTitle};

		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.click(menuItem = "Permissions");

		AssertElementPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_PERMISSIONS");
	}

	@summary = "Default summary"
	macro processBuilderFilterAndOrder(optionOrder = null) {
		var key_optionOrder = ${optionOrder};

		Click(locator1 = "AssetWorkflow#PROCESS_BUILDER_FILTER_AND_ORDER_BUTTON");

		Click(locator1 = "AssetWorkflow#PROCESS_BUILDER_FILTER_AND_ORDER_OPTION");
	}

	@summary = "Default summary"
	macro publishExistingWorkflowDefinition(workflowDefinitionTitle = null) {
		var key_workflowDefinitionTitle = ${workflowDefinitionTitle};

		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		PortletEntry.publish();
	}

	@summary = "Default summary"
	macro publishInvalidWorkflowDefinition(errorMessage = null) {
		if (isSet(update)) {
			AssertClickNoError(
				locator1 = "Button#UPDATE",
				value1 = "Update");
		}
		else {
			AssertClickNoError(
				locator1 = "Button#PUBLISH",
				value1 = "Publish");
		}

		Alert.viewErrorMessage(errorMessage = ${errorMessage});
	}

	@summary = "Default summary"
	macro rejectTaskByActions(ddlDataDefinitionName = null, workflowAssetType = null, workflowTask = null, workflowAssetTitle = null, workflowActivityComment = null) {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = ${workflowAssetTitle},
			workflowTask = ${workflowTask});

		MenuItem.click(menuItem = "Reject");

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = ${workflowActivityComment};

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = ${workflowActivityComment});
		}

		Workflow.confirmWorkflowAction();

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});
	}

	@summary = "Default summary"
	macro rejectTaskByDetails(ddlDataDefinitionName = null, workflowAssetType = null, workflowTask = null, workflowAssetTitle = null, workflowAssetContent = null, workflowAssignedTo = null) {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = ${workflowAssetContent},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssignedTo = ${workflowAssignedTo},
			workflowTask = ${workflowTask});

		LexiconEntry.gotoVerticalEllipsisMenuItemNoError(menuItem = "Reject");

		Workflow.confirmWorkflowAction();

		Navigator.gotoBack();

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});
	}

	@summary = "Default summary"
	macro resubmitTaskByActions(ddlDataDefinitionName = null, workflowAssetType = null, workflowTask = null, workflowAssetTitle = null) {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = ${workflowAssetTitle},
			workflowTask = ${workflowTask});

		MenuItem.click(menuItem = "Resubmit");

		Button.clickDone();

		Alert.viewSuccessMessage();

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});
	}

	@summary = "Default summary"
	macro resubmitTaskByDetails(ddlDataDefinitionName = null, workflowAssetType = null, workflowTask = null, workflowAssetTitle = null, workflowAssetContent = null, workflowAssignedTo = null) {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = ${workflowAssetContent},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssignedTo = ${workflowAssignedTo},
			workflowTask = ${workflowTask});

		LexiconEntry.gotoVerticalEllipsisMenuItemNoError(menuItem = "Resubmit");

		Button.clickDone();

		Alert.viewSuccessMessage();

		Navigator.gotoBack();

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});
	}

	@summary = "Default summary"
	macro saveDefinition(newKaleoDesigner = null) {
		if (${newKaleoDesigner} == "True") {
			AssertClick(
				locator1 = "KaleoDesigner#SAVE_BUTTON",
				value1 = "Save");
		}
		else {
			AssertClick(
				locator1 = "KaleoDesigner#SAVE_BUTTON",
				value1 = "Save");

			Alert.viewSuccessMessage();
		}
	}

	@summary = "Default summary"
	macro searchFieldPresent(fieldName = null) {
		Type(
			locator1 = "WorkflowMetricsProcessListView#METRICS_WORKFLOW_SEARCH_BAR",
			value1 = ${fieldName});

		Click(locator1 = "WorkflowConfiguration#PROCESS_BUILDER_SEARCH_BAR_BUTTON");
	}

	@summary = "Default summary"
	macro setWorkflowToMiniumChannel(workflowDefinition = null) {
		Select(
			key_title = "Buyer Order Approval Workflow",
			locator1 = "CommerceEntry#CATALOGS_FORM",
			value1 = ${workflowDefinition});

		Button.clickSave();
	}

	@summary = "Default summary"
	macro tearDownPortalWorkflow() {
		Workflow.openWorkflowListView();

		Navigator.gotoNavItem(navItem = "Configuration");

		Pagination.changePagination(itemsPerPage = 40);

		Workflow._tearDownWorkflow();
	}

	@summary = "Default summary"
	macro tearDownSiteWorkflow() {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow._tearDownWorkflow();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Web Content");

		Workflow.configureWCWorkflowViaFolderInfo(workflowDefinition = "No Workflow");
	}

	@summary = "Default summary"
	macro tearDownSpecificWorkflowDefinition(workflowDefinitionTitle = null) {
		Workflow.openWorkflowListView();

		var key_workflowDefinitionTitle = ${workflowDefinitionTitle};

		while (IsElementPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS")) {
			Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = ${workflowDefinitionTitle});

			Workflow.openWorkflowListView();

			Workflow.deleteWorkflowDefinition(workflowDefinitionTitle = ${workflowDefinitionTitle});
		}
	}

	@summary = "Default summary"
	macro tearDownWorkflowDefinitions() {
		Workflow.openWorkflowListView();

		while (IsElementPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_EXTRA")) {
			if (IsElementPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_DEFINITION_EXTRA_ELLIPSIS")) {
				Workflow.unpublishWorkflowDefinitionExtra();
			}

			Workflow.deleteWorkflowDefinitionExtra();
		}
	}

	@summary = "Default summary"
	macro unpublishWorkflowDefinition(workflowDefinitionTitle = null) {
		var key_workflowDefinitionTitle = ${workflowDefinitionTitle};

		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Unpublish");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro unpublishWorkflowDefinitionExtra() {
		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_DEFINITION_EXTRA_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Unpublish");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro updateDefinition(workflowDefinitionTitle = null) {
		PortletEntry.inputTitle(title = ${workflowDefinitionTitle});

		Button.click(button = "Update");
	}

	@summary = "Default summary"
	macro updateDueDateAssignedToMeTaskByActions(ddlDataDefinitionName = null, workflowAssetType = null, workflowTask = null, workflowDueDateTime = null, workflowAssetTitle = null, workflowActivityComment = null) {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = ${workflowAssetTitle},
			workflowTask = ${workflowTask});

		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = ${workflowTask};

		MenuItem.click(menuItem = "Update Due Date");

		SelectFrame(locator1 = "MyWorkflowTasks#IFRAME_UPDATE_DUE_DATE");

		var currentYear = DateUtil.getCurrentYear();

		var futureYear = ${currentYear} + 1;

		Type(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE",
			value1 = "4/11/${futureYear}");

		var startDateTime = StringUtil.removeSpaces(${workflowDueDateTime});

		Type.sendKeys(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE_TIME",
			value1 = ${workflowDueDateTime});

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = ${workflowActivityComment};

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = ${workflowActivityComment});
		}

		Button.clickDone();

		Alert.viewSuccessMessage();

		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_DUE_DATE",
			value1 = "Within");
	}

	@summary = "Default summary"
	macro updateDueDateTaskByActions(ddlDataDefinitionName = null, workflowAssetType = null, workflowTask = null, workflowDueDateTime = null, workflowAssetTitle = null, workflowActivityComment = null) {
		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});

		Workflow.gotoTaskAssignedToMyRolesActionsCmd(
			workflowAssetTitle = ${workflowAssetTitle},
			workflowTask = ${workflowTask});

		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = ${workflowTask};

		MenuItem.click(menuItem = "Update Due Date");

		SelectFrame(locator1 = "MyWorkflowTasks#IFRAME_UPDATE_DUE_DATE");

		var currentYear = DateUtil.getCurrentYear();

		var futureYear = ${currentYear} + 1;

		SelectFrame(locator1 = "WorkflowDefinition#DIALOG_BOX_BODY");

		SelectFrame(locator1 = "IFrame#IFRAME");

		Type(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE",
			value1 = "4/11/${futureYear}");

		var startDateTime = StringUtil.removeSpaces(${workflowDueDateTime});

		Type.sendKeys(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE_TIME",
			value1 = ${workflowDueDateTime});

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = ${workflowActivityComment};

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = ${workflowActivityComment});
		}

		Workflow.confirmWorkflowAction();

		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = ${ddlDataDefinitionName},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowTask = ${workflowTask});
	}

	@summary = "Default summary"
	macro uploadDefinition(workflowDefinitionFile = null, workflowDefinitionTitle = null, errorMessage = null) {
		Workflow.addNewDefinition(workflowDefinitionTitle = ${workflowDefinitionTitle});

		if (IsElementPresent(locator1 = "KaleoDesignerEditWorkflow#SOURCE_KALEO_XML_TAB")) {
			KaleoDesigner.viewSourceXMLTab();
		}

		UploadDependencyFile.uploadFile(fileName = ${workflowDefinitionFile});

		Alert.viewSuccessMessageText(successMessage = "Definition imported successfully.");

		if (isSet(errorMessage)) {
			AssertClickNoError(
				locator1 = "Button#PUBLISH",
				value1 = "Publish");

			Alert.viewErrorMessage(errorMessage = ${errorMessage});
		}
		else {
			PortletEntry.publish();

			AssertTextEquals.assertPartialText(
				locator1 = "Portlet#HEADER",
				value1 = ${workflowDefinitionTitle});

			Navigator.gotoBack();
		}
	}

	@summary = "Default summary"
	macro viewAssignedToMyRolesTasksCP(workflowAssetType = null, workflowTask = null, workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = ${workflowTask};

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow._gotoPendingFilter();

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = ${workflowTask});

		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = ${workflowAssetTitle});

		var key_workflowAssetType = ${workflowAssetType};

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TYPE",
			value1 = ${workflowAssetType});

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ACTIONS");
	}

	@summary = "Default summary"
	macro viewCannotRejectTaskByActions(workflowTask = null, workflowAssetTitle = null) {
		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = ${workflowAssetTitle},
			workflowTask = ${workflowTask});

		AssertElementNotPresent(locator1 = "MyWorkflowTasksTask#MENU_REJECT");
	}

	@summary = "Default summary"
	macro viewCannotWithdrawTaskByActions(workflowAssetType = null, workflowDefinition = null, workflowTask = null, workflowAssetTitle = null) {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_DEFINITION",
			value1 = ${workflowDefinition});

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TITLE",
			value1 = ${workflowAssetTitle});

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TYPE",
			value1 = ${workflowAssetType});

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TASK",
			value1 = ${workflowTask});

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");

		AssertElementNotPresent(locator1 = "//div[@id='_158_workflowInstancesSearchContainer']//tr[contains(.,'${key_workflowAssetTitle}')]/td[7]/a[contains(@id,'menu_withdraw-submission')]/span");

		AssertTextNotPresent(value1 = "Withdraw Submission");
	}

	@summary = "Default summary"
	macro viewCompletedSubmission(workflowAssetType = null, workflowDefinition = null, workflowStatus = null, workflowAssetTitle = null) {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertTextEquals.assertPartialText(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TITLE",
			value1 = ${workflowAssetTitle});

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TYPE",
			value1 = ${workflowAssetType});

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TASK",
			value1 = ${workflowStatus});

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_DEFINITION",
			value1 = ${workflowDefinition});

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");
	}

	@summary = "Default summary"
	macro viewCompletedTask(workflowAssetType = null, multipleTasks = null, taskPosition = null, workflowTask = null, workflowAssetTitle = null, completedTask = null) {
		Workflow.gotoCompletedFilter();

		if (${workflowAssetType} == "Translation") {
			var key_workflowAssetTitle = "Translation";
		}
		else {
			var key_workflowAssetTitle = ${workflowAssetTitle};
		}

		var key_workflowTask = ${workflowTask};

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = ${workflowTask});

		if (${workflowAssetType} == "Translation") {
			AssertTextEquals.assertPartialText(
				locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE",
				value1 = "Translation");
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE",
				value1 = ${workflowAssetTitle});
		}

		if (${multipleTasks} == "true") {
			AssertTextEquals(
				key_position = ${taskPosition},
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_SPECIFIC_TYPE",
				value1 = ${workflowAssetType});
		}
		else {
			AssertTextEquals(
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
				value1 = ${workflowAssetType});
		}

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		if (${completedTask} == "viewDetails") {
			AssertClick(
				key_workflowAssetTitle = ${workflowAssetTitle},
				locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE",
				value1 = ${workflowAssetTitle});

			AssertTextEquals.assertPartialText(
				locator1 = "MyWorkflowTasksTask#PREVIEW_TITLE",
				value1 = ${workflowAssetTitle});
		}
	}

	@summary = "Default summary"
	macro viewCompletedTasksTaskNotPresentCP(workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertElementNotPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK");

		AssertElementNotPresent(locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE");

		AssertElementNotPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE");
	}

	@summary = "Default summary"
	macro viewConfigurationSelected(workflowDefinition = null, workflowResourceValue = null) {
		var key_workflowResourceValue = ${workflowResourceValue};

		AssertTextEquals(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_WORKFLOW",
			value1 = ${workflowDefinition});
	}

	@summary = "Default summary"
	macro viewDefaultMySubmissionsCP() {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no publications requested by me.");
	}

	@summary = "Default summary"
	macro viewDefaultMyWorkflowTasksCP() {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no tasks assigned to you.");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no tasks assigned to your roles.");
	}

	@summary = "Default summary"
	macro viewDefaultWorkflowSubmissions() {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no publication requests.");
	}

	@summary = "Default summary"
	macro viewDefinition(workflowDefinitionName = null, workflowDefinitionTitle = null) {
		var key_workflowDefinitionTitle = ${workflowDefinitionTitle};

		if (isSet(workflowDefinitionTitle)) {
			AssertTextEquals(
				locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE",
				value1 = ${workflowDefinitionTitle});
		}
		else {
			var key_workflowDefinitionTitle = ${workflowDefinitionName};

			AssertTextEquals(
				locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE",
				value1 = ${workflowDefinitionName});
		}
	}

	@summary = "Default summary"
	macro viewDefinitionNotPresent(workflowDefinitionTitle = null) {
		AssertElementNotPresent(
			key_workflowDefinitionTitle = ${workflowDefinitionTitle},
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE");
	}

	@summary = "Default summary"
	macro viewDefinitionPublicationStatus(status = null) {
		AssertTextEquals(
			locator1 = "WorkflowDefinition#PUBLICATION_STATUS",
			value1 = ${status});
	}

	@summary = "Default summary"
	macro viewDefinitionPublished(workflowDefinitionTitle = null) {
		var key_workflowDefinitionTitle = ${workflowDefinitionTitle};

		AssertVisible(
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_PUBLISHED",
			value1 = ${workflowDefinitionTitle});
	}

	@summary = "Default summary"
	macro viewDefinitionUnpublished(workflowDefinitionTitle = null) {
		var key_workflowDefinitionTitle = ${workflowDefinitionTitle};

		AssertTextEquals(
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_UNPUBLISHED",
			value1 = ${workflowDefinitionTitle});
	}

	@summary = "Default summary"
	macro viewMySubmissions(workflowAssetType = null, workflowTask = null, workflowAssetTitle = null) {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TITLE",
			value1 = ${workflowAssetTitle});

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TYPE",
			value1 = ${workflowAssetType});

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TASK",
			value1 = ${workflowTask});

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");
	}

	@summary = "Default summary"
	macro viewMySubmissionsTaskPreview(workflowAssetType = null, workflowSubmissionTitle = null, workflowAssetTitle = null, workflowAssetContent = null) {
		AssertTextEquals(
			locator1 = "WorkflowSubmissionsTask#PREVIEW",
			value1 = "Preview of ${workflowAssetType}");

		AssertTextEquals.assertPartialText(
			locator1 = "WorkflowSubmissionsTask#PREVIEW_CONTENT_TITLE",
			value1 = ${workflowAssetTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "WorkflowSubmissionsTask#PREVIEW_CONTENT_BODY",
			value1 = ${workflowAssetContent});

		Portlet.viewTitle(portletName = ${workflowSubmissionTitle});
	}

	@summary = "Default summary"
	macro viewNoDuplicateTaskAssignedToMyRoles(workflowTask = null, workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = ${workflowTask};

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow._gotoPendingFilter();

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = ${workflowAssetTitle});

		AssertElementNotPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE_DUPLICATE");
	}

	@summary = "Default summary"
	macro viewNotPresentWorkflowStatus(statusNotPresent = null) {
		AssertElementNotPresent(
			key_status = ${statusNotPresent},
			locator1 = "CommerceEntry#WORKFLOW_STATUS");
	}

	@summary = "Default summary"
	macro viewPendingTasks(workflowAssetType = null, workflowTask = null, workflowAssetTitle = null, workflowNavTab = null) {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = ${workflowTask};

		if (isSet(workflowNavTab)) {
			Navigator.gotoNavTab(navTab = ${workflowNavTab});
		}
		else {
			Navigator.gotoNavTab(navTab = "Assigned to My Roles");
		}

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = ${workflowTask});

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE",
			value1 = ${workflowAssetTitle});

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = ${workflowAssetType});

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");
	}

	@summary = "Default summary"
	macro viewRejectedTask(workflowAssetType = null, workflowAssetTitle = null) {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = "Update";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "Update");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = ${workflowAssetTitle});

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = ${workflowAssetType});

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");
	}

	@summary = "Default summary"
	macro viewSecondAssetEntryContent(fieldLabel = null, workflowAssetTitle = null, fieldValue = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertClick(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TITLE_2",
			value1 = ${workflowAssetTitle});

		WorkflowAsset.previewViewContent(
			fieldLabel = ${fieldLabel},
			fieldValue = ${fieldValue});
	}

	@summary = "Default summary"
	macro viewSubmissionNotPresent(workflowAssetTitle = null) {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertElementNotPresent(locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE");
	}

	@summary = "Default summary"
	macro viewTaskAssignedToMe(workflowAssetType = null, multipleTasks = null, taskPosition = null, workflowTask = null, workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = ${workflowTask};

		Navigator.gotoNavTab(navTab = "Assigned to Me");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_ACTIVE");

		Workflow._gotoPendingFilter();

		while ((IsElementNotPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK")) && (maxIterations = "10")) {
			Refresh();

			Workflow._gotoPendingFilter();
		}

		if (${multipleTasks} == "true") {
			var key_position = ${taskPosition};

			AssertTextEquals(
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_SPECIFIC_TASK",
				value1 = ${workflowTask});

			AssertTextEquals(
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_SPECIFIC_TYPE",
				value1 = ${workflowAssetType});
		}
		else {
			AssertTextEquals(
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
				value1 = ${workflowTask});

			AssertTextEquals(
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
				value1 = ${workflowAssetType});
		}

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = ${workflowAssetTitle});

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");
	}

	@summary = "Default summary"
	macro viewTaskAssignedToMeDetails(workflowTask = null, workflowAssetTitle = null, workflowAssetContent = null, workflowAssignedTo = null) {
		Navigator.gotoNavTab(navTab = "Assigned to Me");

		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertClick.assertPartialTextClickAt(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = ${workflowAssetTitle});

		if (isSet(workflowAssignedTo)) {
			AssertTextEquals.assertText(
				locator1 = "MyWorkflowTasksTask#ASSIGNED_TO",
				value1 = ${workflowAssignedTo});
		}
		else {
			AssertTextEquals.assertText(
				locator1 = "MyWorkflowTasksTask#ASSIGNED_TO",
				value1 = "Test Test");
		}

		var key_workflowTask = ${workflowTask};

		AssertTextEquals.assertText(
			locator1 = "MyWorkflowTasksTask#TASK_NAME",
			value1 = ${workflowTask});

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_TITLE",
			value1 = ${workflowAssetTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_CONTENT",
			value1 = ${workflowAssetContent});
	}

	@summary = "Default summary"
	macro viewTaskAssignedToMyRoles(workflowAssetType = null, workflowTask = null, workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = ${workflowTask};

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		while ((IsElementNotPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_LAST_ACTIVITY_DATE")) && (maxIterations = "10")) {
			Navigator.gotoNavTab(navTab = "Assigned to Me");

			Navigator.gotoNavTab(navTab = "Assigned to My Roles");
		}

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = ${workflowTask});

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = ${workflowAssetTitle});

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TYPE",
			value1 = ${workflowAssetType});

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ACTIONS");
	}

	@summary = "Default summary"
	macro viewTaskAssignedToMyRolesDetails(workflowTask = null, workflowAssetTitle = null) {
		var key_workflowAssetTitle = ${workflowAssetTitle};
		var key_workflowTask = ${workflowTask};

		AssertClick.assertPartialTextClickAt(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = ${workflowAssetTitle});

		AssertTextEquals(
			locator1 = "MyWorkflowTasksTask#ASSIGNED_TO",
			value1 = "Nobody");

		AssertTextEquals(
			locator1 = "MyWorkflowTasksTask#TASK_NAME",
			value1 = ${workflowTask});

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_TITLE",
			value1 = ${workflowAssetTitle});
	}

	@summary = "Default summary"
	macro viewTaskHeaderTitle(workflowTask = null, kfProcessName = null) {
		AssertTextEquals(
			locator1 = "ControlMenu#HEADING",
			value1 = "${workflowTask}: ${kfProcessName}");
	}

	@summary = "Default summary"
	macro viewWebContentWithWorkflowCP(webContentTitle = null) {
		WebContentNavigator.gotoViewStatus(
			webContentStatus = "PENDING",
			webContentTitle = ${webContentTitle});

		AssertTextEquals(
			key_status = "Pending",
			locator1 = "AssetWorkflow#WORKFLOW_STATUS",
			value1 = "Pending");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = ${webContentTitle});
	}

	@summary = "Default summary"
	macro viewWebContentWithWorkflowStatus(webContentTitle = null, webContentStatus = null) {
		AssertTextEquals(
			key_status = ${webContentStatus},
			locator1 = "WCEditWebContent#WORKFLOW_STATUS",
			value1 = ${webContentStatus});

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = ${webContentTitle});
	}

	@summary = "Default summary"
	macro viewWorkflowDefinition(workflowDefinitionTitle = null) {
		var key_workflowDefinitionTitle = ${workflowDefinitionTitle};

		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "View");
	}

	@summary = "Default summary"
	macro viewWorkflowStatus(status = null) {
		AssertTextEquals(
			key_status = ${status},
			locator1 = "CommerceEntry#WORKFLOW_STATUS",
			value1 = ${status});
	}

	@summary = "Default summary"
	macro webContentGoToAddCP() {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Basic Web Content");

		WaitForElementPresent(locator1 = "TextInput#TITLE");

		AssertVisible(locator1 = "TextInput#TITLE");

		while (IsElementNotPresent(locator1 = "WCEditWebContent#SIDEBAR")) {
			WaitForElementPresent(locator1 = "WCEditWebContent#SIDEBAR");
		}
	}

	@summary = "Default summary"
	macro withdrawTaskByActions(workflowAssetType = null, workflowDefinition = null, workflowTask = null, workflowAssetTitle = null) {
		Workflow.viewMySubmissions(
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowDefinition = ${workflowDefinition},
			workflowTask = ${workflowTask});

		Workflow._gotoPendingFilter();

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Withdraw Submission");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro withdrawTaskByDetails(workflowAssetType = null, workflowDefinition = null, workflowTask = null, workflowSubmissionTitle = null, workflowAssetTitle = null, workflowAssetContent = null) {
		Workflow.viewMySubmissions(
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowDefinition = ${workflowDefinition},
			workflowTask = ${workflowTask});

		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = ${workflowAssetTitle});

		Workflow.viewMySubmissionsTaskPreview(
			workflowAssetContent = ${workflowAssetContent},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowSubmissionTitle = ${workflowSubmissionTitle});

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Withdraw Submission");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro withdrawTaskCompletedNoByDetails(workflowAssetType = null, workflowDefinition = null, workflowTask = null, workflowSubmissionTitle = null, workflowAssetTitle = null, workflowAssetContent = null) {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = ${workflowAssetTitle};

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_DEFINITION",
			value1 = ${workflowDefinition});

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TITLE",
			value1 = ${workflowAssetTitle});

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TYPE",
			value1 = ${workflowAssetType});

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TASK",
			value1 = ${workflowTask});

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");

		AssertClick(
			locator1 = "WorkflowSubmissions#MY_SUBMISSIONS_TABLE_TITLE",
			value1 = ${workflowAssetTitle});

		Workflow.viewMySubmissionsTaskPreview(
			workflowAssetContent = ${workflowAssetContent},
			workflowAssetTitle = ${workflowAssetTitle},
			workflowAssetType = ${workflowAssetType},
			workflowSubmissionTitle = ${workflowSubmissionTitle});

		AssertElementNotPresent(locator1 = "WorkflowSubmissionsTask#MENU_WITHDRAW_SUBMISSION");

		AssertTextNotPresent(value1 = "Withdraw Submission");
	}

}