definition {

	@summary = "Default summary"
	macro _createNCommentsInBlogPosting(numberOfCommentsToCreate = null, createStrategy = null, blogPostingId = null) {
		Variables.assertDefined(parameterList = "${blogPostingId},${numberOfCommentsToCreate},${createStrategy}");

		var size = ${numberOfCommentsToCreate} + 1;
		var i = 1;
		var body = '''
			[
		''';

		while ((${i} != ${size}) && (maxIterations = "100")) {
			var commentBody = '''
				{
					"text": "commentText${i}"
				}
			''';
			var j = ${i} + 1;

			if (${j} == ${size}) {
				var body = StringUtil.replace(${body}, ${body}, "${body}${commentBody}]");
			}
			else {
				var commentBody = StringUtil.replace(${commentBody}, ${commentBody}, "${commentBody},");

				var body = StringUtil.replace(${body}, ${body}, "${body}${commentBody}");
			}

			var i = ${i} + 1;
		}

		var portalURL = JSONCompany.getPortalURL();
		var userPassword = PropsUtil.get("default.admin.password");

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/blog-postings/${blogPostingId}/comments/batch?createStrategy=${createStrategy} \
				-u test@liferay.com:${userPassword} \
				-H Content-Type: application/json \
				-d ${body}
		''';

		var curl = JSONCurlUtil.post(${curl});

		return ${curl};
	}

	@summary = "Default summary"
	macro _curlBlogPostingComments(blogPostingId = null, commentId = null) {
		var portalURL = JSONCompany.getPortalURL();
		var userPassword = PropsUtil.get("default.admin.password");

		if (isSet(commentId)) {
			var api = "comments/${commentId}/comments";
		}
		else {
			var api = "blog-postings/${blogPostingId}/comments";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/${api} \
				-u test@liferay.com:${userPassword} \
				-H Content-Type: application/json
		''';

		return ${curl};
	}

	@summary = "Default summary"
	macro _curlBlogPostingCommentsByExternalReferenceCode(blogPostingChildCommentErc = null, blogPostingErc = null, blogPostingCommentErc = null) {
		Variables.assertDefined(parameterList = ${blogPostingCommentErc});

		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");
		var userPassword = PropsUtil.get("default.admin.password");

		if (isSet(blogPostingChildCommentErc)) {
			var api = "comments/by-external-reference-code/${blogPostingCommentErc}/comments/by-external-reference-code/${blogPostingChildCommentErc}";
		}
		else {
			var api = "blog-postings/by-external-reference-code/${blogPostingErc}/comments/by-external-reference-code/${blogPostingCommentErc}";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/sites/${siteId}/${api} \
				-u test@liferay.com:${userPassword} \
				-H accept: application/json
		''';

		return ${curl};
	}

	@summary = "Default summary"
	macro createCommentInBlogPosting(blogPostingId = null, commentId = null, commentText = null) {
		Variables.assertDefined(parameterList = ${commentText});

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "";
		}

		if (!(isSet(parentCommentId))) {
			var parentCommentId = 0;
		}

		if (isSet(blogPostingId)) {
			var curl = CommentAPI._curlBlogPostingComments(blogPostingId = ${blogPostingId});
		}

		if (isSet(commentId)) {
			var curl = CommentAPI._curlBlogPostingComments(commentId = ${commentId});
		}

		var body = '''
			-d {
				"externalReferenceCode": "${externalReferenceCode}",
				"parentCommentId": "${parentCommentId}",
				"text": "${commentText}"
			}
		''';

		var curl = StringUtil.add(${curl}, ${body}, " ");

		var response = JSONCurlUtil.post(${curl});

		return ${response};
	}

	@summary = "Default summary"
	macro getFieldValueOfBlogPostingComments(blogPostingChildCommentErc = null, fieldName = null, blogPostingId = null, commentId = null, blogPostingErc = null, blogPostingCommentErc = null) {
		Variables.assertDefined(parameterList = ${fieldName});

		if (!(isSet(responseToParse))) {
			if (isSet(blogPostingCommentErc)) {
				var curl = CommentAPI._curlBlogPostingCommentsByExternalReferenceCode(
					blogPostingChildCommentErc = ${blogPostingChildCommentErc},
					blogPostingCommentErc = ${blogPostingCommentErc},
					blogPostingErc = ${blogPostingErc});
			}
			else {
				var curl = CommentAPI._curlBlogPostingComments(
					blogPostingId = ${blogPostingId},
					commentId = ${commentId});
			}

			var responseToParse = JSONCurlUtil.get(${curl});
		}

		var fieldValue = JSONUtil.getWithJSONPath(${responseToParse}, "$..${fieldName}");

		return ${fieldValue};
	}

	@summary = "Default summary"
	macro getIdOfCreateNCommentsInBlogPostingBatchEngineImportTask(numberOfCommentsToCreate = null, createStrategy = null, blogPostingId = null) {
		var response = CommentAPI._createNCommentsInBlogPosting(
			blogPostingId = ${blogPostingId},
			createStrategy = ${createStrategy},
			numberOfCommentsToCreate = ${numberOfCommentsToCreate});

		var importTaskId = JSONPathUtil.getIdValue(response = ${response});

		return ${importTaskId};
	}

}