definition {

	@summary = "Default summary"
	macro addAndPublishEndpointConfiguration(fieldName = null, name = null, editValue = null, title = null, schemaName = null, entity = null) {
		Variables.assertDefined(parameterList = "${name},${entity},${title}");

		APIBuilderUI.goToEditRelatedEntryInEditApplication(
			entity = ${entity},
			name = ${name},
			tabEntity = "Configuration",
			title = ${title});

		if (isSet(schemaName)) {
			if (!(isSet(currentSchema))) {
				var currentSchema = "Select a Schema";
			}

			Click(
				key_value = ${currentSchema},
				locator1 = "APIBuilder#DROPDOWN_TOGGLE");

			Click(
				key_optionName = ${schemaName},
				locator1 = "ObjectAdmin#LAYOUT_ADD_FIELD_OPTION");
		}

		if (isSet(fieldName)) {
			Type(
				fieldName = ${fieldName},
				locator1 = "APIBuilder#ODATA_TEXTAREA",
				value1 = ${editValue});
		}

		Click(locator1 = "APIBuilder#PUBLISH_BUTTON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro addAndPublishEndpointInfo(endpointPath = null, name = null, description = null, title = null, entity = null) {
		Variables.assertDefined(parameterList = "${name},${entity},${title}");

		APIBuilderUI.goToEditRelatedEntryInEditApplication(
			entity = ${entity},
			name = ${name},
			tabEntity = "Info",
			title = ${title});

		if (isSet(description)) {
			Type(
				key_value = "endpoint",
				locator1 = "APIBuilder#DESCRIPTION",
				value1 = ${description});
		}

		if (isSet(endpointPath)) {
			Type(
				key_placeHolder = "Enter Path",
				locator1 = "TextInput#ANY_PLACEHOLDER",
				value1 = ${endpointPath});
		}

		Click(locator1 = "APIBuilder#PUBLISH_BUTTON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro addAndPublishSchemaProperties(fieldName = null, relatedPropertyName = null, relatedFieldName = null, propertyName = null, name = null, relatedObjectName = null, title = null, entity = null) {
		Variables.assertDefined(parameterList = "${name},${entity},${title}");

		APIBuilderUI.goToEditRelatedEntryInEditApplication(
			entity = ${entity},
			name = ${name},
			tabEntity = "Properties",
			title = ${title});

		Click(
			key_text = ${fieldName},
			locator1 = "APIBuilder#PROPERTY_CONTAINER");

		if (isSet(propertyName)) {
			APIBuilderUI.editSchemaProperty(
				fieldName = ${fieldName},
				propertyName = ${propertyName});
		}

		if (IsElementPresent(locator1 = "APIBuilder#VIEW_RELATED_OBJECTS")) {
			APIBuilderUI.gotoRelatedObjectsProperties(relatedObjectName = ${relatedObjectName});

			Click(
				key_text = ${relatedFieldName},
				locator1 = "APIBuilder#PROPERTY_CONTAINER");

			if (isSet(relatedPropertyName)) {
				APIBuilderUI.editSchemaProperty(
					fieldName = ${relatedFieldName},
					propertyName = ${relatedPropertyName});
			}
		}

		Click(locator1 = "APIBuilder#PUBLISH_BUTTON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro assertSortedStatusInOrder(statusList = null) {
		Variables.assertDefined(parameterList = ${statusList});

		var key_index = 1;

		for (var statusValue : list ${statusList}) {
			AssertTextEquals(
				index = ${key_index},
				locator1 = "APIBuilder#STATUS_LIST",
				value1 = ${statusValue});

			var key_index = ${key_index} + 1;
		}
	}

	@summary = "Default summary"
	macro changePublicationStatus(key_title = null) {
		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "API Builder");

		WaitForElementPresent(
			key_objectLabel = "API Builder",
			locator1 = "ObjectPortlet#OBJECT_PORTLET_HEADER");

		Click(
			key_title = ${key_title},
			locator1 = "APIBuilder#DROPDOWN_MENU");

		Click(locator1 = "APIBuilder#CHANGE_PUBLICATION_STATUS_BUTTON");

		if (isSet(unpublish)) {
			Click(locator1 = "Button#UNPUBLISH");
		}
	}

	@summary = "Default summary"
	macro configureAPIEndpoint(path = null, method = null, scope = null, name = null, retrieveType = null, applicationId = null) {
		if (isSet(addByPlus)) {
			Click(locator1 = "Button#PLUS");
		}
		else {
			Click(locator1 = "APIBuilder#ADD_API_ENDPOINT");
		}

		if (isSet(name)) {
			Type(
				locator1 = "TextInput#NAME",
				value1 = ${name});
		}

		if (isSet(method)) {
			Click(
				key_value = "Select Method",
				locator1 = "APIBuilder#DROPDOWN_TOGGLE");

			Click(
				key_optionName = ${method},
				locator1 = "ObjectAdmin#LAYOUT_ADD_FIELD_OPTION");
		}

		if (isSet(retrieveType)) {
			Click(
				key_value = "Select Type",
				locator1 = "APIBuilder#DROPDOWN_TOGGLE");

			Click(
				key_optionName = ${retrieveType},
				locator1 = "ObjectAdmin#LAYOUT_ADD_FIELD_OPTION");
		}

		if (isSet(scope)) {
			Click(
				key_value = "Select Scope",
				locator1 = "APIBuilder#DROPDOWN_TOGGLE");

			Click(
				key_optionName = ${scope},
				locator1 = "ObjectAdmin#LAYOUT_ADD_FIELD_OPTION");
		}

		if (isSet(description)) {
			Type(
				key_value = "endpoint",
				locator1 = "APIBuilder#DESCRIPTION",
				value1 = ${description});
		}

		if (isSet(path)) {
			Type(
				key_placeHolder = "Enter Path",
				locator1 = "TextInput#ANY_PLACEHOLDER",
				value1 = ${path});
		}

		if (isSet(pathCP)) {
			Type(
				key_fieldLabel = "Path",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = ${pathCP});
		}

		if (isSet(parameter)) {
			Type(
				key_placeHolder = "Enter Parameter",
				locator1 = "TextInput#ANY_PLACEHOLDER",
				value1 = ${parameter});
		}

		if (isSet(applicationId)) {
			Click.pauseClickAt(
				locator1 = "TextInput#ANY_WITH_NAME",
				name = "r_apiApplicationToAPIEndpoints_l_apiApplicationId");

			Click(
				applicationId = ${applicationId},
				locator1 = "APIBuilder#API_APPLICATION_TO_API_ENDPOINTS");
		}
	}

	@summary = "Default summary"
	macro createAPIApplication(baseURL = null, description = null, title = null) {
		Variables.assertDefined(parameterList = ${title});

		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "API Builder");

		if (isSet(addByPlus)) {
			Click(locator1 = "Button#PLUS");
		}
		else {
			Click(locator1 = "APIBuilder#ADD_NEW_API_APPLICATION");
		}

		Type(
			key_fieldLabel = "Title",
			locator1 = "Modal#INPUT_WITH_LABEL",
			value1 = ${title});

		if (isSet(baseURL)) {
			Type(
				key_fieldLabel = "URL",
				locator1 = "Modal#INPUT_WITH_LABEL",
				value1 = ${baseURL});
		}

		if (isSet(description)) {
			Type(
				key_value = "API",
				locator1 = "APIBuilder#DESCRIPTION",
				value1 = ${description});
		}

		Click(locator1 = "APIBuilder#CREATE_BUTTON");
	}

	@summary = "Default summary"
	macro createAPIEndpoint(path = null, method = null, scope = null, name = null, retrieveType = null, applicationId = null) {
		APIBuilderUI.configureAPIEndpoint(
			addByPlus = ${addByPlus},
			applicationId = ${applicationId},
			description = ${description},
			method = ${method},
			name = ${name},
			parameter = ${parameter},
			path = ${path},
			pathCP = ${pathCP},
			retrieveType = ${retrieveType},
			scope = ${scope});

		if (IsElementPresent(locator1 = "Button#SAVE")) {
			AssertClick(
				locator1 = "Button#SAVE",
				value1 = "Save");
		}
		else {
			Click(locator1 = "APIBuilder#CREATE_BUTTON");
		}
	}

	@summary = "Default summary"
	macro createAPISchema(objectDefinitionName = null, name = null) {
		Variables.assertDefined(parameterList = "${name},${objectDefinitionName}");

		if (isSet(addByPlus)) {
			Click(locator1 = "Button#PLUS");
		}
		else {
			Click(locator1 = "APIBuilder#ADD_NEW_SCHEMA");
		}

		Type(
			locator1 = "TextInput#NAME",
			value1 = ${name});

		if (isSet(fieldDescription)) {
			Type(
				key_value = "schema",
				locator1 = "APIBuilder#DESCRIPTION",
				value1 = ${fieldDescription});
		}

		Click(locator1 = "APIBuilder#SELECT_AN_OBJECT_DEFINITION");

		Click(
			key_kebabOption = ${objectDefinitionName},
			locator1 = "ObjectAdmin#KEBAB_MENU_OPTION");

		if (isSet(confirmCreation)) {
			Click(locator1 = "APIBuilder#CREATE_BUTTON");
		}
	}

	@summary = "Default summary"
	macro deleteAPIApplication(key_title = null) {
		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "API Builder");

		Click(
			key_title = ${key_title},
			locator1 = "APIBuilder#DROPDOWN_MENU");

		Click(locator1 = "APIBuilder#DELETE_IN_DROPDOWN_MENU");
	}

	@summary = "Default summary"
	macro deleteAPIEndpoint(endpointPath = null, applicationTitle = null) {
		APIBuilderUI.switchToRelatedEntryInEditApplication(
			entity = "Endpoints",
			title = ${applicationTitle});

		Click(
			key_title = ${endpointPath},
			locator1 = "APIBuilder#DROPDOWN_MENU");

		Click(locator1 = "APIBuilder#DELETE_IN_DROPDOWN_MENU");

		if (isSet(confirmDeletion)) {
			Click(locator1 = "APIBuilder#MODAL_DELETE_BUTTON");
		}
	}

	@summary = "Default summary"
	macro deleteAPISchema(applicationTitle = null, schemaName = null) {
		APIBuilderUI.switchToRelatedEntryInEditApplication(
			entity = "Schemas",
			title = ${applicationTitle});

		Click(
			key_title = ${schemaName},
			locator1 = "APIBuilder#DROPDOWN_MENU");

		Click(locator1 = "APIBuilder#DELETE_IN_DROPDOWN_MENU");

		if (isSet(confirmDeletion)) {
			Click(locator1 = "APIBuilder#MODAL_DELETE_BUTTON");
		}
	}

	@summary = "Default summary"
	macro editSchemaProperty(fieldName = null, propertyName = null) {
		Variables.assertDefined(parameterList = "${fieldName},${propertyName}");

		MouseOver(
			key_commentValue = ${fieldName},
			locator1 = "PublicationsChanges#COMMENT_VALUE");

		Click(
			key_text = "pencil",
			locator1 = "Icon#ANY");

		Type(
			key_placeHolder = "Enter name",
			locator1 = "TextInput#ANY_PLACEHOLDER",
			value1 = ${propertyName});

		Click(locator1 = "Button#UPDATE");
	}

	@summary = "Default summary"
	macro filterByLastUpdated(fromDate = null, toDate = null) {
		Variables.assertDefined(parameterList = "${fromDate},${toDate}");

		Click.pauseClickAt(locator1 = "Dropdown#FILTER");

		Click.pauseClickAt(locator1 = "APIBuilder#LAST_UPDATED_IN_FILTER");

		Type.sendKeys(
			locator1 = "APIBuilder#FROM_DATE",
			value1 = ${fromDate});

		Type.sendKeys(
			locator1 = "APIBuilder#TO_DATE",
			value1 = ${toDate});

		Click(
			key_text = "Add Filter",
			locator1 = "Button#ANY");
	}

	@summary = "Default summary"
	macro filterByStatus(labelName = null) {
		Variables.assertDefined(parameterList = ${labelName});

		Click.pauseClickAt(locator1 = "Dropdown#FILTER");

		Click.pauseClickAt(locator1 = "APIBuilder#STATUS_IN_FILTER");

		Check.checkNotVisible(
			locator1 = "Radio#ANY",
			radioLabel = ${labelName});

		if (isSet(exclude)) {
			Check.checkToggleSwitch(locator1 = "APIBuilder#EXCLUDE_TOGGLE");
		}

		Click(
			key_text = "Add Filter",
			locator1 = "Button#ANY");
	}

	@summary = "Default summary"
	macro goToEditAPIApplicationPage(key_title = null) {
		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "API Builder");

		WaitForElementPresent(
			key_objectLabel = "API Builder",
			locator1 = "ObjectPortlet#OBJECT_PORTLET_HEADER");

		Click(
			key_title = ${key_title},
			locator1 = "APIBuilder#DROPDOWN_MENU");

		Click(locator1 = "APIBuilder#EDIT_BUTTON");
	}

	@summary = "Default summary"
	macro goToEditRelatedEntryInEditApplication(name = null,entity = null,title = null,tabEntity = null) {
		Variables.assertDefined(parameterList = "${name},${entity},${title},${tabEntity}");

		APIBuilderUI.switchToRelatedEntryInEditApplication(
			entity = ${entity},
			title = ${title});

		Click(
			key_title = ${name},
			locator1 = "APIBuilder#DROPDOWN_MENU");

		Click(locator1 = "APIBuilder#EDIT_BUTTON");

		Click(
			locator1 = "Button#BUTTON_WITH_VALUE",
			value = ${tabEntity});
	}

	@summary = "Default summary"
	macro gotoRelatedObjectsProperties(relatedObjectName = null) {
		Variables.assertDefined(parameterList = ${relatedObjectName});

		Click(locator1 = "APIBuilder#VIEW_RELATED_OBJECTS");

		Click(
			key_componentName = ${relatedObjectName},
			locator1 = "Panel#PANEL_TITLE");
	}

	@summary = "Default summary"
	macro publishApplication(key_title = null) {
		APIBuilderUI.goToEditAPIApplicationPage(key_title = ${key_title});

		Click.pauseClickAt(locator1 = "APIBuilder#PUBLISH_BUTTON");

		Alert.viewSuccessMessage();
	}

	@summary = "Default summary"
	macro searchItem(value = null) {
		Variables.assertDefined(parameterList = ${value});

		Type(
			locator1 = "TextInput#SEARCH",
			value1 = ${value});

		KeyPress(
			locator1 = "TextInput#SEARCH",
			value1 = "\RETURN");
	}

	@summary = "Default summary"
	macro setPanelCategoryKeyToObject(objectDefinition = null) {
		Variables.assertDefined(parameterList = ${objectDefinition});

		ObjectAdmin.openObjectAdmin();

		WaitForPageLoad();

		ObjectPortlet.selectCustomObject(label = ${objectDefinition});

		ObjectAdmin.selectDropdownItem(
			labelName = "Panel Link",
			optionName = "Object");

		CreateObject.saveObject();
	}

	@summary = "Default summary"
	macro switchToRelatedEntryInEditApplication(title = null, entity = null) {
		Variables.assertDefined(parameterList = "${entity},${title}");

		APIBuilderUI.goToEditAPIApplicationPage(key_title = ${title});

		Click(
			locator1 = "Button#BUTTON_WITH_VALUE",
			value = ${entity});
	}

	@summary = "Default summary"
	macro updateSchemaNameAndDescription(tabEntity = null, name = null, schemaDescription = null, title = null, schemaName = null, entity = null) {
		Variables.assertDefined(parameterList = "${name},${entity},${title},${tabEntity},${schemaName},${schemaDescription},");

		APIBuilderUI.goToEditRelatedEntryInEditApplication(
			entity = ${entity},
			name = ${name},
			tabEntity = ${tabEntity},
			title = ${title});

		Type(
			locator1 = "TextInput#NAME",
			value1 = ${schemaName});

		Type(
			key_fieldId = "Description",
			locator1 = "TextArea#ANY_ID",
			value1 = ${schemaDescription});

		if (isSet(publish)) {
			Click(locator1 = "APIBuilder#PUBLISH_BUTTON");
		}
	}

	@summary = "Default summary"
	macro viewItemsInOrder(itemList = null) {
		Variables.assertDefined(parameterList = ${itemList});

		var key_index = 1;

		for (var itemValue : list ${itemList}) {
			AssertTextEquals(
				index = ${key_index},
				locator1 = "APIBuilder#TABLE_LIST",
				value1 = ${itemValue});

			var key_index = ${key_index} + 1;
		}
	}

}