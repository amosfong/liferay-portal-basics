definition {

	@summary = "Default summary"
	macro activatePaymentMethod(paymentMethod = null) {
		CommerceEntry.clickTableEntryEditButton(
			entryName = ${paymentMethod},
			table = "Payment Methods");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Type(
			locator1 = "TextInput#NAME",
			value1 = ${paymentMethod});

		Type(
			locator1 = "TextInput#DESCRIPTION",
			value1 = "Pay with ${paymentMethod}.");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#ACTIVE_CHECKBOX");

		Button.clickSave();

		Click(locator1 = "Icon#CLOSE");

		SelectFrame.selectFrameTop();
	}

	@summary = "Default summary"
	macro addCategory(edit = null, key_card = null, multipleVocabularies = null) {
		if (${edit} != "true") {
			Click(locator1 = "Button#PLUS");
		}

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.click(button = "Select");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		Portlet.expandTree();

		if (${multipleVocabularies} == "true") {
			Click(
				key_site = "Minium",
				locator1 = "CommerceEntry#TREEVIEW_NODE_COLLAPSED_PAGES");
		}

		Click(
			key_nodeName = ${key_card},
			locator1 = "Treeview#NODE_ITEM");

		SelectFrame.selectFrameTop();

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.click(button = "Done");
	}

	@summary = "Default summary"
	macro addCategoryDiplayPage(key_card = null) {
		SelectFrame.selectFrameTop();

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.click(button = "Choose");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		Click(
			key_site = "Minium",
			locator1 = "CommerceEntry#TREEVIEW_NODE_COLLAPSED_PAGES");

		Click(
			key_nodeName = ${key_card},
			locator1 = "Treeview#NODE_ITEM");

		SelectFrame.selectFrameTop();

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.clickSave();
	}

	@summary = "Default summary"
	macro addFixedTaxRateTaxConfiguration(quantity = null, fieldLabel = null, taxCategory = null) {
		CommerceEntry.gotoMenuTab(menuTab = "Tax Rates");

		Click(locator1 = "Button#PLUS");

		SelectFrameTop();

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Select(
			key_fieldLabel = "Tax Category",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${taxCategory});

		Type(
			key_fieldLabel = ${fieldLabel},
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = ${quantity});

		Button.clickSubmitButton();
	}

	@summary = "Default summary"
	macro addOverrideDefaultProductDisplayPageTemplate(product = null, displayPageTemplateName = null) {
		Click(locator1 = "Button#PLUS");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Click(
			key_menuTab = "Display Page Template",
			locator1 = "CommerceEntry#MENU_TAB");

		SelectFrame.selectFrameTop();

		CommerceChannels.addProduct(
			edit = "true",
			product = ${product});

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Click(
			key_tabName = "Display Page Template",
			locator1 = "CommerceEntry#OVERRIDE_DEFAULT_DISPLAY_PAGE_SIDE_PANEL_CHOOSE_BUTTON");

		SelectFrame.selectFrameTop();

		SelectFrame(
			key_title = "Select Product Display Page",
			locator1 = "IFrame#MODAL_ANY");

		Click(
			key_entryName = ${displayPageTemplateName},
			locator1 = "ObjectAdmin#VIEW_ENTRY_NAME_ON_PAGE");

		SelectFrame.selectFrameTop();

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Click(locator1 = "Button#SAVE");

		Alert.viewSuccessMessage();

		Click(locator1 = "Icon#CLOSE");
	}

	@summary = "Default summary"
	macro addProduct(product = null, edit = null) {
		if (${edit} != "true") {
			Click(locator1 = "Button#PLUS");
		}

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.click(button = "Select Product");

		SelectFrame.selectFrameTop();

		SelectFrame(
			key_title = "Select Product",
			locator1 = "IFrame#MODAL_ANY");

		CommerceNavigator.searchEntry(entryName = ${product});

		Click(
			key_entryName = ${product},
			locator1 = "CommerceEntry#CHOOSE_ENTRY_BUTTON");

		SelectFrame.selectFrameTop();
	}

	@summary = "Default summary"
	macro addShippingMethodTrackingURL(trackingURL = null) {
		Type(
			key_fieldLabel = "Tracking URL",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = ${trackingURL});
	}

	@summary = "Default summary"
	macro addShippingOption(amount = null, name = null, description = null, priority = null, key = null) {
		Variables.assertDefined(parameterList = ${name});

		Click(locator1 = "Button#PLUS");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Type(
			locator1 = "TextInput#NAME",
			value1 = ${name});

		if (isSet(description)) {
			Type(
				locator1 = "TextInput#DESCRIPTION",
				value1 = ${description});
		}

		if (isSet(amount)) {
			Type(
				key_fieldLabel = "Amount",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = ${amount});
		}

		if (isSet(priority)) {
			Type(
				locator1 = "CommerceEntry#PRIORITY_FIELD",
				value1 = ${priority});
		}

		if (isSet(key)) {
			Type(
				key_fieldLabel = "Key",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = ${key});
		}

		Button.clickSave();

		Alert.viewSuccessMessage();

		Click(locator1 = "Icon#CLOSE");

		SelectFrame.selectFrameTop();

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");
	}

	@summary = "Default summary"
	macro addShippingOptions(shippingMethod = null, shippingOptions = null) {
		for (var shippingOption : list ${shippingOptions}) {
			if (${shippingMethod} == "Flat Rate") {
				var shippingOptionName = StringUtil.extractFirst(${shippingOption}, ":");
				var shippingOptionAmount = StringUtil.extractLast(${shippingOption}, ":");
			}
			else if (${shippingMethod} == "Variable Rate") {
				var shippingOptionName = ${shippingOption};
			}

			var shippingOptionKey = CommerceUtilities.convertStringToKey(string = ${shippingOptionName});

			CommerceChannels.addShippingOption(
				amount = ${shippingOptionAmount},
				key = ${shippingOptionKey},
				name = ${shippingOptionName});
		}
	}

	@summary = "Default summary"
	macro assertDefaultAccountShippingOption(shippingMethod = null, active = null, channelName = null, shippingOption = null) {
		AssertElementPresent(
			key_columnNumber = 1,
			key_productName = ${channelName},
			key_value = ${shippingMethod},
			locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");

		AssertElementPresent(
			key_columnNumber = 2,
			key_productName = ${channelName},
			key_value = ${shippingOption},
			locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");

		if (isSet(active)) {
			AssertTextEquals(
				key_columnNumber = 3,
				key_productName = ${channelName},
				key_value = ${active},
				locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT",
				value1 = ${active});
		}
	}

	@summary = "Default summary"
	macro assertMercanetConfigurationEnvironment(paymentMethod = null, key_value = null) {
		CommerceEntry.clickTableEntryEditButton(
			entryName = ${paymentMethod},
			table = "Payment Methods");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Click(
			locator1 = "CommerceEntry#PAYMENT_METHODS_SIDE_PANEL_NAV_ITEMS",
			navItem = "Configuration");

		Select(
			key_fieldLabel = "Environment",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${key_value});

		Button.clickSave();

		Alert.viewSuccessMessage();

		AssertElementPresent(
			key_fieldLabel = "Environment",
			key_value = ${key_value},
			locator1 = "CommerceEntry#SELECT_ASSERT_SELECTED_VALUE");

		Click(locator1 = "Icon#CLOSE");
	}

	@summary = "Assert a payment method fields in the Details tab"
	macro assertPaymentMethodDetails(description = null, active = null, paymentMethodName = null, priority = null) {
		CommerceEntry.clickTableEntryEditButton(
			entryName = ${paymentMethodName},
			table = "Payment Methods");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = ${paymentMethodName});

		if (isSet(description)) {
			AssertTextEquals(
				locator1 = "TextInput#DESCRIPTION",
				value1 = ${description});
		}

		if (isSet(priority)) {
			AssertTextEquals(
				locator1 = "CommerceEntry#PRIORITY_FIELD",
				value1 = ${priority});
		}

		if (isSet(active)) {
			if (${active} == "true") {
				AssertChecked.assertCheckedNotVisible(
					key_toggleSwitchLabel = "Active",
					locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
			}
			else if (${active} == "false") {
				AssertNotChecked.assertNotCheckedNotVisible(
					key_toggleSwitchLabel = "Active",
					locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
			}
		}

		Click(locator1 = "Icon#CLOSE");

		SelectFrame.selectFrameTop();
	}

	@summary = "Assert 'PayPal' and 'PayPal Subscriptions' payment methods Configuration"
	macro assertPayPalConfiguration(mode = null, clientId = null, merchantId = null) {
		if (!(isSet(entryName))) {
			var entryName = "PayPal";
		}

		CommerceEntry.clickTableEntryEditButton(
			entryName = ${entryName},
			table = "Payment Methods");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Click(
			locator1 = "CommerceEntry#PAYMENT_METHODS_SIDE_PANEL_NAV_ITEMS",
			navItem = "Configuration");

		if (isSet(clientId)) {
			AssertTextEquals(
				key_text = "Client ID",
				locator1 = "TextInput#ANY",
				value1 = ${clientId});
		}

		if (isSet(merchantId)) {
			AssertTextEquals(
				key_text = "Merchant ID",
				locator1 = "TextInput#ANY",
				value1 = ${merchantId});
		}

		AssertSelectedLabel(
			key_fieldLabel = "Mode",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${mode});

		Click(locator1 = "Icon#CLOSE");

		SelectFrame.selectFrameTop();
	}

	@summary = "Default summary"
	macro avalaraConnection() {
		AssertTextEquals(
			locator1 = "CommerceEntry#COMMERCE_OBJECT_NAME_ON_HEADER",
			value1 = "Avalara Connector");

		AssertElementPresent(
			key_menuTab = "Credentials",
			locator1 = "CommerceEntry#MENU_TAB");

		Type(
			key_text = "Account Number",
			locator1 = "TextInput#ANY",
			value1 = "test");

		Type(
			key_text = "License Key",
			locator1 = "TextInput#ANY",
			value1 = "test");

		Type(
			key_text = "Service URL",
			locator1 = "TextInput#ANY",
			value1 = "test");

		AssertElementPresent(
			key_text = "Verify Connection",
			locator1 = "Button#ANY");

		Button.clickSave();

		CommerceUtilities.checkSuccessAlertAppearsAndDisappears();
	}

	@summary = "Default summary"
	macro chooseDefaultDisplayPage(pageType = null, pageName = null) {
		Button.click(button = "Choose");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		if (${pageType} == "Private") {
			CommerceEntry.gotoMenuTab(menuTab = "Private Pages");
		}

		if (IsElementNotPresent(key_nodeName = ${pageName}, locator1 = "Treeview#NODE_ITEM")) {
			CommerceNavigator.searchEntry(entryName = ${pageName});

			Click.mouseDownMouseUp(
				key_nodeName = ${pageName},
				locator1 = "CommerceEntry#TREEVIEW_NODE_BUTTON");
		}
		else {
			Click.mouseDownMouseUp(
				key_nodeName = ${pageName},
				locator1 = "Treeview#NODE_ITEM");
		}

		SelectFrame.selectFrameTop();

		if (IsElementPresent(locator1 = "Button#DONE")) {
			Button.clickDone();
		}

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	@summary = "Default summary"
	macro chooseDisplayPageFromSidePanel(pageType = null, pageName = null) {
		SelectFrame.selectFrameTop();

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.click(button = "Choose");

		if (IsElementNotPresent(locator1 = "IFrame#MODAL_BODY")) {
			SelectFrame.selectFrameTop();
		}

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		if (${pageType} == "Private") {
			if (IsElementNotPresent(key_menuTab = "Private Pages", locator1 = "CommerceEntry#MENU_TAB")) {
				Click(
					key_panel = "Public Pages",
					locator1 = "Panel#PANEL_COLLAPSED");
			}

			CommerceEntry.gotoMenuTab(menuTab = "Private Pages");
		}

		if (IsElementNotPresent(key_nodeName = ${pageName}, locator1 = "Treeview#NODE_ITEM")) {
			CommerceNavigator.searchEntry(entryName = ${pageName});

			Click.mouseDownMouseUp(
				key_nodeName = ${pageName},
				locator1 = "CommerceEntry#TREEVIEW_NODE_BUTTON");
		}
		else {
			Click.mouseDownMouseUp(
				key_nodeName = ${pageName},
				locator1 = "Treeview#NODE_ITEM");
		}

		SelectFrame.selectFrameTop();

		if (IsElementPresent(locator1 = "Button#DONE")) {
			Button.clickDone();
		}
	}

	@summary = "Set configuration for 'PayPal' and 'PayPal Subscriptions' payment methods"
	macro configurationPaypal(mode = null) {
		if (!(isSet(entryName))) {
			var entryName = "PayPal";
		}

		if (!(isSet(clientId))) {
			var clientId = "PayPal Client ID";
		}

		if (!(isSet(clientSecret))) {
			var clientSecret = "PayPal Client Secret";
		}

		CommerceEntry.clickTableEntryEditButton(
			entryName = ${entryName},
			table = "Payment Methods");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Click(
			locator1 = "CommerceEntry#PAYMENT_METHODS_SIDE_PANEL_NAV_ITEMS",
			navItem = "Configuration");

		Type(
			key_text = "Client ID",
			locator1 = "TextInput#ANY",
			value1 = ${clientId});

		Type(
			key_text = "Client Secret",
			locator1 = "TextInput#ANY",
			value1 = ${clientSecret});

		if (isSet(merchantId)) {
			Type(
				key_text = "Merchant ID",
				locator1 = "TextInput#ANY",
				value1 = ${merchantId});
		}

		Select(
			key_fieldLabel = "Mode",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${mode});

		Button.clickSave();

		Click(locator1 = "Icon#CLOSE");
	}

	@summary = "Default summary"
	macro createCategoryDisplayPage(vocabulary = null, page = null) {
		CommerceChannels.addCategory(key_card = ${vocabulary});

		CommerceChannels.addCategoryDiplayPage(key_card = ${page});
	}

	@summary = "Default summary"
	macro disablePaymentMethod(paymentMethod = null) {
		CommerceEntry.clickTableEntryEditButton(
			entryName = ${paymentMethod},
			table = "Payment Methods");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Uncheck.uncheckToggleSwitch(locator1 = "CommerceEntry#ACTIVE_CHECKBOX");

		Button.clickSave();

		Click(locator1 = "Icon#CLOSE");

		SelectFrame.selectFrameTop();
	}

	@summary = "Default summary"
	macro editCategoryDisplayPage(tabName = null, key_card = null, name = null) {
		Click(
			key_value = ${name},
			locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS");

		ClickNoError(
			key_selectAction = "Edit",
			locator1 = "FormViewBuilder#FIELD_ELLIPSIS_ACTION");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.click(button = "Choose");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		if (${tabName} == "Private+Pages") {
			if (IsElementNotPresent(key_tabName = "Private+Pages", locator1 = "AppBuilderAppAdmin#APP_TAB")) {
				Click(
					key_text = "Public Pages",
					locator1 = "Button#ANY_WITH_SPAN");
			}

			Click(
				key_tabName = "Private+Pages",
				locator1 = "AppBuilderAppAdmin#APP_TAB");
		}

		Click(
			key_site = "Minium",
			locator1 = "CommerceEntry#TREEVIEW_NODE_COLLAPSED_PAGES");

		Click(
			key_nodeName = ${key_card},
			locator1 = "Treeview#NODE_ITEM");

		SelectFrame.selectFrameTop();

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.clickSave();
	}

	@summary = "Default summary"
	macro editOverrideCategoryDisplayPage(newCategory = null, newPageName = null, newPageType = null, category = null) {
		Click(
			key_value = ${category},
			locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Edit");

		if (isSet(newCategory)) {
			CommerceChannels.addCategory(
				edit = "true",
				key_card = ${newCategory});
		}

		if (isSet(newPageName) && isSet(newPageType)) {
			CommerceChannels.chooseDisplayPageFromSidePanel(
				pageName = ${newPageName},
				pageType = ${newPageType});
		}

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Click(locator1 = "CommerceEntry#MODAL_BUTTON_CLOSE");

		SelectFrame.selectFrameTop();
	}

	@summary = "Default summary"
	macro editOverrideProductDisplayPage(product = null, newPageName = null, newPageType = null, newProduct = null) {
		Click(
			key_value = ${product},
			locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Edit");

		if (isSet(newProduct)) {
			CommerceChannels.addProduct(
				edit = "true",
				product = ${newProduct});
		}

		if (isSet(newPageName) && isSet(newPageType)) {
			CommerceChannels.chooseDisplayPageFromSidePanel(
				pageName = ${newPageName},
				pageType = ${newPageType});
		}

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Click(locator1 = "CommerceEntry#MODAL_BUTTON_CLOSE");

		SelectFrame.selectFrameTop();
	}

	@summary = "Default summary"
	macro editPaymentMethod(name = null, paymentMethod = null, description = null, active = null, priority = null) {
		CommerceEntry.clickTableEntryEditButton(
			entryName = ${paymentMethod},
			table = "Payment Methods");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		if (isSet(name)) {
			Type(
				locator1 = "TextInput#NAME",
				value1 = ${name});
		}

		if (isSet(description)) {
			Type(
				locator1 = "TextInput#DESCRIPTION",
				value1 = ${description});
		}

		if (isSet(priority)) {
			Type(
				locator1 = "CommerceEntry#PRIORITY_FIELD",
				value1 = ${priority});
		}

		if (${active} == "true") {
			Check.checkToggleSwitch(locator1 = "CommerceEntry#ACTIVE_CHECKBOX");
		}

		if (${active} == "false") {
			Uncheck.uncheckToggleSwitch(locator1 = "CommerceEntry#ACTIVE_CHECKBOX");
		}

		Button.clickSave();

		Alert.viewSuccessMessage();

		Click(locator1 = "Icon#CLOSE");

		SelectFrame.selectFrameTop();
	}

	@summary = "Default summary"
	macro editShippingMethod(shippingOptionSettingsWarehouse = null, shippingOptionSettingsPriceUnitWeight = null, shippingOptionSettingsRegion = null, shippingOptionSettingsWeightFrom = null, trackingURL = null, shippingMethod = null, configureShippingOption = null, description = null, active = null, priority = null, shippingOptionSettingsZip = null, shippingOptionSettingsCountry = null, shippingOptionSettingsWeightTo = null, name = null, shippingOptionSettingsFixedPrice = null, shippingOptions = null, shippingOptionSettingsSubtotal = null) {
		CommerceEntry.clickTableEntryEditButton(
			entryName = ${shippingMethod},
			table = "Shipping Methods");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		if (isSet(name)) {
			Type(
				locator1 = "TextInput#NAME",
				value1 = ${name});
		}

		if (isSet(description)) {
			Type(
				locator1 = "TextInput#DESCRIPTION",
				value1 = ${description});
		}

		if (isSet(trackingURL)) {
			CommerceChannels.addShippingMethodTrackingURL(trackingURL = ${trackingURL});
		}

		if (isSet(priority)) {
			Type(
				locator1 = "CommerceEntry#PRIORITY_FIELD",
				value1 = ${priority});
		}

		if (${active} == "true") {
			Check.checkToggleSwitch(locator1 = "CommerceEntry#ACTIVE_CHECKBOX");
		}

		if (${active} == "false") {
			Uncheck.uncheckToggleSwitch(locator1 = "CommerceEntry#ACTIVE_CHECKBOX");
		}

		Button.clickSave();

		Alert.viewSuccessMessage();

		if (${active} == "true") {
			if (isSet(shippingOptions)) {
				CommerceEntry.gotoMenuTab(menuTab = "Shipping Options");

				CommerceChannels.addShippingOptions(
					shippingMethod = ${shippingMethod},
					shippingOptions = ${shippingOptions});
			}

			if (isSet(configureShippingOption) && (${configureShippingOption} == "true")) {
				CommerceEntry.gotoMenuTab(menuTab = "Shipping Option Settings");

				for (var shippingOption : list ${shippingOptions}) {
					CommerceEntry.addShippingOptionSettingsVariableRate(
						country = ${shippingOptionSettingsCountry},
						fixedPrice = ${shippingOptionSettingsFixedPrice},
						priceUnitWeight = ${shippingOptionSettingsPriceUnitWeight},
						region = ${shippingOptionSettingsRegion},
						shippingOption = ${shippingOption},
						subtotal = ${shippingOptionSettingsSubtotal},
						warehouse = ${shippingOptionSettingsWarehouse},
						weightFrom = ${shippingOptionSettingsWeightFrom},
						weightTo = ${shippingOptionSettingsWeightTo},
						zip = ${shippingOptionSettingsZip});
				}
			}
		}

		Click(locator1 = "Icon#CLOSE");

		SelectFrame.selectFrameTop();
	}

	@summary = "Default summary"
	macro editShippingOption(amount = null, name = null, description = null, priority = null, key = null, shippingOption = null) {
		CommerceNavigator.gotoEntry(entryName = ${shippingOption});

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		if (isSet(name)) {
			Type(
				locator1 = "TextInput#NAME",
				value1 = ${name});
		}

		if (isSet(description)) {
			Type(
				locator1 = "TextInput#DESCRIPTION",
				value1 = ${description});
		}

		if (isSet(amount)) {
			Type(
				key_fieldLabel = "Amount",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = ${amount});
		}

		if (isSet(priority)) {
			Type(
				locator1 = "CommerceEntry#PRIORITY_FIELD",
				value1 = ${priority});
		}

		if (isSet(key)) {
			Type(
				key_fieldLabel = "Key",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = ${key});
		}

		Button.clickSave();

		Alert.viewSuccessMessage();

		Click(locator1 = "Icon#CLOSE");

		SelectFrame.selectFrameTop();

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");
	}

	@summary = "Default summary"
	macro editTaxCalculation(taxCalculationName = null, quantity = null, percentage = null, fieldLabel = null, active = null, taxCategory = null) {
		Click(
			key_entryName = ${taxCalculationName},
			locator1 = "CommerceEntry#CHANNELS_GENERAL_TAB_EDITS");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		if (${percentage} == "true") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Percentage",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		if (${percentage} == "false") {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Percentage",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

			Button.clickSave();
		}

		if (${active} == "true") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Active",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		if (${active} == "false") {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Active",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		Button.clickSave();

		if (${taxCalculationName} == "Fixed Tax Rate") {
			CommerceChannels.addFixedTaxRateTaxConfiguration(
				fieldLabel = ${fieldLabel},
				quantity = ${quantity},
				taxCategory = ${taxCategory});
		}
	}

	@summary = "Default summary"
	macro gotoShippingMethodShippingOptions(shippingMethod = null) {
		CommerceEntry.clickTableEntryEditButton(
			entryName = ${shippingMethod},
			table = "Shipping Methods");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		CommerceEntry.gotoMenuTab(menuTab = "Shipping Options");
	}

	@summary = "Default summary"
	macro openChannelsAdmin(baseURL = null) {
		Navigator.openWithAppendToBaseURL(
			baseURL = ${baseURL},
			urlAppend = "group/guest/~/control_panel/manage?p_p_id=com_liferay_commerce_channel_web_internal_portlet_CommerceChannelsPortlet");
	}

	@summary = "Default summary"
	macro openMercanetConfigurationFrame(baseURL = null, channelId = null) {
		Navigator.openWithAppendToBaseURL(
			baseURL = ${baseURL},
			urlAppend = "group/guest/~/control_panel/manage?p_p_id=com_liferay_commerce_payment_web_internal_portlet_CommercePaymentMethodPortlet&p_p_lifecycle=0&p_p_state=pop_up&p_p_mode=view&_com_liferay_commerce_payment_web_internal_portlet_CommercePaymentMethodPortlet_screenNavigationCategoryKey=configuration&_com_liferay_commerce_payment_web_internal_portlet_CommercePaymentMethodPortlet_commerceChannelId=${channelId}&_com_liferay_commerce_payment_web_internal_portlet_CommercePaymentMethodPortlet_commercePaymentMethodEngineKey=mercanet&p_p_auth=wSmJjGYh");
	}

	@summary = "Default summary"
	macro overrideCategoryDisplayPage(pageType = null, category = null, pageName = null) {
		CommerceChannels.addCategory(key_card = ${category});

		CommerceChannels.chooseDisplayPageFromSidePanel(
			pageName = ${pageName},
			pageType = ${pageType});

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Click(locator1 = "CommerceEntry#MODAL_BUTTON_CLOSE");

		SelectFrame.selectFrameTop();
	}

	@summary = "Default summary"
	macro overrideProductDisplayPage(product = null, pageType = null, pageName = null) {
		CommerceChannels.addProduct(product = ${product});

		CommerceChannels.chooseDisplayPageFromSidePanel(
			pageName = ${pageName},
			pageType = ${pageType});

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Click(locator1 = "CommerceEntry#MODAL_BUTTON_CLOSE");

		SelectFrame.selectFrameTop();
	}

	@summary = "Default summary"
	macro removeDefaultDisplayPage() {
		Click(locator1 = "CommerceEntry#DISPLAY_PAGE_ITEM_REMOVE");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	@summary = "Default summary"
	macro uploadPrintOrderTemplate(uploadFileName = null) {
		Click(locator1 = "CommerceOrders#PRINT_ORDER_TEMPLATE");

		SelectFrame(
			key_frameTitle = "Select File",
			locator1 = "CommerceEntry#ANY_IFRAME");

		Click(locator1 = "CommerceOrders#PRINT_ORDER_TEMPLATE_DROPZONE");

		SelectFrameTop();

		CommerceItemSelector.uploadSingleFile(uploadFileName = ${uploadFileName});

		Button.clickSave();
	}

}