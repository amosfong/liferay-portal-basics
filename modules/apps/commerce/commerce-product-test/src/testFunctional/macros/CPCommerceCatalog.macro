definition {

	@summary = "Default summary"
	macro addOptionValues() {
		var optionValuesList = ${optionValuesList};

		for (var optionValues : list ${optionValuesList}) {
			var optionValue = StringUtil.extractFirst(${optionValues}, ":");
			var optionPosition = StringUtil.extractLast(${optionValues}, ":");

			Refresh();

			Click(locator1 = "CommerceEntry#ADD_BUTTON");

			WaitForElementPresent(locator1 = "IFrame#MODAL_BODY");

			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			CommerceEntry.addOptionValue(
				valueName = ${optionValue},
				valuePosition = ${optionPosition});

			Button.clickSubmitButton();
		}
	}

	@summary = "Default summary"
	macro newOptionsEntry(optionFieldType = null, optionDescription = null, facetable = null, skuContributor = null, optionName = null, required = null) {
		Click(locator1 = "CommerceEntry#ADD_BUTTON");

		WaitForElementPresent(locator1 = "IFrame#MODAL_BODY");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		CommerceOptions.addEntry(
			facetable = ${facetable},
			optionDescription = ${optionDescription},
			optionFieldType = ${optionFieldType},
			optionName = ${optionName},
			required = ${required},
			skuContributor = ${skuContributor});
	}

	@summary = "Default summary"
	macro newProductsEntry(publishProduct = null, compileDescription = null, productName = null, productType = null, productCatalog = null) {
		CommerceProducts.addEntry(
			compileDescription = ${compileDescription},
			productCatalog = ${productCatalog},
			productFullDescription = "${productName} Full Description",
			productName = ${productName},
			productShortDescription = "${productName} Short Description",
			productType = ${productType},
			publishProduct = ${publishProduct});
	}

}