definition {

	@summary = "Default summary"
	macro assertSingleRolePermissionsPG(roleTitle = null, permissions = null) {
		SelectFrameTop(value1 = "relative=top");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		var key_roleTitle = StringUtil.replace(${roleTitle}, " ", "-");

		var key_roleTitle = StringUtil.lowerCase(${key_roleTitle});

		for (var permission : list ${permissions}) {
			var permission = StringUtil.upperCase(${permission});

			AssertChecked.assertCheckedNotVisible(locator1 = "Permissions#INLINE_PERMISSIONS_${permission}_CHECKBOX");
		}
	}

	@summary = "Default summary"
	macro defineCatalogPermissionsViaJSONAPI(view = null, roleTitle = null, permissions = null, update = null, delete = null) {
		if (${view} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW_CONTROL_PANEL",
				resourceName = 90,
				roleTitle = ${roleTitle});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "ACCESS_IN_CONTROL_PANEL",
				resourceName = "com_liferay_commerce_catalog_web_internal_portlet_CommerceCatalogsPortlet",
				roleTitle = ${roleTitle});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "com.liferay.commerce.product.model.CommerceCatalog",
				roleTitle = ${roleTitle});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW_COMMERCE_CATALOGS",
				resourceName = "com.liferay.commerce.catalog",
				roleTitle = ${roleTitle});
		}

		if (${permissions} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "PERMISSIONS",
				resourceName = "com.liferay.commerce.product.model.CommerceCatalog",
				roleTitle = ${roleTitle});
		}

		if (${update} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.commerce.product.model.CommerceCatalog",
				roleTitle = ${roleTitle});
		}

		if (${delete} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "DELETE",
				resourceName = "com.liferay.commerce.product.model.CommerceCatalog",
				roleTitle = ${roleTitle});
		}
	}

	@summary = "Default summary"
	macro defineChannelPermissionsViaJSONAPI(view = null, roleTitle = null, permissions = null, update = null, tax = null, currency = null, delete = null) {
		if (${view} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW_CONTROL_PANEL",
				resourceName = 90,
				roleTitle = ${roleTitle});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "ACCESS_IN_CONTROL_PANEL",
				resourceName = "com_liferay_commerce_channel_web_internal_portlet_CommerceChannelsPortlet",
				roleTitle = ${roleTitle});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW_COMMERCE_CHANNELS",
				resourceName = "com.liferay.commerce.channel",
				roleTitle = ${roleTitle});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "com.liferay.commerce.product.model.CommerceChannel",
				roleTitle = ${roleTitle});
		}

		if (${permissions} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "PERMISSIONS",
				resourceName = "com.liferay.commerce.product.model.CommerceChannel",
				roleTitle = ${roleTitle});
		}

		if (${update} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.commerce.product.model.CommerceChannel",
				roleTitle = ${roleTitle});
		}

		if (${delete} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "DELETE",
				resourceName = "com.liferay.commerce.product.model.CommerceChannel",
				roleTitle = ${roleTitle});
		}

		if (${tax} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "MANAGE_COMMERCE_PRODUCT_TAX_CATEGORIES",
				resourceName = "com.liferay.commerce.tax",
				roleTitle = ${roleTitle});
		}

		if (${currency} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "MANAGE_COMMERCE_CURRENCIES",
				resourceName = "com.liferay.commerce.currency",
				roleTitle = ${roleTitle});
		}
	}

	@summary = "Default summary"
	macro definePermissionsPG(permissionDefinitionKey = null, roleTitles = null) {
		SelectFrameTop(value1 = "relative=top");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		for (var roleTitle : list ${roleTitles}) {
			var key_roleTitle = StringUtil.replace(${roleTitle}, " ", "-");

			var key_roleTitle = StringUtil.lowerCase(${key_roleTitle});

			Check.checkNotVisible(locator1 = "Permissions#${permissionDefinitionKey}");
		}

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully.");

		for (var roleTitle : list ${roleTitles}) {
			var key_roleTitle = StringUtil.replace(${roleTitle}, " ", "-");

			var key_roleTitle = StringUtil.lowerCase(${key_roleTitle});

			AssertChecked.assertCheckedNotVisible(locator1 = "Permissions#${permissionDefinitionKey}");
		}
	}

	@summary = "Default summary"
	macro defineProductPermissionsViaJSONAPI(view = null, roleTitle = null, update = null) {
		if (${view} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW_CONTROL_PANEL",
				resourceName = 90,
				roleTitle = ${roleTitle});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "ACCESS_IN_CONTROL_PANEL",
				resourceName = "com_liferay_commerce_catalog_web_internal_portlet_CommerceCatalogsPortlet",
				roleTitle = ${roleTitle});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW_COMMERCE_CATALOGS",
				resourceName = "com.liferay.commerce.catalog",
				roleTitle = ${roleTitle});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "com.liferay.commerce.product.model.CommerceCatalog",
				roleTitle = ${roleTitle});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "ACCESS_IN_CONTROL_PANEL",
				resourceName = "com_liferay_commerce_product_definitions_web_internal_portlet_CPDefinitionsPortlet",
				roleTitle = ${roleTitle});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "com_liferay_commerce_product_definitions_web_internal_portlet_CPDefinitionsPortlet",
				roleTitle = ${roleTitle});
		}

		if (${update} == "true") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.commerce.product.model.CommerceCatalog",
				roleTitle = ${roleTitle});
		}
	}

	@summary = "Default summary"
	macro defineSingleRolePermissionsPG(roleTitle = null, permissions = null) {
		SelectFrameTop(value1 = "relative=top");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		var key_roleTitle = StringUtil.replace(${roleTitle}, " ", "-");

		var key_roleTitle = StringUtil.lowerCase(${key_roleTitle});

		for (var permission : list ${permissions}) {
			var permission = StringUtil.upperCase(${permission});

			Check.checkNotVisible(locator1 = "Permissions#INLINE_PERMISSIONS_${permission}_CHECKBOX");
		}

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully.");

		for (var permission : list ${permissions}) {
			var permission = StringUtil.upperCase(${permission});

			AssertChecked.assertCheckedNotVisible(locator1 = "Permissions#INLINE_PERMISSIONS_${permission}_CHECKBOX");
		}
	}

	@summary = "Default summary"
	macro removeAccountRolePermission(roleTitle = null, permission = null) {
		Navigator.gotoNavTab(navTab = "Account Roles");

		CommerceNavigator.gotoEntry(entryName = ${roleTitle});

		Navigator.gotoNavTab(navTab = "Define Permissions");

		ClickNoError(
			key_resourceAction = ${permission},
			locator1 = "CommercePermissions#REMOVE_PERMISSION");

		AssertConfirm(value1 = "Are you sure you want to remove this permission?");

		AssertElementNotPresent(
			key_resourceAction = ${permission},
			locator1 = "CommercePermissions#REMOVE_PERMISSION");

		Click(locator1 = "CommerceNavigation#BACK");
	}

	@summary = "Default summary"
	macro removePermissionsPG(permissionDefinitionKey = null, roleTitles = null) {
		SelectFrameTop(value1 = "relative=top");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		for (var roleTitle : list ${roleTitles}) {
			var key_roleTitle = StringUtil.replace(${roleTitle}, " ", "-");

			var key_roleTitle = StringUtil.lowerCase(${key_roleTitle});

			Uncheck.uncheckNotVisible(locator1 = "Permissions#${permissionDefinitionKey}");
		}

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully.");

		for (var roleTitle : list ${roleTitles}) {
			var key_roleTitle = StringUtil.replace(${roleTitle}, " ", "-");

			var key_roleTitle = StringUtil.lowerCase(${key_roleTitle});

			AssertNotChecked.assertNotCheckedNotVisible(locator1 = "Permissions#${permissionDefinitionKey}");
		}
	}

	@summary = "Default summary"
	macro removeRegularRolePermission(roleTitle = null, permission = null) {
		CommerceNavigator.gotoEntry(entryName = ${roleTitle});

		Navigator.gotoNavTab(navTab = "Define Permissions");

		ClickNoError(
			key_resourceAction = ${permission},
			locator1 = "CommercePermissions#REMOVE_PERMISSION");

		AssertConfirm(value1 = "Are you sure you want to remove this permission?");

		AssertElementNotPresent(
			key_resourceAction = ${permission},
			locator1 = "CommercePermissions#REMOVE_PERMISSION");

		Click(locator1 = "CommerceNavigation#BACK");
	}

}