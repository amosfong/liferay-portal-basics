definition {

	@summary = "Default summary"
	macro _addIncomingQuantity(quantity = null, sku = null, warehouseName = null,) {
		Variables.assertDefined(parameterList = "${quantity},${sku},${warehouseName}");

		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = JSONCompany.getPortalURL();
		}

		if (!(isSet(availabilityDate))) {
			var availabilityDate = DateUtil.getFormattedCurrentDate("yyyy-MM-dd");
		}

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "";
		}

		if (!(isSet(uomKey))) {
			var uomKey = "";
		}

		var warehouseId = CommerceJSONWarehousesAndInventoriesAPI._getWarehouseId(warehouseName = ${warehouseName});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-inventory/v1.0/warehouses/${warehouseId}/skus/by-sku/${sku}/replenishment-items \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"availabilityDate" : "${availabilityDate}",
					"externalReferenceCode": "${externalReferenceCode}",
					"quantity": ${quantity},
					"unitOfMeasureKey": "${uomKey}"
				}'
		''';

		var responseBody = JSONCurlUtil.post(${curl});

		return ${responseBody};
	}

	@summary = "Default summary"
	macro _addWarehouse(latitude = null, warehouseName = null, longitude = null) {
		Variables.assertDefined(parameterList = "${latitude},${longitude},${warehouseName}");

		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = JSONCompany.getPortalURL();
		}

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "";
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-inventory/v1.0/warehouses \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"externalReferenceCode": "${externalReferenceCode}",
					"latitude": ${latitude},
					"longitude": ${longitude},
					"name": {
						"en_US": "${warehouseName}"
					}
				}'
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _addWarehouseItem(warehouseItemSku = null, warehouseName = null, warehouseItemQuantity = null) {
		Variables.assertDefined(parameterList = "${warehouseItemSku},${warehouseItemQuantity},${warehouseName}");

		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = JSONCompany.getPortalURL();
		}

		if (!(isSet(warehouseItemReservedQuantity))) {
			var warehouseItemReservedQuantity = 0;
		}

		var warehouseId = CommerceJSONWarehousesAndInventoriesAPI._getWarehouseId(warehouseName = ${warehouseName});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-inventory/v1.0/warehouses/${warehouseId}/warehouseItems \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"quantity": ${warehouseItemQuantity},
					"reservedQuantity": ${warehouseItemReservedQuantity},
					"sku": "${warehouseItemSku}"
				}'
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _deleteAllWarehouseItems() {
		var emptyCount = 0;
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = JSONCompany.getPortalURL();
		}

		var warehouseIds = CommerceJSONWarehousesAndInventoriesAPI._getCommerceWarehouseIds();

		if (${warehouseIds} != "") {
			for (var warehouseId : list ${warehouseIds}) {
				echo("Get warehouseItems for warehouseId: ${warehouseId}");

				var userLoginInfo = JSONUtil2.formatJSONUser();

				var curlWarehouseItems = '''
						${baseURL}/o/headless-commerce-admin-inventory/v1.0/warehouses/${warehouseId}/warehouseItems?pageSize=200 \
						-u ${userLoginInfo} \
						-H 'accept: application/json' \
					''';

				var warehouseItemsIds = JSONCurlUtil.get(${curlWarehouseItems}, "$..['id']");

				if (${warehouseItemsIds} != "") {
					for (var warehouseItemId : list ${warehouseItemsIds}) {
						echo("Deleting Commerce warehouseItem with id: ${warehouseItemId}");

						var curlWarehouse = '''
								${baseURL}/o/headless-commerce-admin-inventory/v1.0/warehouseItems/${warehouseItemId} \
								-u ${userLoginInfo} \
								-H 'accept: application/json' \
							''';

						JSONCurlUtil.delete(${curlWarehouse});
					}
				}

				var partialWarehouseItemsCount = JSONCurlUtil.get(${curlWarehouseItems}, "$.['totalCount']");

				TestUtils.assertEquals(
					actual = ${partialWarehouseItemsCount},
					expected = ${emptyCount});

				echo("Deleting Commerce warehouse with id: ${warehouseId}");

				if (${warehouseId} != "") {
					var curlWarehouse = '''
							${baseURL}/o/headless-commerce-admin-inventory/v1.0/warehouses/${warehouseId} \
							-u ${userLoginInfo} \
							-H 'accept: application/json' \
						''';

					JSONCurlUtil.delete(${curlWarehouse});
				}
			}
		}
		else {
			echo("No Commerce Warehouse to be deleted");
		}
	}

	@summary = "Default summary"
	macro _getCommerceWarehouseIds(warehouseCount = null) {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = JSONCompany.getPortalURL();
		}

		if (isSet(warehouseCount)) {
			var warehousesCount = ${warehouseCount};
		}
		else {
			var warehousesCount = 200;
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-inventory/v1.0/warehouses?pageSize=${warehousesCount} \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
		''';

		var warehouseIds = JSONCurlUtil.get(${curl}, "$..['id']");

		return ${warehouseIds};
	}

	@summary = "Default summary"
	macro _getCommerceWarehousesCount() {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = JSONCompany.getPortalURL();
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-inventory/v1.0/warehouses \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
		''';

		var warehousesCount = JSONCurlUtil.get(${curl}, "$['totalCount']");

		echo("The Commerce warehouses count is: ${warehousesCount}");

		return ${warehousesCount};
	}

	@summary = "Default summary"
	macro _getWarehouseId(warehouseCount = null, warehouseName = null) {
		Variables.assertDefined(parameterList = ${warehouseName});

		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = JSONCompany.getPortalURL();
		}

		if (isSet(warehouseCount)) {
			var warehousesCount = ${warehouseCount};
		}
		else {
			var warehousesCount = 100;
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-inventory/v1.0/warehouses?pageSize=${warehousesCount} \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
		''';

		if (isSet(warehouseName)) {
			var warehouseId = JSONCurlUtil.get(${curl}, "$.items[?(@['name'].['en_US'] == '${warehouseName}')].['id']");
		}

		return ${warehouseId};
	}

	@summary = "Default summary"
	macro _getWarehouseItemId(productSku = null, uomKey = null, warehouseName = null) {
		Variables.assertDefined(parameterList = "${productSku},${warehouseName}");

		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = JSONCompany.getPortalURL();
		}

		var warehouseId = CommerceJSONWarehousesAndInventoriesAPI._getWarehouseId(warehouseName = ${warehouseName});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-inventory/v1.0/warehouses/${warehouseId}/warehouseItems?pageSize=200 \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
		''';

		if (!(isSet(uomKey))) {
			var warehouseItemId = JSONCurlUtil.get(${curl}, "$..items[?(@['sku'] == '${productSku}')]['id']");
		}

		if (isSet(uomKey)) {
			var warehouseItemId = JSONCurlUtil.get(${curl}, "$..items[?(@['sku'] == '${productSku}' && @['unitOfMeasureKey'] == '${uomKey}')]['id']");
		}

		return ${warehouseItemId};
	}

	@summary = "Default summary"
	macro _patchWarehouseItem(warehouseName = null, productSku = null, uomKey = null) {
		Variables.assertDefined(parameterList = ${warehouseName});

		var baseURL = ${baseURL};
		var fieldsList = ListUtil.newList();

		if (!(isSet(baseURL))) {
			var baseURL = JSONCompany.getPortalURL();
		}

		if (isSet(quantity)) {
			var quantity = '''"quantity": ${quantity}''';

			ListUtil.add(${fieldsList}, ${quantity});
		}

		if (isSet(reservedQuantity)) {
			var reservedQuantity = '''"reservedQuantity": ${reservedQuantity}''';

			ListUtil.add(${fieldsList}, ${reservedQuantity});
		}

		if (isSet(productSku)) {
			var sku = '''"sku": "${productSku}"''';

			ListUtil.add(${fieldsList}, ${sku});
		}

		if (isSet(uomKey)) {
			var unitOfMeasureKey = '''"unitOfMeasureKey": "${uomKey}"''';

			ListUtil.add(${fieldsList}, ${unitOfMeasureKey});

			var warehouseItemId = CommerceJSONWarehousesAndInventoriesAPI._getWarehouseItemId(
				productSku = ${productSku},
				uomKey = ${uomKey},
				warehouseName = ${warehouseName});
		}

		if (isSet(warehouseName)) {
			var warehouseId = CommerceJSONWarehousesAndInventoriesAPI._getWarehouseId(warehouseName = ${warehouseName});

			var warehouseId = '''"warehouseId": ${warehouseId}''';

			ListUtil.add(${fieldsList}, ${warehouseId});
		}

		var fieldsList = ListUtil.toString(${fieldsList});

		var payload = CommerceUtilities.getPayloadFromFieldsList(fieldsList = ${fieldsList});

		if (!(isSet(uomKey))) {
			var warehouseItemId = CommerceJSONWarehousesAndInventoriesAPI._getWarehouseItemId(
				productSku = ${productSku},
				warehouseName = ${warehouseName});
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-inventory/v1.0/warehouseItems/${warehouseItemId} \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{${payload}}'
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.patch(${curl});
	}

}