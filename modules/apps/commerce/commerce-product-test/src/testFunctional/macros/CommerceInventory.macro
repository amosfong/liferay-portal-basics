definition {

	@summary = "Default summary"
	macro addIncomingQuantity(quantity = null, expectedDeliveryDate = null, destination = null) {
		Variables.assertDefined(parameterList = "${expectedDeliveryDate},${quantity}");

		Click(locator1 = "Button#PLUS");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		Type(
			key_fieldLabel = "Quantity",
			locator1 = "CommerceOrders#ORDER_ITEM_QUANTITY_INPUT",
			value1 = ${quantity});

		if (isSet(destination)) {
			Select(
				key_selectFieldLabel = "Destination",
				locator1 = "CommerceEntry#ANY_SELECT",
				value1 = ${destination});
		}

		Click(locator1 = "CommerceEntry#INVENTORY_EXPECTED_INCOMING_DELIVERY_DATE");

		Type(
			locator1 = "CommerceEntry#INVENTORY_EXPECTED_INCOMING_DELIVERY_DATE",
			value1 = ${expectedDeliveryDate});

		Button.clickSubmitButton();
	}

	@summary = "Default summary"
	macro addInventoryByWarehouse(quantity = null, warehouseName = null,) {
		Click(locator1 = "Button#PLUS");

		Click(
			key_fieldName = "Add Inventory",
			locator1 = "FormViewBuilder#OBJECT_FIELD_BUTTON_DROPDOWN");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		Type(
			key_fieldLabel = "Quantity",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = ${quantity});

		Select(
			key_fieldLabel = "Warehouse",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${warehouseName});

		Button.click(button = "Submit");

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro addInventoryEntry(quantity = null, sku = null, warehouse = null,) {
		Click(locator1 = "Button#PLUS");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		Type(
			key_fieldLabel = "SKU",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = ${sku});

		Select(
			key_fieldLabel = "Warehouse",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${warehouse});

		Type(
			key_fieldLabel = "Quantity",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = ${quantity});

		Button.click(button = "Submit");

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro createTransfer(quantity = null, destination = null, source = null,) {
		Click(locator1 = "Button#PLUS");

		Click(
			key_fieldName = "Create a Transfer",
			locator1 = "FormViewBuilder#OBJECT_FIELD_BUTTON_DROPDOWN");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		Type(
			key_fieldLabel = "Quantity",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = ${quantity});

		Select(
			key_selectFieldLabel = "Source",
			locator1 = "CommerceEntry#ANY_SELECT",
			value1 = ${source});

		Select(
			key_selectFieldLabel = "Destination",
			locator1 = "CommerceEntry#ANY_SELECT",
			value1 = ${destination});

		Button.click(button = "Submit");

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro editIncomingQuantity(quantity = null, expectedDeliveryDate = null, warehouse = null,) {
		CommerceNavigator.gotoEntry(entryName = ${warehouse});

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		if (isSet(quantity)) {
			Type(
				key_text = "Quantity",
				locator1 = "TextInput#ANY",
				value1 = ${quantity});
		}

		if (isSet(expectedDeliveryDate)) {
			Type(
				inputFieldId = "date",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${expectedDeliveryDate});
		}

		Button.clickSave();

		Alert.viewSuccessMessage();

		Click(locator1 = "Icon#CLOSE");

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro editInventoryByWarehouse(quantityOnHand = null, index = null, sku = null, safetyStockQuantity = null) {
		CommerceInventory.openInventoryAdmin();

		CommerceNavigator.searchEntry(entryName = ${sku});

		CommerceNavigator.gotoTableListEntry(
			entryName = ${sku},
			index = ${index});

		for (var warehouse : list ${warehouse}) {
			CommerceInventory.editWarehouseInventory(
				quantityOnHand = ${quantityOnHand},
				safetyStockQuantity = ${safetyStockQuantity},
				warehouse = ${warehouse});
		}
	}

	@summary = "Default summary"
	macro editWarehouseInventory(quantityOnHand = null, warehouse = null, safetyStockQuantity = null,) {
		CommerceNavigator.gotoTableListEntry(entryName = ${warehouse});

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		if (isSet(quantityOnHand)) {
			Type(
				key_text = "Quantity on Hand",
				locator1 = "TextInput#ANY",
				value1 = ${quantityOnHand});
		}

		if (isSet(safetyStockQuantity)) {
			Type(
				key_text = "Safety Stock Quantity",
				locator1 = "TextInput#ANY",
				value1 = ${safetyStockQuantity});
		}

		Button.clickSave();

		Click(locator1 = "Icon#CLOSE");

		SelectFrameTop();
	}

	@summary = "Default summary"
	macro openInventoryAdmin(baseURL = null) {
		Navigator.openWithAppendToBaseURL(
			baseURL = ${baseURL},
			urlAppend = "group/control_panel/manage?p_p_id=com_liferay_commerce_inventory_web_internal_portlet_CommerceInventoryPortlet");
	}

	@summary = "Default summary"
	macro viewIncomingQuantityByWarehouse(quantity = null, expectedDeliveryDate = null, warehouse = null,) {
		if (!(isSet(warehouseWithLink))) {
			var warehouseWithLink = "true";
		}

		if (${warehouseWithLink} == "false") {
			AssertElementPresent(
				key_columnNumber = 1,
				key_productName = ${warehouse},
				key_value = ${expectedDeliveryDate},
				locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");

			AssertElementPresent(
				key_columnNumber = 2,
				key_productName = ${warehouse},
				key_value = ${quantity},
				locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");
		}
		else {
			AssertElementPresent(
				key_entryTitle = ${warehouse},
				key_index = 2,
				key_value = ${expectedDeliveryDate},
				locator1 = "CommerceEntry#TABLE_ENTRY_FIELD_VALUE");

			AssertElementPresent(
				key_entryTitle = ${warehouse},
				key_index = 3,
				key_value = ${quantity},
				locator1 = "CommerceEntry#TABLE_ENTRY_FIELD_VALUE");
		}
	}

	@summary = "Default summary"
	macro viewIncomingQuantityByWarehouseWithCurrentDate(quantity = null, warehouse = null,) {
		if (!(isSet(warehouseWithLink))) {
			var warehouseWithLink = "true";
		}

		var currentDateYYYY = DateUtil.getFormattedCurrentDate("MMM d, yyyy");
		var currentDateYY = DateUtil.getFormattedCurrentDate("MMM d, yy");

		if (${warehouseWithLink} == "false") {
			AssertElementPresent(locator1 = "//*[contains(@class,'dnd-td') and contains(.,'${warehouse}')]/following-sibling::div[1][contains(text(),'${currentDateYYYY}') or contains(text(),'${currentDateYY}')]");

			AssertElementPresent(
				key_columnNumber = 2,
				key_productName = ${warehouse},
				key_value = ${quantity},
				locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");
		}
		else {
			AssertElementPresent(locator1 = "//*[contains(@class, 'table-list-title')]/a[text()='${warehouse}']/../../../div[2][contains(text(),'${currentDateYYYY}') or contains(text(),'${currentDateYY}')]");

			AssertElementPresent(
				key_entryTitle = ${warehouse},
				key_index = 3,
				key_value = ${quantity},
				locator1 = "CommerceEntry#TABLE_ENTRY_FIELD_VALUE");
		}
	}

	@summary = "Default summary"
	macro viewInventoryByWarehouse(index = null, inventory = null) {
		for (var warehouse : list ${warehouse}) {
			AssertElementPresent(
				key_entryTitle = ${warehouse},
				key_index = ${index},
				key_value = ${inventory},
				locator1 = "CommerceEntry#TABLE_ENTRY_FIELD_VALUE");
		}
	}

	@summary = "Default summary"
	macro viewInventoryByWarehouseEntry(incoming = null, onHand = null, safetyStock = null, available = null, warehouse = null,) {
		if (!(isSet(warehouseWithLink))) {
			var warehouseWithLink = "true";
		}

		if (${warehouseWithLink} == "false") {
			if (isSet(onHand)) {
				AssertElementPresent(
					key_columnNumber = 1,
					key_productName = ${warehouse},
					key_value = ${onHand},
					locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");
			}

			if (isSet(safetyStock)) {
				AssertElementPresent(
					key_columnNumber = 2,
					key_productName = ${warehouse},
					key_value = ${safetyStock},
					locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");
			}

			if (isSet(available)) {
				AssertElementPresent(
					key_columnNumber = 3,
					key_productName = ${warehouse},
					key_value = ${available},
					locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");
			}

			if (isSet(incoming)) {
				AssertElementPresent(
					key_columnNumber = 4,
					key_productName = ${warehouse},
					key_value = ${incoming},
					locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");
			}
		}
		else {
			if (isSet(onHand)) {
				AssertElementPresent(
					key_entryTitle = ${warehouse},
					key_index = 2,
					key_value = ${onHand},
					locator1 = "CommerceEntry#TABLE_ENTRY_FIELD_VALUE");
			}

			if (isSet(safetyStock)) {
				AssertElementPresent(
					key_entryTitle = ${warehouse},
					key_index = 3,
					key_value = ${safetyStock},
					locator1 = "CommerceEntry#TABLE_ENTRY_FIELD_VALUE");
			}

			if (isSet(available)) {
				AssertElementPresent(
					key_entryTitle = ${warehouse},
					key_index = 4,
					key_value = ${available},
					locator1 = "CommerceEntry#TABLE_ENTRY_FIELD_VALUE");
			}

			if (isSet(incoming)) {
				AssertElementPresent(
					key_entryTitle = ${warehouse},
					key_index = 5,
					key_value = ${incoming},
					locator1 = "CommerceEntry#TABLE_ENTRY_FIELD_VALUE");
			}
		}
	}

	@summary = "Default summary"
	macro viewInventoryEntryQuantity(incoming = null, onHand = null, onOrder = null, sku = null,) {
		if (isSet(onHand)) {
			AssertElementPresent(
				key_quantity = ${onHand},
				key_sku = ${sku},
				locator1 = "CommerceInventory#INVENTORY_SKU_ON_HAND_QUANTITY");
		}

		if (isSet(available)) {
			AssertElementPresent(
				key_quantity = ${onHand},
				key_sku = ${sku},
				locator1 = "CommerceInventory#INVENTORY_SKU_AVAILABLE_QUANTITY");
		}

		if (isSet(onOrder)) {
			AssertElementPresent(
				key_quantity = ${onOrder},
				key_sku = ${sku},
				locator1 = "CommerceInventory#INVENTORY_SKU_ON_ORDER_QUANTITY");
		}

		if (isSet(incoming)) {
			AssertElementPresent(
				key_quantity = ${incoming},
				key_sku = ${sku},
				locator1 = "CommerceInventory#INVENTORY_SKU_INCOMING_QUANTITY");
		}
	}

}