@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Shopping Experience";

	setUp {
		CommerceConfiguration.commerceSetUp();

		task ("Enable private pages") {
			PagesAdmin.enablePrivatePages();
		}
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "Verify all products sharing a partial sku are populated in the catalog when the user searches products by partial sku"
	@priority = 3
	test AssertMultipleProductsPopulatedSharingSamePartialSKUThatIsSearchedFor {
		property custom.properties = "company.security.strangers.verify=false${line.separator}jsonws.web.service.paths.excludes=";
		property portal.acceptance = "false";

		task ("Given a Minium site with a buyer user") {
			CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

			CommerceEntry.addAccountEntryUser(
				accountName = "Commerce Account",
				accountType = "Business",
				agreeToTermsAndAnswerReminderQuery = "true",
				createNewAccount = "true",
				requireReset = "false",
				userEmailAddress = "buyer@liferay.com",
				userFirstName = "Buyer",
				userLastName = "User",
				userRole = "Buyer",
				userScreenName = "buyeruser",
				userSiteMembership = "Minium");
		}

		task ("When buyer goes to the catalog and searches a partial SKU used by multiple products") {
			User.logoutPG();

			CommerceLogin.miniumLogin(
				password = PropsUtil.get("default.admin.password"),
				urlAppend = "web/minium",
				userEmailAddress = "buyer@liferay.com");

			CommerceNavigator.searchEntry(entryName = "MIN77");
		}

		task ("Then all of the products sharing same partial SKU that is searched are populated") {
			for (var product : list "Lift Support:MIN77825,Muffler/Resonators:MIN77824,Exhaust Clamps:MIN77823,Catalytic Converters:MIN77822") {
				var productName = StringUtil.extractFirst(${product}, ":");
				var productSku = StringUtil.extractLast(${product}, ":");

				AssertElementPresent(
					key_productName = ${productName},
					key_productSku = ${productSku},
					locator1 = "CommerceEntry#PRODUCT_CARD_SKU");
			}

			AssertElementPresent(
				key_productCount = 4,
				locator1 = "CommerceFrontStore#FS_PRODUCT_COUNT");
		}
	}

	@description = "This is a test for COMMERCE-11848. Users can search fields and see the corresponding search suggestions language override (if previously set)"
	@priority = 5
	test CanGlobalSearchViewSearchSuggestionsWithLanguageOverride {
		property custom.properties = "company.security.strangers.verify=false${line.separator}jsonws.web.service.paths.excludes=";
		property portal.acceptance = "true";

		task ("Given a Minium site with a user without a role is created") {
			CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

			JSONUser.addUser(
				userEmailAddress = "testuser@liferay.com",
				userFirstName = "test",
				userLastName = "user",
				userScreenName = "testuser");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "testuser@liferay.com");

			JSONUser.addUserToSite(
				groupName = "Minium",
				userEmailAddress = "testuser@liferay.com");
		}

		task ("And a translation language for Japanese in 'search-x-in-x' key is set") {
			LanguageOverride.openLanguageOverridePortlet();

			Search.searchCP(searchTerm = "search-x-in-x");

			LanguageOverride.updateTranslationOverrideValues(
				languageKey = "search-x-in-x",
				translationOverrideList = "ja-JP",
				translationOverrideValueList = "検索 {0} で {1}");
		}

		task ("When the user logs into Minium site with the display language Japanese") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "testuser@liferay.com",
				userLoginFullName = "test user");

			Navigator.openWithAppendToBaseURL(urlAppend = "ja/web/minium/catalog");
		}

		task ("And searches like a product 'U-Joint' in the global search tab") {
			Click(locator1 = "AppBuilder#SEARCH_BUTTON");

			Type(
				locator1 = "Search#GLOBAL_SEARCH_BAR",
				value1 = "U-Joint");
		}

		task ("Then the search suggestions are translated into the correct language Japanese format set by the admin before") {
			for (var suggestionItem : list "Catalog,Accounts,Orders,All Content") {
				AssertElementPresent(
					key_entryName = "検索 U-Joint で ${suggestionItem}",
					locator1 = "Search#GLOBAL_SEARCH_SEARCH_ENTRY_IN_CONTENT");
			}
		}
	}

	@description = "This is a test for COMMERCE-11847. Users can search fields and see the corresponding search suggestions in the user language"
	@priority = 5
	test CanUserViewGlobalSearchSuggestionsInSetLanguage {
		property custom.properties = "company.security.strangers.verify=false${line.separator}jsonws.web.service.paths.excludes=";
		property portal.acceptance = "true";

		task ("Given a Minium site with a buyer user is created") {
			CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

			CommerceEntry.addAccountEntryUser(
				accountName = "Commerce Account",
				accountType = "Business",
				agreeToTermsAndAnswerReminderQuery = "true",
				createNewAccount = "true",
				requireReset = "false",
				userEmailAddress = "buyer@liferay.com",
				userFirstName = "Buyer",
				userLastName = "User",
				userRole = "Buyer",
				userScreenName = "buyeruser",
				userSiteMembership = "Minium");
		}

		task ("And product short description in pt-BR is set") {
			CommerceProducts.openProductsAdmin();

			CommerceNavigator.searchEntry(entryName = "ABS Sensor");

			CommerceNavigator.gotoEntry(entryName = "ABS Sensor");

			PortletEntry.changeLocale(
				fieldName = "Name",
				locale = "pt-BR");

			Type(
				locator1 = "TextInput#NAME",
				value1 = "Sensor ABS");

			Type(
				locator1 = "CommerceEntry#SHORT_DESCRIPTION_FIELD",
				value1 = "Produto projetado e fabricado para acomodar aplicações OEM");

			Button.clickPublish();
		}

		task ("And the user logs into Minium site") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "buyer@liferay.com",
				userLoginFullName = "Buyer User");
		}

		task ("And the account changes the language to pt-BR") {
			UserBar.gotoDropdownItem(dropdownItem = "Account Settings");

			MyAccount.changeUserLanguage(
				languageName = "português (Brasil)",
				saveButton = "Save");
		}

		task ("When the user searches a product in the global search tab") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/minium/catalog");

			Click(locator1 = "AppBuilder#SEARCH_BUTTON");

			SelectFrameTop();

			Type.sendKeys(
				locator1 = "Search#GLOBAL_SEARCH_BAR",
				value1 = "Sensor ABS");
		}

		task ("Then the short description is shown in pt-BR") {
			AssertElementPresent(
				key_suggestionDescription = "Produto projetado e fabricado para acomodar aplicações OEM",
				key_suggestionName = "Sensor ABS",
				locator1 = "Search#GLOBAL_SEARCH_SUGGESTION_PRODUCT_DESCRIPTION");
		}
	}

	@description = "COMMERCE-6664. I want to be able to disable Search Results widget pagination"
	@priority = 3
	test DisableSearchResultsWidgetPagination {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		MouseOver(locator1 = "CommerceEntry#PAGINATION_BAR");

		Click.clickNoWaitForVisible(locator1 = "CommerceAccelerators#SEARCH_RESULT_OPTIONS");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Navigator.gotoNavTab(navTab = "Pagination");

		Uncheck.uncheckToggleSwitch(
			key_toggleSwitchLabel = "Paginate",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		IFrame.closeFrame();

		AssertElementNotPresent(locator1 = "CommerceEntry#PAGINATION_BAR");
	}

	@description = "COMMERCE-6323. As a buyer, I want to be able to search an entry in Accounts using Global Search and I want the results to be visible in Account Management page"
	@ignore = "true"
	@priority = 3
	test GlobalSearchSearchEntryInAccounts {

		// TODO COMMERCE-6323 GlobalSearchSearchEntryInAccounts pending implementation

	}

	@description = "COMMERCE-6325. As a buyer, I want to be able to search an entry in Orders using Global Search and I want the results to be visible in Orders page"
	@ignore = "true"
	@priority = 3
	test GlobalSearchSearchEntryInOrders {

		// TODO COMMERCE-6325 GlobalSearchSearchEntryInOrders pending implementation

	}

	@description = "COMMERCE-6320. As a buyer, I want to be able to search an Accounts entry using Global Search and I want to be able to click on a suggested entry and get redirected to that account page"
	@ignore = "true"
	@priority = 3
	test GlobalSearchSuggestedAccountsEntry {
		property portal.acceptance = "false";

		// TODO Review

	}

	@description = "COMMERCE-6148. As a buyer, I want to search a product by its name using the Search Bar widget and I want the results to be visible on the Search Results widget"
	@priority = 5
	test SearchBarWidgetSearchProductByName {
		property portal.acceptance = "true";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		Type(
			locator1 = "Search#SEARCH_BAR_WIDGET",
			value1 = "ABS Sensor");

		Button.clickSubmitButton();

		for (var i : list "ABS Sensor,Wear Sensors,3") {
			if (${i} == 3) {
				AssertElementNotPresent(
					key_value = ${i},
					locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");
			}
			else {
				AssertElementPresent(
					key_productName = ${i},
					locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");
			}
		}
	}

	@description = "COMMERCE-6149.As a buyer, I want to search a product by its name using double quotes in the Search Bar widget and that product should be visible on the Search Results widget"
	@priority = 3
	test SearchBarWidgetSearchProductByNameDoubleQuotes {
		property portal.acceptance = "false";

		var product = '''"ABS Sensor"''';

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		Type(
			locator1 = "Search#SEARCH_BAR_WIDGET",
			value1 = ${product});

		Button.clickSubmitButton();

		AssertElementPresent(
			key_value = 1,
			locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");

		AssertElementPresent(
			key_productName = "ABS Sensor",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");

		AssertElementNotPresent(
			key_value = 2,
			locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");
	}

	@description = "COMMERCE-6150. As a buyer, I want to search a product by its name using single quotes in the Search Bar widget and the results should be visible on the Search Results widget"
	@priority = 3
	test SearchBarWidgetSearchProductByNameSingleQuotes {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		Type(
			locator1 = "Search#SEARCH_BAR_WIDGET",
			value1 = "'ABS Sensor'");

		Button.clickSubmitButton();

		for (var i : list "ABS Sensor,Wear Sensors,3") {
			if (${i} == 3) {
				AssertElementNotPresent(
					key_value = ${i},
					locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");
			}
			else {
				AssertElementPresent(
					key_productName = ${i},
					locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");
			}
		}
	}

	@description = "COMMERCE-6151. As a buyer, I want to search a product by typing its SKU in the Search Bar widget and the results should be visible on the Search Results widget"
	@priority = 3
	test SearchBarWidgetSearchProductBySKU {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/minium");

		Type(
			locator1 = "Search#SEARCH_BAR_WIDGET",
			value1 = "MIN93015");

		Button.clickSubmitButton();

		AssertElementPresent(
			key_value = 1,
			locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");

		AssertElementNotPresent(
			key_value = 2,
			locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");
	}

	@description = "COMMERCE-6155. As a buyer, I want to search for products by typing a Category in Search Bar widget and the results should be visible on Search Results widget"
	@priority = 5
	test SearchBarWidgetSearchProductsByCategory {
		property portal.acceptance = "true";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		Type(
			locator1 = "Search#SEARCH_BAR_WIDGET",
			value1 = "Transmission");

		Button.clickSubmitButton();

		for (var i : list "Transmission Fluid,Transmission Cooler Line Assembly,U-Joint,Torque Converters,Wheel Seal - Front,Mount,Drive Shafts,Universal CV Boot,CV Axles") {
			AssertElementPresent(
				key_productName = ${i},
				locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");
		}

		AssertElementNotPresent(
			key_value = 10,
			locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");
	}

	@description = "COMMERCE-6156. As a buyer, I want to search for products by typing different Categories in Search Bar widget and the results should be visible on Search Results widget"
	@priority = 3
	test SearchBarWidgetSearchProductsByDifferentCategories {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		Type(
			locator1 = "Search#SEARCH_BAR_WIDGET",
			value1 = "Transmission Engine");

		Button.clickSubmitButton();

		var products = "Engine Mount,Transmission Fluid,Transmission Cooler Line Assembly,U-Joint,Torque Converters,Wheel Seal - Front,Mount,Drive Shafts,Universal CV Boot,CV Axles,Valve Cover Grommets,Timing Chain,Timing Chain Tensioner,Seal,Pulley Kit,Piston,Oil Pump,Oil Filter,Cams,Bearings";

		for (var i : list ${products}) {
			AssertElementPresent(
				key_productName = ${i},
				locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");
		}

		AssertElementNotPresent(
			key_value = 21,
			locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");
	}

	@description = "COMMERCE-6152. As a buyer, I want to search for different products by typing their SKUs in the Search Bar widget and the results should be visible on the Search Results widget"
	@priority = 3
	test SearchBarWidgetSearchProductsByDifferentSKUs {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		Type(
			locator1 = "Search#SEARCH_BAR_WIDGET",
			value1 = "MIN93015 MIN55861");

		Button.clickSubmitButton();

		for (var i : list "U-Joint,ABS Sensor,3") {
			if (${i} == 3) {
				AssertElementNotPresent(
					key_value = ${i},
					locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");
			}
			else {
				AssertElementPresent(
					key_productName = ${i},
					locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");
			}
		}
	}

	@description = "COMMERCE-6154. As a buyer, I want to search for products by typing different Specification Values in Search Bar widget and the results should be visible on Search Results widget"
	@priority = 3
	test SearchBarWidgetSearchProductsByDifferentSpecificationValues {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		Type(
			locator1 = "Search#SEARCH_BAR_WIDGET",
			value1 = "Plastic Ceramic");

		Button.clickSubmitButton();

		for (var i : list "1,Timing Chain Tensioner,2,Premium Brake Pads,3") {
			if (${i} == 1) {
				AssertElementPresent(
					key_value = ${i},
					locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");
			}
			else if (${i} == "Timing Chain Tensioner") {
				AssertElementPresent(
					key_productName = ${i},
					locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");
			}
			else if (${i} == 2) {
				AssertElementPresent(
					key_value = ${i},
					locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");
			}
			else if (${i} == "Premium Brake Pads") {
				AssertElementPresent(
					key_productName = ${i},
					locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");
			}
			else {
				AssertElementNotPresent(
					key_value = ${i},
					locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");
			}
		}
	}

	@description = "COMMERCE-6153. As a buyer, I want to search for products by typing a Specifications Value in Search Bar widget and the results should be visible on Search Results widget"
	@priority = 3
	test SearchBarWidgetSearchProductsBySpecificationValue {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		Type(
			locator1 = "Search#SEARCH_BAR_WIDGET",
			value1 = "Plastic");

		Button.clickSubmitButton();

		AssertElementPresent(
			key_value = 1,
			locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");

		AssertElementPresent(
			key_productName = "Timing Chain Tensioner",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");

		AssertElementNotPresent(
			key_value = 2,
			locator1 = "CommerceAccelerators#ASSERT_PRODUCT_CARD");
	}

	@description = "Verify users can search products by partial SKU in the catalog"
	@priority = 5
	test SearchProductsByPartialSKU {
		property custom.properties = "company.security.strangers.verify=false${line.separator}jsonws.web.service.paths.excludes=";
		property portal.acceptance = "true";

		task ("Given a Minium site with a buyer user") {
			CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

			CommerceEntry.addAccountEntryUser(
				accountName = "Commerce Account",
				accountType = "Business",
				agreeToTermsAndAnswerReminderQuery = "true",
				createNewAccount = "true",
				requireReset = "false",
				userEmailAddress = "buyer@liferay.com",
				userFirstName = "Buyer",
				userLastName = "User",
				userRole = "Buyer",
				userScreenName = "buyeruser",
				userSiteMembership = "Minium");
		}

		task ("And given a product with a SKU") {
			CommerceJSONProductsAPI._addCommerceProduct(
				catalogName = "Minium",
				productName = "Test Simple Product",
				productType = "Simple",
				sku = "ProductSku1001");
		}

		task ("When the buyer goes to the catalog and searches the product by partial SKU") {
			User.logoutPG();

			CommerceLogin.miniumLogin(
				password = PropsUtil.get("default.admin.password"),
				urlAppend = "web/minium",
				userEmailAddress = "buyer@liferay.com");

			CommerceNavigator.searchEntry(entryName = "Sku1001");
		}

		task ("Then the product related to that SKU is populated") {
			AssertElementPresent(
				key_productName = "Test Simple Product",
				key_productSku = "ProductSku1001",
				locator1 = "CommerceEntry#PRODUCT_CARD_SKU");

			AssertElementPresent(
				key_productCount = 1,
				locator1 = "CommerceFrontStore#FS_PRODUCT_COUNT");
		}
	}

	@description = "COMMERCE-6145. As a buyer, I want to change the number of items to display for every page from Search Results widget pagination bar"
	@priority = 3
	test SearchResultsWidgetChangeNumberOfItemsToDisplayFromPaginationBar {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		AnnouncementsPortlet.configurePaginationCP(itemsPerPage = 8);

		AssertElementPresent(
			key_numberEntries = "8 Entries",
			locator1 = "Dropdown#ENTRIES_NUMBER");
	}

	@description = "COMMERCE-6147. As a buyer, I want to switch from one results page to another in Search Results"
	@priority = 3
	test SearchResultsWidgetChangeResultsPage {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		var productsNamePage1 = "";
		var curr_productNamePage1 = "";

		for (var iterator : list "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20") {
			Click(
				key_index = ${iterator},
				locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX");

			WaitForElementPresent(locator1 = "CommerceFrontStore#FS_PRODUCT_NAME");

			var curr_productNamePage1 = selenium.getText("CommerceFrontStore#FS_PRODUCT_NAME");

			if (${iterator} == 1) {
				var productsNamePage1 = ${curr_productNamePage1};
			}
			else {
				var productsNamePage1 = "${productsNamePage1},${curr_productNamePage1}";
			}

			CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");
		}

		Click(
			key_pageNumber = 2,
			locator1 = "CommerceNavigation#PAGINATION_ANY_PAGE");

		var iterator = 1;

		for (var curr_productNamePage1 : list ${productsNamePage1}) {
			AssertTextNotEquals(
				key_index = ${iterator},
				locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
				value1 = ${curr_productNamePage1});

			var iterator = ${iterator} + 1;
		}
	}

	@description = "COMMERCE-6146. As a buyer, I want to change the number of items to display for every page from Search Results widget configuration"
	@priority = 3
	test SearchResultsWidgetEditNumberOfItemsToDisplayFromConfiguration {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		MouseOver(locator1 = "CommerceEntry#PAGINATION_BAR");

		Click.clickNoWaitForVisible(locator1 = "CommerceAccelerators#SEARCH_RESULT_OPTIONS");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Navigator.gotoNavTab(navTab = "Pagination");

		Type(
			key_fieldLabel = "Number of Items to Display",
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = 4);

		Button.clickSave();

		IFrame.closeFrame();

		AssertElementPresent(
			key_numberEntries = "4 Entries",
			locator1 = "Dropdown#ENTRIES_NUMBER");
	}

	@description = "COMMERCE-6663. I want to be able to use ADT to render Search Results widget and I want to be able to select a Display Template and see it applied to the widget"
	@priority = 3
	test UseADTInSearchResultsWidget {
		property portal.acceptance = "false";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceProducts.openProductsAdmin();

		CommerceProducts.searchProduct(search = "U-Joint");

		CommerceNavigator.gotoEntry(entryName = "U-Joint");

		var productId = selenium.getAttribute("CommerceEntry#HEADER_ID_DATA_QA_ID");

		ApplicationsMenu.gotoSite(site = "Minium");

		ProductMenu.gotoPortlet(
			category = "Design",
			portlet = "Templates");

		Navigator.gotoNavTab(navTab = "Widget Templates");

		CommerceAcceleratorsInitializer.addADT(
			adtType = "Search Results",
			fieldNameList = "Commerce Product Catalog Entries*");

		ApplicationsMenu.gotoSite(site = "Minium");

		MouseOver(locator1 = "CommerceEntry#PAGINATION_BAR");

		Click.clickNoWaitForVisible(locator1 = "CommerceAccelerators#SEARCH_RESULT_OPTIONS");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Navigator.gotoNavTab(navTab = "Render Selection");

		if (IsElementNotPresent(key_selectFieldLabel = "Product List Renderer", locator1 = "Select#ANY")) {
			Click(
				key_text = "Product List Renderer",
				locator1 = "Link#ANY");
		}

		AssertTextEquals(
			key_selectFieldLabel = "Product List Renderer",
			locator1 = "Select#ANY",
			value1 = "Default");

		Click(
			key_radioOption = "Use Application Display Template",
			locator1 = "CommerceEntry#RADIO_BUTTON");

		if (IsElementNotPresent(key_text = "Display Template", locator1 = "Select#ANY")) {
			Click(
				key_text = "Display Template",
				locator1 = "Link#ANY");
		}

		WaitForElementPresent(
			key_fieldLabel = "Display Template",
			locator1 = "CommerceEntry#COMMERCE_FACET_BUTTON");

		Click(
			key_fieldLabel = "Display Template",
			locator1 = "CommerceEntry#COMMERCE_FACET_BUTTON");

		Click(
			key_entry = "Search Results Test ADT",
			locator1 = "CommerceEntry#COMMERCE_FACET_DROPDOWN");

		Navigator.gotoNavTab(navTab = "Pagination");

		Type(
			key_fieldLabel = "Number of Items to Display",
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = 1);

		Button.clickSave();

		IFrame.closeFrame();

		SelectFrameTop();

		AssertTextEquals(
			locator1 = "CommerceAccelerators#SORT_BY_DROPDOWN",
			value1 = "Sort By: Relevance");

		AssertTextEquals.assertPartialText(
			key_portletName = "Search Results",
			locator1 = "Portlet#BODY",
			value1 = ${productId});
	}

}