@component-name = "portal-bpm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Digital Signature";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginUI();

		task ("Configure digital signature with credentials") {
			PortalSettings.openInstanceSettingsAdmin();

			SystemSettings.gotoConfiguration(
				configurationCategory = "Digital Signature",
				configurationName = "Digital Signature Configuration",
				configurationScope = "Virtual Instance Scope");

			FormFields.enableCheckbox(fieldName = "enabled");

			DigitalSignature.enableDigitalSignature(
				environment = "Sandbox",
				siteStrategy = "Always Inherit");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "LPS-131206. Verify if its possible download envelopes by Envelope Description "
	@priority = 3
	test CanDownloadEnvelopeByEnvelopeDescription {
		task ("Given a digital signature envelope is created") {
			DigitalSignature.createEnvelope(
				addEmail = "test@liferay.com",
				addFullName = "Recipient Full Name",
				addMessage = "Email Message",
				addName = "Test",
				addSubject = "Email Subject",
				dmDocumentFile = "Alice's Adventures in Wonderland.pdf");

			Button.click(button = "Send");

			Alert.viewSuccessMessageText(successMessage = "Your envelope was created successfully.");
		}

		task ("When the user goes to Envelope Description") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Digital Signature");
		}

		task ("Then the digital signature's envelope can be downloaded") {
			DigitalSignature.enabledDigitalSignatureDownload(documentName = "Test");
		}
	}

	@description = "LPS-131206. Verify if its possible download envelopes by Envelope List"
	@priority = 3
	test CanDownloadEnvelopeByEnvelopeList {
		task ("When a User Test Goes to Envelope List") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Digital Signature");
		}

		task ("Then the digital signature can be downloaded") {
			DigitalSignature.viewEnabledDownload(documentName = "Test");
		}
	}

	@description = "LPS-131206. Verify if is possible navigate between pages"
	@priority = 3
	test CanNavigateBetweenPages {
		task ("When a User Test Goes to Digital Signature") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Digital Signature");
		}

		task ("Then it is possible to navigate between pages") {
			DigitalSignature.canPageNavigator();
		}
	}

	@description = "LPS-131206. Verify if the Create Date column shows the date correctly after created one envelope in local Timezone "
	@priority = 4
	test CanViewCorrectDate {
		task ("When a digital envelope is created") {
			DigitalSignature.createEnvelope(
				addEmail = "test@liferay.com",
				addFullName = "Recipient Full Name",
				addMessage = "Email Message",
				addName = "Poshi Test CanViewCorrectDate",
				addSubject = "Email Subject",
				dmDocumentFile = "Alice's Adventures in Wonderland.pdf");

			Button.click(button = "Send");

			Alert.viewSuccessMessageText(successMessage = "Your envelope was created successfully.");
		}

		task ("Then the date the digital signature was created is shown") {
			Refresh();

			DigitalSignature.viewCreateDate();

			DigitalSignature.deleteEnvelope(envelopeName = "Poshi Test CanViewCorrectDate");

			DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

			DMDocument.deleteCP(dmDocumentTitle = "DM Document Title");

			RecycleBin.openRecycleBinAdmin(siteURLKey = "guest");

			RecycleBin.emptyCP();
		}
	}

	@description = "LPS-131206. Verify if its possible view envelope details"
	@priority = 4
	test CanViewEnvelopeDetails {
		task ("When a User Test Goes to Digital Signature") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Digital Signature");
		}

		task ("Then you can see details of the envelope") {
			DigitalSignature.viewEnvelopeDetails(documentName = "Test");
		}
	}

	@description = "LPS-131206. Verify if Digital Signature can be enabled"
	@priority = 5
	test DigitalSignatureCanBeEnabled {
		task ("When a User Test Goes to Digital Signature") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Digital Signature");
		}

		task ("Then the status is checked") {
			DigitalSignature.viewDigitalSignaturestatus(viewStatus = "Sent");
		}
	}

	@description = "LPS-131206. Verify if is possible view on list when an envelope have more recipients than one"
	@priority = 4
	test HaveMoreRecipientsThanOne {
		task ("Given a digital envelope is created") {
			DigitalSignature.createEnvelope(
				addEmail = "test@liferay.com",
				addFullName = "Recipient Full Name",
				addMessage = "Email Message",
				addName = "Poshi Test HaveMoreRecipientsThanOne",
				addSubject = "Email Subject",
				dmDocumentFile = "Alice's Adventures in Wonderland.pdf");
		}

		task ("When the user adds more than one recipient") {
			DigitalSignature.addMoreRecipient(
				fullName = "Recipient Full Name 2",
				recipientEmail = "test2@liferay.com");

			Alert.viewSuccessMessageText(successMessage = "Your envelope was created successfully.");
		}

		task ("Then the user can see that an envelope have more than one recipient on list") {
			Refresh();

			DigitalSignature.viewMoreRecipient();

			DigitalSignature.deleteEnvelope(envelopeName = "Poshi Test HaveMoreRecipientsThanOne");

			AssertElementNotPresent(locator1 = "DigitalSignatureListView#DIGITAL_SIGNATURE_RECIPIENTS_BADGE");

			DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

			DMDocument.deleteCP(dmDocumentTitle = "DM Document Title");

			RecycleBin.openRecycleBinAdmin(siteURLKey = "guest");

			RecycleBin.emptyCP();
		}
	}

}