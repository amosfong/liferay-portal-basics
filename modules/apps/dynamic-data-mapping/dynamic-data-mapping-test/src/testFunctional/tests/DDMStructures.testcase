@component-name = "portal-bpm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Dynamic Data Mapping";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			DDLList.tearDownCP();

			DDLDataDefinition.tearDownCP();

			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");

			Site.tearDownCP();
		}
	}

	@description = "This is a use case for LPS-80085."
	@priority = 3
	test AddWebContentTemplateWithSmallImage {
		var portalURL = PropsUtil.get("portal.url");

		HeadlessSite.addSite(siteName = "Staging Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Staging Site Name",
			layoutName = "Staging Page");

		Navigator.openSiteURL(siteName = "Staging Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			portlet = "Staging");

		Staging.activateStagingCP(
			pageVersioningEnabled = "true",
			siteName = "Staging Site Name");

		Navigator.openSiteURL(siteName = "Staging Site Name");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Page",
			siteName = "Staging Site Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Templates");

		WebContentTemplates.addCP(
			imageSourceURL = "${portalURL}/webdav/staging-site-name-staging/document_library/Document_1.jpg",
			templateName = "WC Template Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Templates");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		WebContentTemplates.viewCardsEntryCP2(
			templateName = "WC Template Name",
			templateSmallImage = "true");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Page",
			siteName = "Staging Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		ProductMenu.gotoLiveSite(site = "Staging Site Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Templates");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		WebContentTemplates.viewCardsEntryCP2(
			templateName = "WC Template Name",
			templateSmallImage = "true");
	}

	@description = "This is a use case for LPS-68661 and LPS-77957."
	@priority = 4
	test CreateWebContentStructureAndTemplate {
		HeadlessSite.addSite(siteName = "Staging Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Staging Site Name",
			layoutName = "Staging Page");

		Navigator.openSiteURL(siteName = "Staging Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			portlet = "Staging");

		Staging.activateStagingCP(
			pageVersioningEnabled = "true",
			siteName = "Staging Site Name");

		Navigator.openSiteURL(siteName = "Staging Site Name");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Page",
			siteName = "Staging Site Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Structures");

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Structures");

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Templates");

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Templates");

		WebContentTemplates.viewCP(
			templateDescription = "WC Template Description",
			templateName = "WC Template Name");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Page",
			siteName = "Staging Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		ProductMenu.gotoLiveSite(site = "Staging Site Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Structures");

		AssertElementNotPresent(locator1 = "Button#PLUS");

		for (var menuItem : list "Edit,Edit Default Values,Permissions,Copy") {
			LexiconEntry.viewNoEntryMenuItem(
				menuItem = ${menuItem},
				rowEntry = "WC Structure Name");
		}

		Navigator.gotoNavItem(navItem = "Templates");

		AssertElementNotPresent(locator1 = "Button#PLUS");

		for (var menuItem : list "Edit,Permissions,Copy") {
			LexiconEntry.viewNoEntryMenuItem(
				menuItem = ${menuItem},
				rowEntry = "WC Template Name");
		}
	}

	@description = "This is a use case for LPS-67094."
	@priority = 4
	test ViewCacheableCheckbox {
		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Structures");

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Templates");

		LexiconEntry.gotoAdd();

		WebContentTemplates.inputTemplateAddScreenFields(
			templateDescription = "WC Template Description",
			templateName = "WC Template Name");

		AssertElementPresent(locator1 = "DDMEditTemplate#CACHEABLE_CHECKBOX");

		WebContentTemplates.inputTemplateAddScreenFields(
			structureName = "WC Structure Name",
			templateFieldNames = "Text");

		Button.clickSave();

		Alert.viewSuccessMessage();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Templates");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "WC Template Name");

		AssertElementPresent(locator1 = "DDMEditTemplate#CACHEABLE_CHECKBOX");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "Test",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.addPage(pageName = "Test Page");

		Navigator.gotoPage(pageName = "Test Page");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		Navigator.gotoPage(pageName = "Test Page");

		WebContentDisplayPortlet.gotoEditTemplate(webContentTitle = "WC WebContent Title");

		AssertElementPresent(locator1 = "DDMEditTemplate#CACHEABLE_CHECKBOX");
	}

	@description = "This is a use case for LPS-69593 and LRQA-61632. Assert the selected image is kept in Image field under localized."
	@priority = 4
	test ViewFieldTranslationsWithImageField {
		property custom.properties = "feature.flag.LPD-11228=true${line.separator}feature.flag.LPD-15596=true";
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Structures");

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Image",
			fieldName = "Image");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Navigator.gotoNavItem(navItem = "Templates");

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Image",
			templateName = "WC Template Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addCP(webContentTitle = "English (United States) Title");

		Click(
			fieldLabel = "Image",
			locator1 = "Button#BUTTON_LABEL",
			text = "Select");

		ItemSelector.uploadFileWithSelectFrameNoLoading(
			navTab = "Web Content Images",
			uploadFileName = "Document_3.png");

		FormFields.editTextDescription(
			fieldName = "Image",
			fieldValue = "English (United States) Image Description");

		PortletEntry.changeLocale(
			locale = "es-ES",
			translated = "true");

		FormFields.editText(
			fieldName = "title",
			fieldValue = "Spanish (Spain) Title");

		FormFields.editTextDescription(
			fieldName = "Image",
			fieldValue = "Spanish (Spain) Image Description");

		PortletEntry.changeLocale(
			locale = "pt-BR",
			translated = "true");

		FormFields.editText(
			fieldName = "title",
			fieldValue = "Portuguese (Brazil) Title");

		FormFields.editTextDescription(
			fieldName = "Image",
			fieldValue = "Portuguese (Brazil) Image Description");

		PortletEntry.publish();

		AssertClick(
			buttonName = "Publish With Permissions",
			locator1 = "WCEditWebContent#PUBLISH_WITH_PERMISSIONS_BUTTON",
			value1 = "Publish With Permissions");

		WaitForElementPresent(
			locator1 = "Modal#SELECT_WITH_LABEL",
			selectLabel = "Viewable by");

		AssertClick(
			buttonName = "Publish",
			locator1 = "Modal#PRIMARY_BUTTON",
			value1 = "Publish");

		WebContentAdmin.gotoEntry(entry = "English (United States) Title");

		FormFields.viewTextValue(
			fieldName = "title",
			fieldValue = "English (United States) Title");

		AssertAttributeValue(
			key_fieldFieldLabel = "Image",
			locator1 = "TextInput#SELECTOR_INPUT",
			value1 = "value",
			value2 = "Document_3 (1).png");

		FormFields.viewTextValueDescription(
			fieldName = "Image",
			fieldValue = "English (United States) Image Description");

		PortletEntry.changeLocale(
			locale = "es-ES",
			translated = "true");

		FormFields.viewTextValue(
			fieldName = "title",
			fieldValue = "Spanish (Spain) Title");

		AssertAttributeValue(
			key_fieldFieldLabel = "Image",
			locator1 = "TextInput#SELECTOR_INPUT",
			value1 = "value",
			value2 = "Document_3.png");

		FormFields.viewTextValueDescription(
			fieldName = "Image",
			fieldValue = "Spanish (Spain) Image Description");

		PortletEntry.changeLocale(
			locale = "pt-BR",
			translated = "true");

		FormFields.viewTextValue(
			fieldName = "title",
			fieldValue = "Portuguese (Brazil) Title");

		AssertAttributeValue(
			key_fieldFieldLabel = "Image",
			locator1 = "TextInput#SELECTOR_INPUT",
			value1 = "value",
			value2 = "Document_3 (2).png");

		FormFields.viewTextValueDescription(
			fieldName = "Image",
			fieldValue = "Portuguese (Brazil) Image Description");
	}

}