definition {

	@summary = "Default summary"
	macro _deleteJobSchedulerTrigger(triggerName = null) {
		Variables.assertDefined(parameterList = ${triggerName});

		var baseURL = ${baseURL};
		var userPassword = PropsUtil.get("default.admin.password");

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var triggerId = JSONJobScheduler._getJobSchedulerTriggerIdByName(triggerName = ${triggerName});

		var curl = '''
			${baseURL}/api/jsonws/dispatch.dispatchtrigger/delete-dispatch-trigger \
				-u test@liferay.com:${userPassword} \
				-d dispatchTriggerId=${triggerId}
		''';

		JSONCurlUtil.post(${curl});
	}

	@summary = "Default summary"
	macro _deleteJobSchedulerTriggers() {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var triggerIds = JSONJobScheduler._getJobSchedulerTriggerIds();
		var userPassword = PropsUtil.get("default.admin.password");

		if (${triggerIds} != "") {
			for (var triggerId : list ${triggerIds}) {
				echo("Deleting Job Scheduler Trigger with ID: ${triggerId}");

				var curl = '''
					${baseURL}/api/jsonws/dispatch.dispatchtrigger/delete-dispatch-trigger \
						-u test@liferay.com:${userPassword} \
						-d dispatchTriggerId=${triggerId}
				''';

				JSONCurlUtil.post(${curl});
			}
		}
		else {
			echo("No Job Scheduler Triggers to be deleted");
		}
	}

	@summary = "Default summary"
	macro _deleteJobSchedulerTriggersByType(taskExecutorType = null) {
		Variables.assertDefined(parameterList = ${taskExecutorType});

		var baseURL = ${baseURL};
		var userPassword = PropsUtil.get("default.admin.password");

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (isSet(triggerCount)) {
			var triggerCount = ${triggerCount};
		}
		else {
			var triggerCount = 100;
		}

		var curl = '''
			${baseURL}/api/jsonws/dispatch.dispatchtrigger/get-dispatch-triggers \
				-u test@liferay.com:${userPassword} \
				-d start=0 \
				-d end=${triggerCount}
		''';

		var triggerIds = JSONCurlUtil.post(${curl}, "$.[?(@['dispatchTaskExecutorType'] == '${taskExecutorType}')].['dispatchTriggerId']");

		if (${triggerIds} != "") {
			for (var triggerId : list ${triggerIds}) {
				echo("Deleting Job Scheduler Trigger with ID: ${triggerId}");

				var curl = '''
					${baseURL}/api/jsonws/dispatch.dispatchtrigger/delete-dispatch-trigger \
						-u test@liferay.com:${userPassword} \
						-d dispatchTriggerId=${triggerId}
				''';

				JSONCurlUtil.post(${curl});
			}
		}
		else {
			echo("No Job Scheduler Triggers to be deleted");
		}
	}

	@summary = "Default summary"
	macro _getJobSchedulerTriggerIdByName(triggerName = null) {
		Variables.assertDefined(parameterList = ${triggerName});

		var baseURL = ${baseURL};
		var userPassword = PropsUtil.get("default.admin.password");

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (isSet(triggerCount)) {
			var triggerCount = ${triggerCount};
		}
		else {
			var triggerCount = 100;
		}

		var curl = '''
			${baseURL}/api/jsonws/dispatch.dispatchtrigger/get-dispatch-triggers \
				-u test@liferay.com:${userPassword} \
				-d start=0 \
				-d end=${triggerCount}
		''';

		var triggerId = JSONCurlUtil.post(${curl}, "$.[?(@['name'] == '${triggerName}')]['dispatchTriggerId']");

		return ${triggerId};
	}

	@summary = "Default summary"
	macro _getJobSchedulerTriggerIds() {
		var baseURL = ${baseURL};
		var userPassword = PropsUtil.get("default.admin.password");

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (isSet(triggerCount)) {
			var triggerCount = ${triggerCount};
		}
		else {
			var triggerCount = 100;
		}

		var curl = '''
			${baseURL}/api/jsonws/dispatch.dispatchtrigger/get-dispatch-triggers \
				-u test@liferay.com:${userPassword} \
				-d start=0 \
				-d end=${triggerCount}
		''';

		var triggerIds = JSONCurlUtil.post(${curl}, "$..['dispatchTriggerId']");

		return ${triggerIds};
	}

	@summary = "Default summary"
	macro createJobSchedulerTrigger(name = null, dispatchTaskExecutorType = null) {
		var userId = JSONUserAPI._getUserIdByEmailAddress(userEmailAddress = "test@liferay.com");
		var userPassword = PropsUtil.get("default.admin.password");

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var curl = '''
			${baseURL}/api/jsonws/dispatch.dispatchtrigger/add-dispatch-trigger \
				-u test@liferay.com:${userPassword} \
				-d externalReferenceCode='' \
				-d userId=${userId} \
				-d dispatchTaskExecutorType=${dispatchTaskExecutorType} \
				-d -dispatchTaskSettingsUnicodeProperties= \
				-d name=${name}
		''';

		JSONCurlUtil.post(${curl});
	}

}