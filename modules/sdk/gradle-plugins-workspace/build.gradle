import de.undercouch.gradle.tasks.download.Download

apply plugin: "de.undercouch.download"

task downloadNodeInfo(type: Download)

String gradleVersion = "8.5"

if (Boolean.getBoolean("gradle.test.enabled")) {
	apply from: "test.gradle"
}

tasks.eclipse {
	ext.gradleVersion = gradleVersion
}

cleanCopyLibs {
	enabled = false
}

configurations {
	portalTestSnapshot {
		exclude group: "com.liferay.portal", module: "com.liferay.portal.impl"
		exclude group: "com.liferay.portal", module: "com.liferay.portal.kernel"
	}
}

dependencies {
	api group: "biz.aQute.bnd", name: "biz.aQute.bnd.gradle", version: "6.4.0"
	api group: "com.bmuschko", name: "gradle-docker-plugin", version: "6.7.0"
	api group: "com.fasterxml.jackson.dataformat", name: "jackson-dataformat-yaml", version: "2.16.1"
	api group: "com.liferay", name: "com.liferay.ant.bnd", version: "3.2.12"
	api(group: "com.liferay", name: "com.liferay.gradle.plugins", version: "16.0.0") {
		exclude group: "biz.aQute.bnd", module: "biz.aQute.bnd"
	}
	api(group: "com.liferay", name: "com.liferay.gradle.plugins.css.builder", version: "5.0.14") {
		exclude group: "biz.aQute.bnd", module: "biz.aQute.bnd"
	}
	api(group: "com.liferay", name: "com.liferay.gradle.plugins.poshi.runner", version: "4.0.20") {
		exclude group: "biz.aQute.bnd", module: "biz.aQute.bnd"
	}
	api group: "com.liferay", name: "com.liferay.gradle.plugins.source.formatter", version: "5.2.177"
	api group: "com.liferay", name: "com.liferay.gradle.plugins.target.platform", version: "4.0.1"
	api(group: "com.liferay", name: "com.liferay.gradle.plugins.theme.builder", version: "2.0.27") {
		exclude group: "biz.aQute.bnd", module: "biz.aQute.bnd"
	}
	api(group: "com.liferay", name: "com.liferay.portal.tools.bundle.support", version: "3.7.6") {
		exclude group: "biz.aQute.bnd", module: "biz.aQute.bnd"
	}
	api(group: "com.liferay", name: "com.liferay.portal.tools.soy.builder", version: "3.0.6") {
		exclude group: "com.google.template", module: "soy"
		exclude group: "org.codehaus.plexus"
		exclude group: "org.sonatype.plexus"
	}
	api group: "com.liferay", name: "com.liferay.release.util", version: "1.0.0"
	api group: "de.undercouch", name: "gradle-download-task", version: "5.4.0"
	api group: "net.java.dev.jna", name: "jna", version: "5.8.0"
	api group: "net.saliman", name: "gradle-properties-plugin", version: "1.4.6"
	api group: "org.ow2.asm", name: "asm", version: "5.1"

	compileInclude files("lib/com.liferay.workspace.bundle.url.codec-1.0.0.jar")

	compileOnly fileTree(builtBy: [rootProject.tasks.getByName("extractGradleApi" + gradleVersion.replace(".", ""))], dir: new File(rootProject.buildDir, "gradle-${gradleVersion}"), excludes: ["**/snakeyaml*"])
}

downloadNodeInfo {
	dest new File(buildDir, ".node_info.json")
	onlyIfNewer true
	src "https://nodejs.org/dist/index.json"
}

eclipse.classpath.file {
	whenMerged {
		classpath ->

		classpath.entries.removeAll {
			entry -> (entry.kind == "src") && (entry.path == "build/gradleTest/src/groovy")
		}
	}
}

liferayOSGi {
	expandCompileInclude = true
}

processResources {
	from downloadNodeInfo
}

updateFileVersions {
	match(/name: "com\.liferay\.gradle\.plugins\.workspace", version: "(\d.+)"/, "../../../modules/sdk/project-templates/project-templates-workspace/src/main/resources/archetype-resources/settings.gradle")
	match(/name: "com\.liferay\.gradle\.plugins\.workspace", version: "(\d.+)"/, "../../../workspaces/liferay-sample-workspace/settings.gradle")
	match(/name: "com\.liferay\.gradle\.plugins\.workspace", version: "(\d.+)"/, "../../../workspaces/refresh_liferay_sample_workspace.sh")
}